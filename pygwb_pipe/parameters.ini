[data_specs]
interferometer_list: ["H1", "L1"]
; Start GPS time
t0: 1247644138
; End GPS time
tf: 1247645038
; Private -> running on LIGO data grid
data_type: public
; Detector name will be added later
channel: GWOSC-16KHZ_R1_STRAIN
; Time shift (in s)
time_shift: 0
[preprocessing]
; Sample rate after resampling
new_sample_rate: 4096
; Sampled rate of input data
input_sample_rate: 16384
; Tag for the read_data function
tag: C00
; High pass filter cutoff frequency
cutoff_frequency: 11
; Also fftlength in pre-processing
segment_duration: 192
; No. of secs to crop after highpass and resampling (default = 2 sec)
number_cropped_seconds: 2
; Filter used for downsampling (default = 'hamming')
window_downsampling: hamming
; Filter type used for downsampling
ftype: fir
[gating]
; gating parameters
; Running self-gating or not
gate_data: False
; Whitening the data before gating
gate_whiten: True
; Tzero for gating: half-width time duration (seconds) in which the timeseries is set to zero
gate_tzero: 1
; half-width time duration (seconds) in which the Planck window is tapered
gate_tpad: 0.5
; amplitude threshold, if the data exceeds this value a gating window will be placed
gate_threshold: 50
; time duration (seconds) over which gating points will be clustered
cluster_window: 0.5
[window_fft_specs]
; Window used for fft (used CSD and PSD estimation)
window_fftgram: hann
[density_estimation]
; Final frequency resolution of CSD and PSD 
frequency_resolution: 0.03125
; Coarse graining : 0 - pwelch PSD estimate - 1 - corase-grain PSD estimate
N_average_segments_welch_psd: 2
coarse_grain: 0
overlap_factor: 0.5
zeropad_csd: True
[postprocessing]
polarization: tensor 
; Power law index
alpha: 0
; Reference frequency in Hz
fref: 25
; Lower frequency boudn used for analysis in Hz
flow: 20
; Upper frequency bound used for analysis in Hz
fhigh: 1726
[data_quality]
notch_list_path: /home/arianna.renzini/PROJECTS/pygwb_main/test/test_data/Official_O3_HL_notchlist.txt
; calibration bias factor
calibration_epsilon: 0
; alphas for the dsc
alphas_delta_sigma_cut: [-5, 0, 3]
; cut-off value for the dsc
delta_sigma_cut: 0.2
; Option to return naive and sliding sigmas from delta sigma cut
return_naive_and_averaged_sigmas: False
[output]
; the type of save data file (can be json, pickle, npz or hdf5)
save_data_type: npz
[local_data]
