Search.setIndex({"docnames": ["CBC_simulator_tutorial", "Understand_dsc", "about", "api", "api/pygwb.baseline", "api/pygwb.baseline.Baseline", "api/pygwb.baseline.get_baselines", "api/pygwb.coherence", "api/pygwb.coherence.calculate_coherence", "api/pygwb.constants", "api/pygwb.delta_sigma_cut", "api/pygwb.delta_sigma_cut.dsc_cut", "api/pygwb.delta_sigma_cut.run_dsc", "api/pygwb.detector", "api/pygwb.detector.Interferometer", "api/pygwb.network", "api/pygwb.network.Network", "api/pygwb.notch", "api/pygwb.notch.StochNotch", "api/pygwb.notch.StochNotchList", "api/pygwb.notch.comb", "api/pygwb.notch.power_lines", "api/pygwb.notch.pulsar_injections", "api/pygwb.omega_spectra", "api/pygwb.omega_spectra.OmegaSpectrogram", "api/pygwb.omega_spectra.OmegaSpectrum", "api/pygwb.omega_spectra.reweight_spectral_object", "api/pygwb.orfs", "api/pygwb.orfs.Sminus", "api/pygwb.orfs.Splus", "api/pygwb.orfs.T_right_left", "api/pygwb.orfs.Tminus", "api/pygwb.orfs.Tplus", "api/pygwb.orfs.Vminus", "api/pygwb.orfs.Vplus", "api/pygwb.orfs.calc_orf", "api/pygwb.orfs.omega_tangent_bisector", "api/pygwb.orfs.tangent_vector", "api/pygwb.parameters", "api/pygwb.parameters.Parameters", "api/pygwb.parameters.ParametersHelp", "api/pygwb.pe", "api/pygwb.pe.BrokenPowerLawModel", "api/pygwb.pe.GWBModel", "api/pygwb.pe.PVPowerLawModel", "api/pygwb.pe.PVPowerLawModel2", "api/pygwb.pe.PowerLawModel", "api/pygwb.pe.SchumannModel", "api/pygwb.pe.SmoothBrokenPowerLawModel", "api/pygwb.pe.TVSPowerLawModel", "api/pygwb.pe.TripleBrokenPowerLawModel", "api/pygwb.postprocessing", "api/pygwb.postprocessing.calc_Y_sigma_from_Yf_sigmaf", "api/pygwb.postprocessing.calculate_point_estimate_sigma_spectra", "api/pygwb.postprocessing.combine_spectra_with_sigma_weights", "api/pygwb.postprocessing.odd_even_segment_postprocessing", "api/pygwb.postprocessing.postprocess_Y_sigma", "api/pygwb.preprocessing", "api/pygwb.preprocessing.apply_high_pass_filter", "api/pygwb.preprocessing.preprocessing_data_channel_name", "api/pygwb.preprocessing.preprocessing_data_gwpy_timeseries", "api/pygwb.preprocessing.preprocessing_data_timeseries_array", "api/pygwb.preprocessing.read_data", "api/pygwb.preprocessing.resample_filter", "api/pygwb.preprocessing.self_gate_data", "api/pygwb.preprocessing.set_start_time", "api/pygwb.preprocessing.shift_timeseries", "api/pygwb.simulator", "api/pygwb.simulator.Simulator", "api/pygwb.spectral", "api/pygwb.spectral.before_after_average", "api/pygwb.spectral.coarse_grain", "api/pygwb.spectral.coarse_grain_exact", "api/pygwb.spectral.coarse_grain_naive", "api/pygwb.spectral.coarse_grain_spectrogram", "api/pygwb.spectral.cross_spectral_density", "api/pygwb.spectral.fftgram", "api/pygwb.spectral.power_spectral_density", "api/pygwb.spectral.pwelch_psd", "api/pygwb.spectral.running_mean", "api/pygwb.statistical_checks", "api/pygwb.statistical_checks.StatisticalChecks", "api/pygwb.statistical_checks.run_statistical_checks_from_file", "api/pygwb.statistical_checks.sortingFunction", "api/pygwb.util", "api/pygwb.util.StatKS", "api/pygwb.util.calc_bias", "api/pygwb.util.calc_rho", "api/pygwb.util.calc_rho1", "api/pygwb.util.effective_welch_averages", "api/pygwb.util.get_window_tuple", "api/pygwb.util.interpolate_frequency_series", "api/pygwb.util.omega_to_power", "api/pygwb.util.parse_window_dict", "api/pygwb.util.window_factors", "citing", "contributing", "demos", "generate_stochastic_background_in_network", "index", "inject_simulated_data_in_network", "input/aLIGOdesign", "installation", "make_notchlist", "multiple_jobs", "pe", "pipeline", "run_pe", "run_statistical_checks", "simulate_CBC_GWB", "simulator", "simulator_tutorial", "stat_checks", "test_orfs", "tutorials", "workflow", "write_priors_for_pe"], "filenames": ["CBC_simulator_tutorial.ipynb", "Understand_dsc.ipynb", "about.rst", "api.rst", "api/pygwb.baseline.txt", "api/pygwb.baseline.Baseline.txt", "api/pygwb.baseline.get_baselines.txt", "api/pygwb.coherence.txt", "api/pygwb.coherence.calculate_coherence.txt", "api/pygwb.constants.txt", "api/pygwb.delta_sigma_cut.txt", "api/pygwb.delta_sigma_cut.dsc_cut.txt", "api/pygwb.delta_sigma_cut.run_dsc.txt", "api/pygwb.detector.txt", "api/pygwb.detector.Interferometer.txt", "api/pygwb.network.txt", "api/pygwb.network.Network.txt", "api/pygwb.notch.txt", "api/pygwb.notch.StochNotch.txt", "api/pygwb.notch.StochNotchList.txt", "api/pygwb.notch.comb.txt", "api/pygwb.notch.power_lines.txt", "api/pygwb.notch.pulsar_injections.txt", "api/pygwb.omega_spectra.txt", "api/pygwb.omega_spectra.OmegaSpectrogram.txt", "api/pygwb.omega_spectra.OmegaSpectrum.txt", "api/pygwb.omega_spectra.reweight_spectral_object.txt", "api/pygwb.orfs.txt", "api/pygwb.orfs.Sminus.txt", "api/pygwb.orfs.Splus.txt", "api/pygwb.orfs.T_right_left.txt", "api/pygwb.orfs.Tminus.txt", "api/pygwb.orfs.Tplus.txt", "api/pygwb.orfs.Vminus.txt", "api/pygwb.orfs.Vplus.txt", "api/pygwb.orfs.calc_orf.txt", "api/pygwb.orfs.omega_tangent_bisector.txt", "api/pygwb.orfs.tangent_vector.txt", "api/pygwb.parameters.txt", "api/pygwb.parameters.Parameters.txt", "api/pygwb.parameters.ParametersHelp.txt", "api/pygwb.pe.txt", "api/pygwb.pe.BrokenPowerLawModel.txt", "api/pygwb.pe.GWBModel.txt", "api/pygwb.pe.PVPowerLawModel.txt", "api/pygwb.pe.PVPowerLawModel2.txt", "api/pygwb.pe.PowerLawModel.txt", "api/pygwb.pe.SchumannModel.txt", "api/pygwb.pe.SmoothBrokenPowerLawModel.txt", "api/pygwb.pe.TVSPowerLawModel.txt", "api/pygwb.pe.TripleBrokenPowerLawModel.txt", "api/pygwb.postprocessing.txt", "api/pygwb.postprocessing.calc_Y_sigma_from_Yf_sigmaf.txt", "api/pygwb.postprocessing.calculate_point_estimate_sigma_spectra.txt", "api/pygwb.postprocessing.combine_spectra_with_sigma_weights.txt", "api/pygwb.postprocessing.odd_even_segment_postprocessing.txt", "api/pygwb.postprocessing.postprocess_Y_sigma.txt", "api/pygwb.preprocessing.txt", "api/pygwb.preprocessing.apply_high_pass_filter.txt", "api/pygwb.preprocessing.preprocessing_data_channel_name.txt", "api/pygwb.preprocessing.preprocessing_data_gwpy_timeseries.txt", "api/pygwb.preprocessing.preprocessing_data_timeseries_array.txt", "api/pygwb.preprocessing.read_data.txt", "api/pygwb.preprocessing.resample_filter.txt", "api/pygwb.preprocessing.self_gate_data.txt", "api/pygwb.preprocessing.set_start_time.txt", "api/pygwb.preprocessing.shift_timeseries.txt", "api/pygwb.simulator.txt", "api/pygwb.simulator.Simulator.txt", "api/pygwb.spectral.txt", "api/pygwb.spectral.before_after_average.txt", "api/pygwb.spectral.coarse_grain.txt", "api/pygwb.spectral.coarse_grain_exact.txt", "api/pygwb.spectral.coarse_grain_naive.txt", "api/pygwb.spectral.coarse_grain_spectrogram.txt", "api/pygwb.spectral.cross_spectral_density.txt", "api/pygwb.spectral.fftgram.txt", "api/pygwb.spectral.power_spectral_density.txt", "api/pygwb.spectral.pwelch_psd.txt", "api/pygwb.spectral.running_mean.txt", "api/pygwb.statistical_checks.txt", "api/pygwb.statistical_checks.StatisticalChecks.txt", "api/pygwb.statistical_checks.run_statistical_checks_from_file.txt", "api/pygwb.statistical_checks.sortingFunction.txt", "api/pygwb.util.txt", "api/pygwb.util.StatKS.txt", "api/pygwb.util.calc_bias.txt", "api/pygwb.util.calc_rho.txt", "api/pygwb.util.calc_rho1.txt", "api/pygwb.util.effective_welch_averages.txt", "api/pygwb.util.get_window_tuple.txt", "api/pygwb.util.interpolate_frequency_series.txt", "api/pygwb.util.omega_to_power.txt", "api/pygwb.util.parse_window_dict.txt", "api/pygwb.util.window_factors.txt", "citing.rst", "contributing.rst", "demos.rst", "generate_stochastic_background_in_network.ipynb", "index.rst", "inject_simulated_data_in_network.ipynb", "input/aLIGOdesign.txt", "installation.rst", "make_notchlist.ipynb", "multiple_jobs.rst", "pe.rst", "pipeline.rst", "run_pe.ipynb", "run_statistical_checks.ipynb", "simulate_CBC_GWB.ipynb", "simulator.rst", "simulator_tutorial.ipynb", "stat_checks.rst", "test_orfs.ipynb", "tutorials.rst", "workflow.rst", "write_priors_for_pe.ipynb"], "titles": ["An introduction to the simulator module", "Produce a <span class=\"math notranslate nohighlight\">\\(\\Delta\\sigma\\)</span> cut", "About <code class=\"docutils literal notranslate\"><span class=\"pre\">pygwb</span></code>", "API", "pygwb.baseline", "pygwb.baseline.Baseline", "pygwb.baseline.get_baselines", "pygwb.coherence", "pygwb.coherence.calculate_coherence", "pygwb.constants", "pygwb.delta_sigma_cut", "pygwb.delta_sigma_cut.dsc_cut", "pygwb.delta_sigma_cut.run_dsc", "pygwb.detector", "pygwb.detector.Interferometer", "pygwb.network", "pygwb.network.Network", "pygwb.notch", "pygwb.notch.StochNotch", "pygwb.notch.StochNotchList", "pygwb.notch.comb", "pygwb.notch.power_lines", "pygwb.notch.pulsar_injections", "pygwb.omega_spectra", "pygwb.omega_spectra.OmegaSpectrogram", "pygwb.omega_spectra.OmegaSpectrum", "pygwb.omega_spectra.reweight_spectral_object", "pygwb.orfs", "pygwb.orfs.Sminus", "pygwb.orfs.Splus", "pygwb.orfs.T_right_left", "pygwb.orfs.Tminus", "pygwb.orfs.Tplus", "pygwb.orfs.Vminus", "pygwb.orfs.Vplus", "pygwb.orfs.calc_orf", "pygwb.orfs.omega_tangent_bisector", "pygwb.orfs.tangent_vector", "pygwb.parameters", "pygwb.parameters.Parameters", "pygwb.parameters.ParametersHelp", "pygwb.pe", "pygwb.pe.BrokenPowerLawModel", "pygwb.pe.GWBModel", "pygwb.pe.PVPowerLawModel", "pygwb.pe.PVPowerLawModel2", "pygwb.pe.PowerLawModel", "pygwb.pe.SchumannModel", "pygwb.pe.SmoothBrokenPowerLawModel", "pygwb.pe.TVSPowerLawModel", "pygwb.pe.TripleBrokenPowerLawModel", "pygwb.postprocessing", "pygwb.postprocessing.calc_Y_sigma_from_Yf_sigmaf", "pygwb.postprocessing.calculate_point_estimate_sigma_spectra", "pygwb.postprocessing.combine_spectra_with_sigma_weights", "pygwb.postprocessing.odd_even_segment_postprocessing", "pygwb.postprocessing.postprocess_Y_sigma", "pygwb.preprocessing", "pygwb.preprocessing.apply_high_pass_filter", "pygwb.preprocessing.preprocessing_data_channel_name", "pygwb.preprocessing.preprocessing_data_gwpy_timeseries", "pygwb.preprocessing.preprocessing_data_timeseries_array", "pygwb.preprocessing.read_data", "pygwb.preprocessing.resample_filter", "pygwb.preprocessing.self_gate_data", "pygwb.preprocessing.set_start_time", "pygwb.preprocessing.shift_timeseries", "pygwb.simulator", "pygwb.simulator.Simulator", "pygwb.spectral", "pygwb.spectral.before_after_average", "pygwb.spectral.coarse_grain", "pygwb.spectral.coarse_grain_exact", "pygwb.spectral.coarse_grain_naive", "pygwb.spectral.coarse_grain_spectrogram", "pygwb.spectral.cross_spectral_density", "pygwb.spectral.fftgram", "pygwb.spectral.power_spectral_density", "pygwb.spectral.pwelch_psd", "pygwb.spectral.running_mean", "pygwb.statistical_checks", "pygwb.statistical_checks.StatisticalChecks", "pygwb.statistical_checks.run_statistical_checks_from_file", "pygwb.statistical_checks.sortingFunction", "pygwb.util", "pygwb.util.StatKS", "pygwb.util.calc_bias", "pygwb.util.calc_rho", "pygwb.util.calc_rho1", "pygwb.util.effective_welch_averages", "pygwb.util.get_window_tuple", "pygwb.util.interpolate_frequency_series", "pygwb.util.omega_to_power", "pygwb.util.parse_window_dict", "pygwb.util.window_factors", "Citing <code class=\"docutils literal notranslate\"><span class=\"pre\">pygwb</span></code>", "Contributing guide", "Demos", "Inject a power spectrum in random LIGO noise", "pygwb documentation", "Inject a SGWB into real data", "&lt;no title&gt;", "Installation", "Generate a notch list", "Running multiple <code class=\"docutils literal notranslate\"><span class=\"pre\">pygwb_pipe</span></code> jobs", "Parameter estimation using <code class=\"docutils literal notranslate\"><span class=\"pre\">pygwb_pe</span></code>", "Using <code class=\"docutils literal notranslate\"><span class=\"pre\">pygwb_pipe</span></code>: a quickstart manual", "Parameter estimation demo: customizing runs", "Interpret the output of the <code class=\"docutils literal notranslate\"><span class=\"pre\">statistical_checks</span></code> module", "Simulate a CBC background", "Simulating data with <code class=\"docutils literal notranslate\"><span class=\"pre\">pygwb.simulator</span></code>", "An introduction to the simulator module", "Running statistical checks with <code class=\"docutils literal notranslate\"><span class=\"pre\">pygwb_stats</span></code>", "Calculate overlap reduction functions", "Tutorials", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">pygwb</span></code> workflow", "Write your own prior file"], "terms": {"1": [0, 1, 2, 5, 11, 12, 13, 14, 15, 16, 17, 19, 20, 23, 24, 25, 26, 35, 38, 39, 40, 43, 44, 45, 48, 51, 53, 54, 57, 64, 67, 68, 69, 71, 72, 75, 76, 77, 78, 79, 81, 82, 95, 98, 100, 101, 102, 103, 107, 108, 109, 111, 113, 116], "import": [0, 1, 4, 7, 9, 10, 13, 15, 17, 23, 24, 25, 27, 42, 44, 45, 46, 48, 49, 50, 57, 67, 69, 96, 98, 100, 103, 104, 105, 109, 110, 111, 113, 116], "numpi": [0, 1, 4, 10, 14, 15, 24, 25, 27, 42, 44, 45, 46, 48, 49, 50, 52, 67, 68, 79, 81, 98, 100, 103, 104, 106, 107, 109, 111, 113], "np": [0, 1, 4, 8, 10, 14, 15, 17, 18, 19, 24, 25, 27, 42, 44, 45, 46, 48, 49, 50, 51, 54, 61, 67, 98, 100, 103, 107, 109, 110, 111, 113], "gwpy": [0, 1, 14, 16, 23, 24, 25, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 91, 92, 98, 99, 100, 110, 111], "bilbi": [0, 5, 6, 13, 14, 15, 17, 18, 41, 42, 43, 44, 45, 46, 48, 49, 50, 67, 68, 98, 99, 100, 105, 107, 109, 110, 111, 113, 114, 116], "sy": [0, 19, 24, 25, 111], "matplotlib": [0, 1, 24, 25, 27, 98, 100, 103, 109, 111, 113], "pyplot": [0, 1, 24, 25, 27, 98, 100, 103, 109, 111, 113], "plt": [0, 1, 24, 25, 27, 98, 100, 103, 109, 111, 113], "timeseri": [0, 1, 14, 16, 24, 25, 39, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 75, 76, 77, 98, 100, 110, 111], "from": [0, 1, 2, 4, 5, 7, 9, 10, 12, 13, 14, 15, 16, 17, 19, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 75, 76, 77, 81, 82, 87, 92, 96, 97, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "scipi": [0, 28, 29, 30, 31, 32, 33, 34, 38, 76, 87, 89, 90, 91, 93, 94, 103, 107], "optim": [0, 5, 14, 39, 41, 75, 77, 99, 105, 111], "astropi": [0, 9, 24, 25, 98, 100, 109], "unit": [0, 5, 14, 24, 25, 35, 96, 98, 100, 109, 110], "u": [0, 14, 24, 25, 103, 108, 109, 113], "pygwb": [0, 1, 3, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114], "detector": [0, 4, 5, 8, 10, 12, 15, 16, 17, 18, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 57, 67, 68, 81, 98, 100, 103, 106, 107, 109, 110, 111, 113, 115], "interferomet": [0, 4, 5, 6, 13, 15, 16, 27, 38, 39, 47, 59, 62, 67, 68, 69, 81, 99, 104, 105, 106, 107, 111, 113, 115], "network": [0, 13, 42, 43, 44, 45, 46, 47, 48, 49, 50, 106, 110], "baselin": [0, 1, 12, 13, 14, 15, 16, 27, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 67, 68, 81, 103, 104, 105, 106, 110, 111], "inlin": [0, 1, 24, 25, 98, 100, 109, 111], "among": [0, 24, 25, 111], "expect": [0, 2, 24, 25, 38, 80, 90, 96, 104, 105, 107, 111, 113], "i": [0, 1, 2, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 86, 87, 88, 89, 90, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115], "form": [0, 20, 24, 25, 41, 69, 98, 100, 104, 107, 110, 111, 115], "frequencyseri": [0, 16, 23, 24, 25, 54, 67, 68, 74, 76, 91, 92, 98, 100, 110, 111], "thi": [0, 1, 2, 3, 5, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 53, 56, 57, 64, 65, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 80, 81, 87, 94, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "power": [0, 1, 5, 7, 8, 13, 14, 16, 17, 21, 23, 42, 44, 45, 46, 48, 49, 50, 51, 53, 68, 69, 92, 103, 105, 106, 109, 111, 114], "spectral": [0, 2, 4, 5, 8, 12, 13, 14, 23, 24, 25, 26, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 81, 98, 100, 104, 106, 109, 110, 111, 112, 114], "densiti": [0, 2, 5, 8, 13, 14, 24, 51, 53, 69, 75, 98, 100, 106, 109, 110, 111, 114], "psd": [0, 5, 8, 11, 12, 13, 14, 15, 16, 39, 51, 53, 55, 56, 67, 68, 69, 70, 75, 77, 78, 89, 106, 110, 114], "gw": [0, 2, 13, 14, 15, 17, 18, 41, 42, 44, 45, 46, 48, 49, 50, 62, 67, 68, 92, 98, 99, 100, 107, 109, 110, 111, 113], "signal": [0, 1, 2, 5, 14, 15, 16, 42, 43, 44, 45, 46, 47, 48, 49, 50, 67, 68, 76, 87, 89, 90, 94, 103, 107, 108, 110], "below": [0, 3, 14, 15, 24, 25, 28, 29, 30, 31, 32, 33, 34, 57, 68, 71, 95, 96, 98, 100, 107, 108, 109, 110, 111, 112, 113, 114, 115], "we": [0, 2, 4, 10, 13, 14, 15, 17, 23, 24, 25, 27, 41, 42, 44, 45, 46, 48, 49, 50, 51, 57, 67, 69, 80, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "defin": [0, 14, 17, 18, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 41, 42, 44, 45, 46, 47, 48, 49, 50, 55, 77, 86, 87, 88, 89, 94, 98, 100, 103, 110, 111, 113, 115], "some": [0, 10, 13, 17, 24, 25, 38, 40, 51, 57, 68, 69, 96, 97, 98, 100, 103, 105, 106, 107, 108, 109, 111, 112, 113, 115], "valu": [0, 1, 5, 9, 10, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 25, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 59, 60, 61, 64, 66, 68, 76, 80, 81, 85, 98, 100, 104, 105, 106, 107, 108, 109, 110, 111, 115], "omega_": [0, 2, 42, 43, 44, 45, 46, 48, 49, 50, 105, 107, 111, 116], "rm": [0, 2, 11, 43, 48, 81, 105, 107, 108, 111, 116], "ref": [0, 42, 44, 45, 46, 47, 48, 49, 50, 105, 107, 111, 116], "refer": [0, 2, 5, 12, 13, 14, 23, 24, 25, 26, 39, 41, 44, 45, 46, 47, 49, 52, 53, 67, 69, 80, 98, 100, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115], "frequenc": [0, 1, 2, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 67, 68, 71, 74, 75, 77, 81, 86, 91, 92, 97, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "f_": [0, 42, 44, 45, 46, 47, 48, 49, 50, 107, 111], "take": [0, 1, 14, 16, 17, 24, 25, 51, 52, 59, 61, 62, 89, 98, 100, 102, 106, 107, 110, 111, 114, 115], "rel": [0, 12, 27, 38, 39, 41, 106, 107, 111, 113], "larg": [0, 2, 38, 68, 96, 98, 99, 104, 108, 111, 114], "enough": [0, 24, 25, 111], "rise": [0, 98, 100, 111], "abov": [0, 14, 15, 23, 24, 25, 27, 51, 71, 74, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "nois": [0, 10, 12, 14, 15, 16, 17, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 68, 81, 100, 103, 107, 108], "curv": [0, 2, 103, 111], "note": [0, 1, 5, 13, 14, 16, 18, 19, 24, 25, 27, 38, 39, 40, 52, 68, 76, 90, 92, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115], "function": [0, 1, 3, 4, 5, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 80, 81, 84, 94, 97, 98, 100, 103, 104, 105, 106, 107, 110, 111, 114], "can": [0, 1, 3, 4, 5, 7, 10, 13, 14, 15, 16, 17, 19, 23, 24, 25, 39, 40, 41, 44, 45, 51, 52, 57, 64, 68, 69, 78, 80, 90, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "us": [0, 1, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 82, 84, 86, 87, 88, 89, 94, 95, 96, 99, 100, 102, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115], "gener": [0, 10, 14, 15, 17, 24, 25, 27, 41, 43, 68, 80, 81, 82, 96, 98, 99, 100, 102, 107, 108, 109, 110, 111, 112, 113, 115], "ani": [0, 1, 13, 14, 18, 19, 24, 25, 41, 52, 64, 69, 72, 81, 96, 98, 100, 102, 106, 108, 110, 111], "law": [0, 1, 23, 42, 44, 45, 46, 48, 49, 50, 105, 110, 111], "2": [0, 1, 5, 11, 12, 13, 14, 16, 21, 23, 24, 25, 35, 38, 39, 43, 45, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63, 68, 70, 81, 86, 98, 100, 101, 102, 103, 107, 109, 111, 113, 116], "frequencies_x": [0, 98, 100, 110, 111], "linspac": [0, 24, 25, 42, 44, 45, 46, 48, 49, 50, 67, 98, 100, 110, 111], "0": [0, 1, 5, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 64, 66, 67, 68, 69, 72, 75, 76, 77, 78, 81, 82, 86, 87, 88, 89, 94, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116], "1000": [0, 24, 25, 42, 44, 45, 46, 48, 49, 50, 67, 98, 100, 107, 110, 111], "10000": [0, 67, 98, 100, 110, 111], "alpha1": [0, 98, 100, 110, 111], "6": [0, 1, 24, 25, 81, 98, 100, 101, 103, 106, 107, 109, 110, 111, 116], "alpha2": [0, 98, 100, 110, 111], "3": [0, 1, 14, 19, 23, 24, 25, 39, 40, 51, 68, 98, 100, 101, 102, 103, 107, 109, 111, 113, 116], "fref": [0, 1, 5, 12, 23, 24, 25, 38, 39, 44, 45, 46, 47, 49, 51, 52, 53, 98, 100, 104, 106, 107, 110, 111, 115], "10": [0, 1, 10, 14, 24, 25, 27, 47, 95, 98, 100, 101, 103, 107, 109, 110, 111, 113], "omegaref": [0, 98, 100, 110, 111], "5": [0, 1, 5, 12, 13, 14, 16, 24, 25, 39, 51, 53, 55, 56, 57, 64, 69, 72, 75, 76, 77, 78, 81, 86, 87, 88, 89, 94, 98, 100, 101, 103, 105, 106, 107, 109, 110, 111, 113, 116], "e": [0, 5, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 38, 39, 40, 41, 51, 59, 62, 74, 81, 82, 96, 98, 100, 102, 103, 104, 106, 107, 109, 110, 111, 112, 115], "def": [0, 1, 98, 100, 103, 110, 111], "intensitygw": [0, 98, 100, 110, 111], "freq": [0, 1, 18, 19, 26, 27, 53, 67, 98, 100, 106, 110, 111, 113], "intens": [0, 98, 100, 110, 111], "broken": [0, 42, 48, 50, 96, 102, 105, 107, 110, 111], "omegagw": [0, 98, 100, 110, 111], "arrai": [0, 1, 5, 8, 10, 11, 12, 14, 16, 17, 18, 19, 24, 25, 26, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 61, 68, 71, 72, 73, 74, 79, 81, 92, 98, 100, 107, 110, 111], "first": [0, 8, 13, 17, 19, 24, 25, 40, 50, 57, 68, 71, 90, 96, 98, 100, 103, 104, 106, 107, 110, 111, 113, 115], "index": [0, 1, 5, 14, 19, 23, 24, 25, 26, 39, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 68, 72, 98, 100, 104, 106, 110, 111, 112, 115], "second": [0, 5, 8, 14, 16, 24, 25, 39, 50, 52, 53, 58, 59, 60, 61, 63, 64, 65, 66, 68, 70, 75, 76, 77, 78, 81, 86, 96, 98, 100, 104, 106, 108, 110, 111], "return": [0, 1, 5, 8, 11, 12, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 85, 86, 87, 88, 89, 90, 91, 92, 94, 98, 100, 103, 104, 106, 107, 110, 111], "constant": [0, 24, 25, 98, 100, 104, 110, 111], "h0": [0, 1, 9, 23, 24, 25, 98, 100, 104, 110, 111], "h_theor": [0, 98, 100, 110, 111], "si": [0, 24, 25, 98, 100, 110, 111], "pi": [0, 1, 44, 98, 100, 110, 111], "fknee": [0, 98, 100, 110, 111], "zeros_lik": [0, 24, 25, 98, 100, 110, 111], "intensity_gw_inject": [0, 98, 100, 110, 111], "For": [0, 2, 4, 5, 10, 13, 14, 15, 17, 23, 24, 25, 27, 38, 39, 41, 42, 44, 45, 46, 48, 49, 50, 51, 56, 57, 67, 69, 75, 76, 77, 80, 92, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115], "tutori": [0, 41, 67, 80, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115], "segment": [0, 5, 10, 11, 12, 14, 16, 24, 25, 39, 51, 53, 55, 56, 59, 61, 64, 65, 68, 70, 75, 76, 77, 78, 79, 81, 86, 87, 89, 98, 104, 106, 109, 110, 111, 113], "n_seg": [0, 98, 109, 110, 111], "durat": [0, 5, 12, 14, 15, 16, 39, 53, 55, 56, 59, 61, 64, 65, 67, 68, 70, 75, 77, 78, 86, 98, 100, 104, 106, 107, 108, 109, 110, 111, 113, 115], "64": [0, 67, 101, 109, 110, 111], "sampl": [0, 5, 12, 14, 15, 16, 24, 25, 39, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 86, 89, 98, 100, 106, 107, 109, 110, 111, 113], "1024": [0, 67, 98, 109, 110, 111], "hz": [0, 5, 12, 14, 16, 17, 18, 19, 21, 24, 25, 26, 39, 47, 57, 58, 59, 60, 61, 62, 63, 68, 75, 77, 86, 92, 98, 100, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113], "specifi": [0, 5, 13, 14, 16, 24, 25, 35, 38, 98, 100, 104, 105, 106, 107, 108, 109, 111, 112, 115], "each": [0, 3, 5, 10, 12, 16, 19, 24, 25, 41, 51, 53, 55, 56, 59, 61, 65, 68, 70, 71, 72, 76, 77, 81, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115], "": [0, 5, 11, 13, 14, 16, 24, 25, 39, 43, 49, 54, 75, 77, 89, 96, 97, 98, 102, 105, 106, 107, 109, 110, 111, 113, 115], "number": [0, 2, 5, 12, 14, 16, 19, 20, 21, 24, 25, 39, 42, 44, 45, 46, 48, 49, 50, 52, 56, 58, 59, 60, 61, 63, 65, 68, 70, 79, 81, 86, 87, 89, 95, 98, 104, 106, 109, 110, 111, 112, 115], "sampling_frequ": [0, 1, 5, 14, 15, 16, 67, 68, 98, 100, 107, 109, 110, 111], "furthermor": [0, 2, 80, 81, 103, 106, 111], "list": [0, 5, 6, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 39, 42, 44, 45, 46, 48, 49, 50, 68, 74, 81, 97, 104, 105, 106, 111, 115], "which": [0, 2, 4, 5, 7, 10, 12, 13, 14, 15, 16, 17, 18, 23, 24, 25, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 86, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "need": [0, 2, 16, 17, 24, 25, 38, 39, 42, 44, 45, 46, 48, 49, 50, 51, 68, 75, 77, 78, 92, 97, 98, 100, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115], "decid": [0, 103, 106, 107, 109, 110, 111], "h1": [0, 4, 13, 14, 15, 27, 39, 42, 44, 45, 46, 48, 49, 50, 57, 67, 69, 98, 100, 103, 105, 106, 107, 109, 110, 111, 115], "l1": [0, 4, 14, 15, 27, 39, 42, 44, 45, 46, 48, 49, 50, 59, 62, 67, 69, 98, 100, 103, 105, 106, 107, 109, 110, 111, 113, 115], "exampl": [0, 4, 7, 9, 10, 13, 15, 17, 23, 24, 25, 27, 38, 42, 44, 45, 46, 48, 49, 50, 51, 57, 67, 69, 96, 100, 102, 104, 105, 106, 107, 109, 110, 111, 112, 115], "howev": [0, 1, 10, 24, 25, 27, 38, 52, 68, 71, 96, 98, 100, 103, 104, 105, 106, 107, 109, 110, 111, 114], "arbitrari": [0, 24, 25, 109, 110, 111], "amount": [0, 2, 14, 24, 25, 38, 66, 75, 77, 78, 106, 109, 110, 111, 114, 115], "One": [0, 5, 17, 23, 24, 25, 57, 98, 100, 104, 106, 107, 109, 110, 111], "would": [0, 9, 24, 25, 64, 95, 103, 104, 105, 107, 108, 109, 110, 111, 112], "simpli": [0, 4, 24, 25, 38, 102, 103, 105, 109, 110, 111], "add": [0, 24, 25, 38, 41, 96, 109, 110, 111, 116], "more": [0, 9, 11, 13, 14, 15, 16, 17, 18, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 41, 43, 51, 56, 57, 62, 64, 67, 68, 69, 70, 74, 75, 76, 78, 79, 81, 87, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "ifo_list": [0, 15, 98, 100, 109, 110, 111], "4": [0, 1, 14, 22, 24, 25, 57, 98, 100, 101, 103, 105, 107, 109, 111, 113, 116], "ifo_h1": [0, 109, 110, 111], "get_empty_interferomet": [0, 4, 13, 14, 15, 27, 42, 44, 45, 46, 48, 49, 50, 67, 98, 107, 109, 110, 111, 113], "ifo_l1": [0, 109, 110, 111], "ifo": [0, 5, 14, 15, 57, 59, 62, 69, 98, 100, 105, 109, 110, 111, 113, 115], "power_spectral_dens": [0, 14, 15, 69, 98, 109, 110, 111], "powerspectraldens": [0, 14, 15, 98, 109, 110, 111], "frequency_arrai": [0, 14, 15, 17, 18, 19, 98, 109, 110, 111, 113], "nan_to_num": [0, 15, 98, 109, 110, 111], "power_spectral_density_arrai": [0, 14, 15, 98, 109, 110, 111], "posinf": [0, 15, 98, 109, 110, 111], "41": [0, 15, 28, 98, 101, 109, 110, 111], "ar": [0, 1, 5, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 38, 39, 41, 43, 51, 52, 56, 57, 64, 68, 69, 71, 74, 77, 81, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "now": [0, 17, 24, 25, 27, 57, 98, 100, 103, 104, 107, 109, 110, 111, 113], "readi": [0, 98, 100, 107, 109, 110, 111], "consid": [0, 5, 10, 12, 16, 21, 27, 42, 44, 45, 46, 48, 49, 50, 65, 67, 71, 81, 98, 100, 103, 104, 107, 109, 110, 111], "two": [0, 4, 5, 7, 8, 14, 15, 17, 19, 20, 23, 24, 25, 27, 37, 39, 67, 69, 75, 100, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114], "case": [0, 5, 16, 17, 24, 25, 38, 42, 50, 52, 56, 57, 68, 81, 96, 103, 104, 107, 108, 110, 111, 113], "one": [0, 7, 9, 10, 13, 14, 17, 23, 24, 25, 38, 39, 51, 57, 68, 74, 81, 90, 98, 100, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115], "where": [0, 2, 5, 19, 24, 25, 38, 43, 51, 59, 62, 64, 68, 81, 82, 96, 103, 104, 105, 106, 107, 110, 111, 112, 113], "onli": [0, 7, 15, 16, 24, 25, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 59, 62, 68, 71, 81, 103, 105, 106, 107, 108], "control": [0, 24, 25, 111], "no_nois": [0, 68, 111], "flag": [0, 5, 10, 14, 16, 19, 24, 25, 68, 77, 104, 108, 111], "pass": [0, 5, 13, 14, 15, 16, 24, 25, 38, 39, 52, 57, 58, 59, 60, 61, 63, 68, 81, 96, 98, 104, 105, 106, 107, 110, 111, 112, 115], "them": [0, 10, 14, 15, 16, 19, 24, 25, 42, 44, 45, 46, 48, 49, 50, 80, 96, 98, 106, 109, 110, 111], "our": [0, 13, 17, 24, 25, 41, 96, 103, 107, 108, 111], "prior": [0, 105, 107, 109, 110], "bbhpriordict": [0, 109, 110], "aligned_spin": [0, 109, 110], "true": [0, 1, 5, 11, 12, 13, 14, 16, 17, 18, 19, 24, 25, 39, 51, 52, 55, 56, 57, 64, 68, 69, 75, 77, 100, 103, 105, 106, 107, 109, 110, 111, 115], "chirp_mass": [0, 109, 110], "core": [0, 1, 4, 24, 25, 68, 105, 107, 109, 110, 116], "uniform": [0, 105, 107, 109, 110], "30": [0, 24, 25, 101, 107, 109, 110, 111], "name": [0, 5, 13, 14, 16, 19, 24, 25, 38, 39, 40, 51, 59, 62, 75, 76, 77, 81, 87, 89, 90, 102, 104, 105, 106, 107, 109, 110, 112, 113], "mass_ratio": [0, 109, 110], "chi_1": [0, 109, 110], "chi_2": [0, 109, 110], "luminosity_dist": [0, 109, 110], "powerlaw": [0, 109, 110], "alpha": [0, 1, 5, 11, 12, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 39, 44, 45, 46, 49, 51, 52, 53, 104, 105, 106, 107, 109, 110, 115, 116], "minimum": [0, 14, 17, 18, 19, 24, 25, 81, 109, 110], "maximum": [0, 14, 17, 18, 24, 25, 81, 108, 109, 110, 113], "100": [0, 24, 25, 39, 42, 44, 45, 46, 48, 49, 50, 81, 101, 107, 109, 110, 111], "mpc": [0, 109, 110], "geocent_tim": [0, 109, 110], "creat": [0, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 40, 42, 44, 45, 46, 48, 49, 50, 67, 68, 76, 96, 98, 103, 104, 105, 106, 109, 110, 111, 112, 113, 115, 116], "20": [0, 1, 5, 16, 24, 25, 39, 98, 100, 101, 103, 106, 109, 110, 111], "15": [0, 1, 24, 25, 100, 101, 107, 111], "24": [0, 101, 103, 106, 111], "info": [0, 1, 98, 100, 109, 111], "align": [0, 24, 25, 109], "spin": [0, 109], "No": [0, 1, 24, 25, 109], "given": [0, 6, 7, 8, 10, 12, 14, 19, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 53, 54, 64, 68, 81, 91, 92, 103, 105, 107, 109, 110, 111, 112, 113, 114, 115], "default": [0, 1, 5, 6, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 24, 25, 26, 27, 35, 38, 39, 40, 41, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 74, 75, 76, 77, 79, 81, 82, 86, 87, 88, 89, 90, 94, 98, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114], "bbh": [0, 109], "home": [0, 98, 102, 107, 109, 115, 116], "arianna": [0, 95, 115, 116], "renzini": [0, 2, 95, 115, 116], "conda": [0, 98, 102, 107, 109, 116], "env": [0, 98, 107, 109, 116], "airlab": 0, "lib": [0, 1, 24, 25, 98, 107, 109, 116], "python3": [0, 1, 98, 102, 107, 109, 116], "8": [0, 1, 24, 25, 30, 98, 100, 101, 102, 103, 105, 107, 109, 113, 116], "site": [0, 1, 98, 102, 107, 109, 116], "packag": [0, 1, 2, 3, 4, 10, 15, 24, 25, 27, 38, 41, 42, 44, 45, 46, 48, 49, 50, 67, 69, 84, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 114, 115, 116], "prior_fil": [0, 109], "aligned_spins_bbh": [0, 109], "log": [0, 24, 25, 42, 43, 44, 45, 46, 47, 48, 49, 50, 103, 109, 111, 115], "getlogg": [0, 109], "setlevel": [0, 109], "warn": [0, 1, 14, 24, 25, 98, 100, 107, 109], "simulator_cbc": 0, "injection_dict": [0, 68], "fals": [0, 5, 11, 12, 14, 16, 17, 18, 19, 24, 25, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 65, 68, 75, 76, 77, 81, 82, 106, 107, 111, 115], "data_cbc": 0, "generate_data": [0, 67, 68, 98, 100, 109, 111], "2023": [0, 95, 98, 100, 106, 109], "01": [0, 101, 103, 107, 111, 113], "31": [0, 101, 111], "37": [0, 34, 101, 111], "626": [0, 101, 111], "281": [0, 1, 101], "ad": [0, 16, 24, 25, 42, 44, 45, 46, 48, 49, 50, 98, 100, 103, 106, 109, 111], "channel": [0, 13, 14, 16, 24, 25, 38, 39, 57, 59, 62, 69, 98, 100, 106, 109, 111], "sim": [0, 98, 100, 109, 111], "stoch_inj": [0, 98, 100, 109, 111], "663": [0, 101, 111], "7": [0, 1, 24, 25, 98, 100, 101, 103, 107, 109, 110], "whiten": [0, 14, 39, 64, 106, 109], "plot": [0, 14, 24, 25, 80, 81, 82, 98, 100, 103, 105, 107, 109, 111, 112, 114, 115], "let": [0, 1, 113], "test": [0, 1, 2, 14, 17, 23, 24, 25, 68, 80, 81, 85, 96, 100, 106, 110], "abil": [0, 23], "done": [0, 5, 16, 17, 24, 25, 57, 72, 81, 96, 106, 107, 109, 110], "set": [0, 5, 6, 10, 13, 14, 15, 16, 17, 19, 24, 25, 27, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 64, 68, 77, 82, 91, 96, 99, 100, 103, 104, 105, 106, 107, 110, 111, 113, 114, 115], "check": [0, 5, 14, 16, 17, 18, 19, 24, 25, 53, 80, 81, 82, 96, 97, 102, 104, 105, 106, 107, 110, 114, 115], "what": [0, 1, 24, 25, 96, 104, 106, 107, 110, 113], "happen": [0, 107], "when": [0, 1, 5, 12, 14, 16, 24, 25, 38, 39, 40, 51, 65, 68, 75, 77, 87, 95, 103, 104, 105, 106, 107, 108, 111, 112, 114, 115], "simulator_signal_and_noise0": 0, "intensity_gw": [0, 67, 68], "start_tim": [0, 14, 16, 68, 98, 100, 111], "seed": [0, 24, 25, 68], "1234": 0, "data_signal_and_noise0": 0, "get_data_for_interferomet": [0, 68], "simulator_signal_and_noise1": 0, "data_signal_and_noise1": 0, "data_combin": 0, "append": [0, 19, 24, 25, 102, 103], "inplac": [0, 24, 25], "9": [0, 1, 24, 25, 98, 100, 101, 103, 107, 109, 116], "nameerror": 0, "traceback": [0, 1, 24, 25], "most": [0, 1, 13, 17, 24, 25, 38, 96, 102, 104], "recent": [0, 1, 24, 25, 102], "call": [0, 1, 5, 9, 10, 13, 14, 16, 17, 18, 19, 23, 24, 25, 27, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 67, 68, 69, 81, 98, 100, 103, 104, 105, 106, 107, 109, 110, 111, 112], "last": [0, 1, 19, 24, 25, 71, 98, 104, 108, 109, 115], "input": [0, 22, 24, 25, 26, 68, 71, 72, 75, 81, 85, 98, 100, 103, 105, 106, 109, 110, 115], "In": [0, 1, 10, 13, 15, 23, 24, 25, 38, 41, 52, 57, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115], "lt": [0, 98, 109, 111, 116], "cell": [0, 1, 107, 109, 110, 111], "line": [0, 1, 9, 14, 17, 20, 21, 22, 24, 25, 38, 57, 68, 69, 98, 102, 104, 105, 106, 109, 110, 111, 112, 115], "gt": [0, 1, 98, 109, 111, 116], "39": [0, 1, 98, 100, 101, 107, 109, 111, 113], "see": [0, 14, 24, 25, 27, 35, 51, 56, 57, 92, 96, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 115], "impuls": 0, "introduc": [0, 23, 68, 86, 96], "point": [0, 4, 5, 14, 16, 24, 25, 39, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 64, 80, 81, 102, 104, 105, 106, 107], "time": [0, 1, 5, 10, 11, 12, 13, 14, 16, 22, 24, 25, 39, 47, 51, 52, 55, 56, 59, 60, 61, 62, 64, 65, 66, 68, 74, 75, 77, 80, 81, 86, 87, 96, 98, 100, 103, 104, 106, 107, 109, 110, 111, 112, 115], "seri": [0, 14, 24, 25, 61, 62, 71, 75, 77, 91, 112, 114], "join": [0, 24, 25], "due": [0, 2, 10, 103, 107], "discontinu": 0, "try": [0, 14, 24, 25], "simulator_signal_and_noise0_cont": 0, "data_signal_and_noise0_cont": 0, "simulator_signal_and_noise1_cont": 0, "data_signal_and_noise1_cont": 0, "astropydeprecationwarn": [0, 98, 100], "The": [0, 2, 3, 4, 5, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 27, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 67, 68, 69, 71, 72, 73, 74, 75, 79, 80, 81, 84, 85, 86, 87, 88, 89, 91, 92, 95, 96, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "truth": [0, 98, 100], "quantiti": [0, 24, 25, 76, 80, 98, 100, 112], "ambigu": [0, 98, 100], "futur": [0, 2, 24, 25, 98, 100, 103], "rais": [0, 1, 5, 14, 19, 24, 25, 98, 100], "valueerror": [0, 1, 19, 24, 25, 98, 100], "13": [0, 1, 24, 25, 98, 100, 101, 105, 107, 111, 113], "33": [0, 101, 111], "488": [0, 101], "525": [0, 101, 111], "23": [0, 1, 24, 25, 98, 100, 101, 109, 111], "150": [0, 101], "185": [0, 101, 111], "32": [0, 1, 13, 17, 24, 25, 28, 29, 30, 31, 32, 33, 34, 39, 51, 69, 101, 103, 106, 111], "765": [0, 101], "799": [0, 101, 111], "42": [0, 1, 67, 98, 101, 111], "657": [0, 101], "692": [0, 101], "52": [0, 101, 111], "298": [0, 101], "334": [0, 101], "34": [0, 1, 32, 101, 107, 111], "948": [0, 111], "988": [0, 101, 111], "11": [0, 1, 13, 24, 25, 39, 57, 98, 100, 101, 103, 105, 106, 111, 116], "data_combined_cont": 0, "12": [0, 1, 24, 25, 98, 100, 101, 107, 111, 113], "everyth": 0, "look": [0, 14, 24, 25, 96, 97, 98, 100, 104, 105, 106, 107, 111, 112, 113], "work": [0, 4, 15, 57, 95, 96, 102, 106, 110, 111], "just": [0, 24, 25, 96, 102, 103], "fine": [0, 24, 25], "like": [0, 1, 14, 24, 25, 26, 52, 55, 56, 71, 72, 73, 79, 95, 102, 107, 113, 115], "even": [0, 5, 14, 16, 24, 25, 51, 55, 56, 70, 71, 96, 103], "though": 0, "chunk": [0, 55, 86, 88, 94, 104, 114], "pickl": [1, 5, 14, 23, 24, 25, 39, 104, 105, 106], "pathlib": [1, 24, 25], "path": [1, 5, 12, 14, 16, 24, 25, 39, 59, 62, 81, 82, 100, 102, 104, 105, 106, 110, 111, 112], "loguru": 1, "logger": 1, "notch": [1, 5, 12, 14, 16, 39, 82, 97, 104, 105, 106], "stochnotch": [1, 17, 19, 103], "stochnotchlist": [1, 5, 16, 17, 20, 21, 22, 82, 103], "util": [1, 12, 14, 53, 54, 55, 56, 68, 76, 81], "calc_bia": [1, 12, 56, 81], "paramet": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 100, 104, 108, 114], "delta_sigma_cut": [1, 5, 38, 39, 81, 106], "run_dsc": [1, 5], "opt": 1, "hostedtoolcach": 1, "python": [1, 2, 24, 25, 95, 99], "18": [1, 24, 25, 101, 103, 111, 113], "x64": 1, "__init__": [1, 5, 14, 16, 18, 19, 24, 25, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 68, 81], "py": [1, 98, 102, 107, 109, 116], "36": [1, 101, 111], "userwarn": [1, 98, 107, 109], "wswiglal": 1, "redir": 1, "stdio": 1, "swiglal": 1, "standard": [1, 4, 16, 24, 25, 38, 41, 51, 52, 104, 106, 108, 115], "output": [1, 14, 16, 23, 24, 25, 38, 39, 71, 72, 74, 81, 82, 98, 100, 102, 103, 109, 110, 114], "error": [1, 4, 5, 14, 24, 25, 105, 115], "redirect": 1, "enabl": 1, "ipython": 1, "mai": [1, 2, 15, 18, 19, 24, 25, 38, 41, 96, 98, 99, 100, 102, 110], "lead": [1, 103], "perform": [1, 4, 5, 11, 14, 16, 24, 25, 38, 41, 55, 56, 61, 66, 73, 80, 81, 84, 86, 98, 99, 100, 103, 105, 107, 108, 111], "penalti": 1, "To": [1, 4, 9, 10, 13, 15, 17, 24, 25, 27, 38, 39, 42, 44, 45, 46, 48, 49, 50, 51, 52, 67, 69, 98, 100, 102, 103, 104, 105, 106, 107, 109, 110, 112, 114, 115], "disabl": 1, "local": [1, 14, 16, 24, 25, 39, 57, 59, 62, 96, 103, 106, 115], "lal": [1, 25], "no_swig_redirect_standard_output_error": 1, "global": [1, 24, 25, 40], "swig_redirect_standard_output_error": 1, "messag": [1, 14, 96, 105, 115], "being": [1, 5, 24, 25, 40, 43, 68, 105, 107, 109, 110, 115], "either": [1, 14, 16, 24, 25, 40, 59, 62, 65, 68, 74, 96], "misdirect": 1, "lost": [1, 24, 25], "jupyt": 1, "notebook": [1, 15, 98, 100, 103, 107, 108, 109], "suppress": 1, "filterwarn": 1, "ignor": [1, 14, 24, 25, 73, 107], "ligotimegp": 1, "dsc_cut": [1, 10], "naive_sigma": [1, 10, 11], "ndarrai": [1, 11, 12, 14, 18, 19, 24, 25, 54, 61], "slide_sigma": [1, 11], "dsc": [1, 11, 12, 112], "float": [1, 5, 11, 12, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 68, 71, 72, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 89, 94], "bf_ss": [1, 11], "bf_n": [1, 11], "dsigma": [1, 10, 11], "ab": [1, 24, 25, 35, 107, 111], "calc_hf": 1, "int": [1, 5, 12, 14, 16, 22, 24, 25, 39, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 73, 75, 76, 77, 78, 79, 81, 82, 86, 87, 88, 89, 94], "hf": 1, "do": [1, 24, 25, 59, 60, 63, 75, 76, 77, 81, 96, 102, 106, 107, 110], "differ": [1, 2, 10, 11, 12, 15, 16, 17, 23, 24, 25, 27, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 68, 72, 75, 80, 97, 104, 106, 107, 111, 113, 114, 115], "all": [1, 2, 3, 5, 10, 12, 13, 15, 16, 17, 19, 20, 21, 23, 24, 25, 38, 39, 51, 52, 56, 57, 68, 69, 81, 96, 98, 100, 103, 104, 105, 106, 107, 109, 111, 112, 115], "badgp": 1, "multipl": [1, 17, 24, 25, 38, 84, 103, 106, 114, 115], "main": [1, 3, 4, 17, 23, 69, 103, 106, 114], "func": [1, 71, 111], "calc_sigma_alpha": 1, "sensitivity_integrand_with_hf": 1, "sigma_alpha": 1, "sqrt": [1, 24, 25, 51, 54, 108], "sum": [1, 24, 25, 68], "windowfactor": 1, "window1": 1, "window2": 1, "n1": 1, "len": [1, 71, 72], "n2": 1, "nred": 1, "gcd": 1, "astyp": [1, 24, 25], "indices1": 1, "rang": [1, 14, 19, 20, 21, 24, 25, 68, 75, 76, 77, 98, 107, 111, 113], "indices2": 1, "window1r": 1, "window2r": 1, "extract": 1, "1st": 1, "2nd": 1, "half": [1, 14, 39, 64, 71], "window": [1, 5, 12, 13, 14, 16, 24, 25, 38, 39, 53, 55, 56, 59, 60, 61, 63, 64, 75, 76, 77, 86, 87, 88, 89, 90, 93, 94, 106], "floor": 1, "firsthalf1": 1, "secondhalf1": 1, "firsthalf2": 1, "secondhalf2": 1, "calcul": [1, 4, 5, 7, 8, 14, 24, 25, 35, 39, 52, 53, 55, 56, 69, 70, 75, 77, 81, 86, 87, 88, 89, 94, 104, 106], "factor": [1, 5, 11, 12, 14, 16, 39, 53, 56, 71, 72, 73, 75, 76, 77, 79, 81, 86, 88, 94, 106], "w1w2bar": [1, 94], "mean": [1, 14, 24, 25, 57, 74, 79, 102, 106, 108], "w1w2squaredbar": [1, 94], "w1w2ovlsquaredbar": 1, "calc_sens_integrand": 1, "p1": 1, "p2": 1, "delta_f": [1, 74], "orf": [1, 4, 5, 12, 51, 53, 68, 107, 113], "t": [1, 5, 11, 16, 24, 25, 38, 49, 96, 103, 107, 112, 113], "67": [1, 101, 111], "9e3": 1, "086e22": 1, "oo": 1, "s_alpha": 1, "sigma_square_avg": 1, "veto_lin": 1, "df": [1, 2, 20, 21, 24, 25], "nbin": [1, 24], "veto": [1, 11], "zero": [1, 14, 23, 24, 25, 26, 39, 64, 75, 76, 77, 98, 103, 107, 108, 109, 111], "dtype": [1, 24, 25, 111], "bool": [1, 5, 11, 12, 14, 16, 19, 24, 25, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 64, 65, 75, 76, 77], "fmin": 1, "fmax": 1, "fbin": 1, "argwher": 1, "size": [1, 10, 24, 25, 68, 79, 81, 103, 104, 106, 111, 112, 113], "segment_dur": [1, 12, 13, 38, 39, 51, 53, 55, 56, 59, 61, 65, 69, 70, 75, 77, 78, 100, 106, 110], "psd1_naiv": [1, 12], "psd2_naiv": [1, 12], "psd1_slide": [1, 12], "psd2_slide": [1, 12], "notch_list_path": [1, 5, 12, 16, 38, 39, 105, 106], "str": [1, 5, 12, 14, 16, 18, 19, 20, 22, 24, 25, 35, 39, 59, 60, 61, 62, 63, 68, 74, 81, 82, 87, 89], "lines_stochnotch": 1, "load_from_fil": [1, 17, 19, 103], "f": [1, 2, 14, 24, 25, 42, 44, 45, 46, 47, 48, 49, 50, 54, 107, 111, 112, 113], "enumer": [1, 40, 113], "minimum_frequ": [1, 14, 18], "maximum_frequ": [1, 14, 18], "els": [1, 18, 19, 113], "run": [1, 5, 12, 17, 22, 23, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 57, 74, 79, 80, 81, 82, 96, 98, 100, 102, 103, 109, 114], "nalpha": 1, "ntime": [1, 26, 52, 55, 56], "dt": [1, 24], "segmentdur": [1, 86], "deltaf": [1, 51, 56, 86], "deltat": [1, 86], "n_avg_seg": [1, 5, 14, 16, 51, 55, 56, 70, 86], "naiv": [1, 5, 11, 12, 39, 73, 74, 81, 104, 106], "estim": [1, 4, 5, 11, 14, 16, 23, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 77, 78, 80, 81, 89, 97, 104, 106, 114], "slide": [1, 5, 11, 12, 39, 81, 104, 106], "overall_cut": 1, "keep": [1, 24, 25], "squeez": [1, 24, 25], "han": 1, "psd1_naive_tim": 1, "psd1_slide_tim": 1, "psd2_naive_tim": 1, "psd2_slide_tim": 1, "naive_sensitivity_integrand_with_hf": 1, "slide_sensitivity_integrand_with_hf": 1, "naive_sigma_alpha": 1, "slide_sigma_alpha": 1, "badgpstim": [1, 5, 12, 81, 104, 106], "pickle_path": 1, "test_data": [1, 17, 100, 110], "naive_and_sliding_psd": 1, "open": [1, 2, 24, 25, 96, 109, 110, 113], "rb": 1, "handl": [1, 2, 13, 15, 17, 24, 25, 38, 57, 105, 107], "pickle_load": 1, "load": [1, 5, 13, 14, 15, 17, 19, 23, 24, 25, 98, 100, 104, 105, 106, 107, 109, 110], "naive_psd_1": 1, "naive_psd_2": 1, "avg_psd_1": [1, 53, 106], "avg_psd_2": [1, 53, 106], "192": [1, 13, 39, 51, 69, 101, 106, 111], "4096": [1, 13, 39, 51, 57, 61, 106], "official_o3_hl_notchlist": [1, 17], "txt": [1, 17, 19, 103, 104, 115], "2024": [1, 103], "02": [1, 51, 101, 106, 111, 113], "28": [1, 101, 111], "295": [1, 101], "__main__": [1, 24, 25, 106], "24764440e": 1, "09": [1, 101, 111], "24764449e": 1, "24764459e": 1, "shift": [1, 22, 24, 25, 59, 60, 61, 66, 87, 103, 108], "roll": 1, "random": [1, 10, 17, 24, 25, 42, 44, 45, 46, 48, 49, 50, 68, 100], "shift_timeseri": 1, "time_series_data": [1, 63, 64, 66, 76, 77], "time_shift": [1, 13, 38, 39, 59, 60, 61, 66, 106], "shifted_data": [1, 66], "31373317": 1, "76230909": 1, "020910006": 1, "58825514": 1, "48176435": 1, "16966562": 1, "58687714": 1, "23191557": 1, "51443502": 1, "93661302": 1, "mathrm": [1, 113], "14": [1, 24, 25, 100, 101, 106, 111, 113], "h1l1_1247644138": 1, "1247645038": [1, 106], "filenotfounderror": 1, "file": [1, 5, 12, 14, 16, 17, 19, 23, 24, 25, 38, 39, 57, 59, 81, 82, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115], "interactiveshel": 1, "284": [1, 101, 111], "_modified_open": 1, "arg": [1, 5, 14, 16, 18, 19, 24, 25, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 68, 81], "kwarg": [1, 5, 14, 16, 18, 19, 24, 25, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 68, 81, 107], "277": [1, 101], "278": [1, 101], "279": [1, 101, 111], "won": 1, "you": [1, 5, 14, 22, 24, 25, 52, 95, 96, 97, 102, 105, 113], "fd": 1, "280": [1, 101, 111], "crash": [1, 24, 25], "If": [1, 5, 14, 16, 17, 18, 19, 24, 25, 40, 52, 53, 54, 64, 68, 71, 75, 96, 97, 102, 103, 104, 106, 108, 112], "know": [1, 14, 103, 104, 107], "builtin": [1, 24, 25], "282": [1, 101, 111], "io_open": 1, "errno": 1, "directori": [1, 14, 102, 103, 104, 105, 106, 111, 112, 115], "16": [1, 24, 25, 81, 82, 101, 103, 106, 111], "pickled_bas": 1, "load_from_pickl": [1, 5, 23, 24, 25], "pickled_ifo_1": 1, "interferometer_1": [1, 5], "pickled_ifo_2": 1, "interferometer_2": [1, 5], "psd_spectrogram": [1, 14, 77], "average_psd": [1, 14, 51], "834": [1, 101], "cl": [1, 5, 109, 110], "filenam": [1, 5, 14, 17, 19, 22, 24, 25], "817": [1, 101, 106], "classmethod": [1, 5, 14, 16, 19, 24, 25, 40], "818": [1, 101, 111], "819": [1, 101, 111], "820": [1, 111], "object": [1, 4, 5, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 38, 39, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 67, 68, 74, 81, 98, 100, 103, 105, 106, 107, 109, 110, 111, 113, 116], "821": [1, 101], "832": [1, 101, 111], "class": [1, 2, 4, 5, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 67, 68, 80, 81, 82, 103, 105], "833": [1, 101, 111], "835": [1, 101], "A": [2, 3, 13, 14, 15, 16, 18, 19, 24, 25, 35, 38, 39, 41, 68, 90, 92, 95, 96, 99, 102, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115], "gravit": [2, 4, 9, 27, 38, 41, 51, 57, 67, 95, 96, 98, 99, 100, 103, 105, 106, 107, 114], "wave": [2, 4, 9, 14, 27, 38, 41, 51, 57, 67, 95, 96, 98, 99, 100, 103, 105, 106, 107, 114], "background": [2, 4, 5, 9, 27, 38, 41, 51, 67, 68, 95, 96, 98, 99, 100, 105, 106, 107, 111, 114], "gwb": [2, 4, 41, 51, 92, 99, 105, 106, 111, 114], "superposit": [2, 114], "too": [2, 24, 25], "faint": 2, "detect": [2, 107, 108], "individu": [2, 5, 13, 24, 25, 39, 67, 104, 106, 109, 114, 115], "incoher": 2, "overlap": [2, 4, 5, 12, 14, 16, 18, 19, 27, 35, 39, 51, 53, 55, 56, 68, 75, 76, 77, 78, 86, 87, 88, 89, 94, 97, 106, 107], "same": [2, 14, 17, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 103, 106, 110], "band": [2, 24, 81], "2022": [2, 101, 111], "primarili": 2, "character": 2, "its": [2, 4, 5, 10, 16, 24, 25, 38, 40, 51, 103, 104, 105, 106, 108, 113, 114], "emiss": 2, "usual": [2, 24, 25, 68, 102, 104, 105], "parameter": 2, "fraction": [2, 24, 25], "energi": 2, "spectrum": [2, 4, 5, 7, 8, 14, 16, 17, 23, 24, 25, 26, 39, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 68, 81, 92, 104, 105, 106, 107, 108], "target": [2, 19, 24, 25, 81], "stochast": [2, 4, 9, 22, 26, 38, 64, 67, 68, 98, 100, 103, 106, 107, 108, 111, 114, 115], "search": [2, 9, 24, 25, 27, 95, 99, 103, 104, 106, 107, 108, 114], "allen": 2, "romano": [2, 95], "1999": [2, 101], "frac": [2, 11, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 105, 107], "rho_c": 2, "d": [2, 24, 25, 95, 102], "rho_": 2, "ln": 2, "critic": 2, "univers": [2, 115], "categori": [2, 115], "sourc": [2, 5, 6, 8, 11, 12, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 103, 107], "identifi": [2, 24, 25, 65, 81, 96, 103, 106], "uniqu": 2, "shape": [2, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 68, 111], "henc": [2, 107, 108, 114], "provid": [2, 5, 14, 24, 25, 38, 57, 67, 68, 75, 76, 77, 95, 96, 97, 99, 106, 107, 108, 111, 112, 114, 115], "invalu": 2, "inform": [2, 3, 5, 9, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 41, 43, 51, 57, 62, 64, 67, 68, 69, 70, 74, 75, 76, 78, 79, 80, 81, 87, 91, 92, 94, 98, 100, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115], "evolut": [2, 80, 81], "popul": [2, 25, 42, 44, 45, 46, 48, 49, 50], "within": [2, 20, 21, 24, 25, 41, 78, 98, 100, 103, 106, 107, 109, 114], "consider": [2, 81], "data": [2, 4, 5, 10, 13, 14, 15, 16, 17, 23, 24, 25, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 86, 88, 94, 99, 103, 104, 105, 106, 108, 109, 114, 115], "analyz": [2, 10, 104, 106, 115], "vast": 2, "panorama": 2, "model": [2, 14, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 105, 114], "requir": [2, 4, 5, 17, 24, 25, 38, 39, 42, 44, 45, 46, 48, 49, 50, 81, 96, 98, 100, 104, 105, 106, 115], "commun": [2, 96], "effort": 2, "build": [2, 24, 98, 100, 110, 115], "entail": 2, "choic": [2, 24, 25, 98, 100, 105, 107], "depend": [2, 3, 5, 12, 24, 25, 104, 105, 106, 107, 111], "specif": [2, 10, 14, 24, 25, 38, 39, 51, 68, 96, 97, 103, 104, 105, 106, 107, 114], "analysi": [2, 4, 10, 13, 17, 22, 23, 38, 39, 41, 51, 53, 56, 57, 66, 80, 81, 82, 84, 94, 99, 103, 104, 105, 106, 107, 112, 113, 114, 115], "purpos": [2, 13, 15, 17, 24, 25, 57, 98, 100, 103, 106, 110, 111], "exemplifi": 2, "an": [2, 4, 5, 10, 12, 13, 14, 18, 19, 23, 24, 25, 38, 39, 40, 41, 51, 57, 59, 66, 67, 68, 69, 71, 72, 79, 82, 96, 98, 100, 102, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115], "access": [2, 3, 24, 25, 39, 81, 96, 104, 105, 106], "flexibl": [2, 41, 99, 107], "user": [2, 5, 16, 24, 25, 27, 38, 40, 41, 75, 76, 77, 80, 96, 97, 98, 99, 102, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115], "friendli": [2, 41, 99, 115], "codebas": [2, 99], "base": [2, 5, 10, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 57, 68, 81, 95, 98, 99, 105, 107, 109, 110], "modular": [2, 99, 114], "facilit": [2, 38, 68, 115], "code": [2, 9, 12, 14, 17, 19, 24, 25, 59, 60, 61, 62, 63, 65, 69, 75, 96, 102, 105, 106, 107, 109, 110, 112, 113, 114], "increas": [2, 24, 25, 115], "pipelin": [2, 39, 64, 66, 99, 103, 106, 114], "advantag": [2, 102], "languag": 2, "li": 2, "rapid": 2, "execut": [2, 96, 98, 100, 103, 104, 107, 109, 110, 112, 114, 115], "while": [2, 24, 25], "maintain": [2, 19, 24, 25, 96], "certain": [2, 11, 13, 17, 24, 25, 38, 57, 98, 105], "level": [2, 10, 24, 25, 105, 107, 114, 115], "result": [2, 5, 10, 14, 15, 24, 25, 26, 51, 52, 53, 80, 81, 82, 104, 105, 107, 108, 109, 110, 112, 114, 115], "shallow": [2, 19], "learn": [2, 114], "encourag": [2, 96], "contribut": [2, 71, 99, 107, 108], "whole": [2, 16, 96, 98, 104, 107, 108], "addit": [2, 3, 10, 14, 15, 17, 20, 23, 41, 51, 57, 69, 80, 97, 100, 103, 104, 105, 107, 108, 110, 112, 113, 114, 115], "reader": [2, 13, 41, 67, 69, 105, 107, 110, 111, 114], "paper": [2, 3, 80, 104, 106, 108, 112, 114], "consist": [3, 24, 25, 68, 80, 96, 98, 100, 105, 108, 109, 110, 112, 113, 114], "sever": [3, 9, 41, 76, 84, 102, 107, 112, 114, 115], "modul": [3, 4, 5, 7, 9, 13, 14, 15, 17, 23, 24, 25, 27, 38, 40, 41, 51, 57, 67, 68, 69, 80, 82, 84, 98, 99, 100, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114], "distinct": [3, 24, 25, 96], "summari": 3, "interact": [3, 24, 25, 27, 38, 40, 106, 113], "other": [3, 13, 17, 24, 25, 27, 42, 44, 45, 46, 48, 49, 50, 54, 57, 81, 99, 102, 103, 104, 105, 106, 107, 108, 111, 113, 114, 115], "extern": 3, "seen": [3, 106, 108], "schema": 3, "section": [3, 14, 35, 38, 39, 112, 115], "contain": [3, 5, 7, 9, 10, 11, 12, 14, 16, 17, 19, 21, 22, 23, 24, 25, 27, 38, 39, 43, 51, 59, 60, 61, 62, 63, 64, 66, 68, 69, 72, 75, 76, 77, 81, 82, 90, 92, 93, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115], "about": [3, 14, 17, 22, 23, 24, 25, 27, 41, 51, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115], "well": [3, 4, 10, 18, 23, 24, 25, 41, 42, 44, 45, 46, 48, 49, 50, 67, 80, 81, 104, 105, 107, 108, 111, 112, 113, 115], "descript": [3, 17, 18, 19, 20, 24, 25, 38, 40, 104, 106, 108, 115], "method": [3, 5, 7, 10, 13, 14, 16, 17, 18, 19, 24, 25, 27, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 67, 68, 69, 74, 75, 77, 78, 81, 82, 96, 98, 100, 103, 105, 106, 107, 109, 110, 111, 116], "therein": 3, "document": [3, 13, 23, 24, 25, 51, 69, 96, 98, 100, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 115], "through": [3, 4, 15, 24, 25, 38, 39, 81, 96, 104, 105, 106, 107, 110, 112, 114, 115], "tabl": 3, "content": [3, 18, 19, 24, 25], "left": [3, 24, 25, 42, 43, 44, 45, 46, 47, 48, 49, 50, 68, 105, 107], "hand": [3, 51, 107], "side": [3, 5, 14, 16, 24, 25, 70], "page": [3, 95, 96, 98, 100, 102, 103, 105, 107, 108, 109, 110, 113, 115], "found": [3, 13, 14, 15, 17, 23, 24, 25, 38, 39, 40, 41, 51, 57, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115], "design": [4, 15, 99, 103, 115], "Its": [4, 15, 104], "role": [4, 104], "manag": [4, 102], "cross": [4, 5, 7, 8, 14, 15, 16, 51, 53, 69, 75, 106], "correl": [4, 15, 41, 68, 87, 107], "between": [4, 5, 11, 12, 14, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 55, 68, 72, 75, 76, 77, 78, 86, 87, 88, 89, 94, 96, 102, 103, 104, 111, 113], "product": [4, 24, 25], "combin": [4, 12, 15, 16, 17, 27, 38, 41, 51, 52, 54, 55, 56, 57, 75, 76, 77, 82, 84, 88, 106, 108, 111, 112, 114, 115], "singl": [4, 16, 17, 24, 25, 39, 41, 51, 52, 96, 103, 104], "repres": [4, 14, 19, 24, 25, 41, 68, 69, 103, 108], "associ": [4, 5, 10, 14, 24, 25, 26, 52, 53, 54, 104, 105, 106], "reli": [4, 9, 16, 17, 41, 51, 98, 100, 104, 107, 109, 110, 114, 115], "stream": [4, 98, 108, 115], "similarli": [4, 15, 23, 106], "postprocess": [4, 5, 12, 16, 38], "obtain": [4, 5, 9, 13, 24, 25, 39, 54, 57, 102, 103, 104, 107, 112, 115], "varianc": [4, 5, 10, 14, 24, 25, 51, 53, 54, 55, 56, 104, 105, 106, 107], "reduct": [4, 5, 12, 27, 35, 39, 51, 53, 68, 97, 106, 107], "initi": [4, 15, 24, 25, 39, 65, 96, 106, 107, 111, 113, 115], "store": [4, 5, 13, 14, 16, 17, 18, 19, 24, 25, 38, 59, 62, 104, 106, 113, 115], "attribut": [4, 5, 14, 15, 16, 24, 25, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 81, 98, 107, 109, 110, 111], "show": [4, 10, 13, 15, 17, 24, 25, 81, 97, 98, 100, 103, 104, 105, 107, 108, 109, 110, 113, 115], "how": [4, 10, 15, 24, 25, 27, 41, 42, 44, 45, 46, 48, 49, 50, 67, 80, 96, 97, 98, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "instanti": [4, 5, 14, 15, 16, 38, 42, 44, 45, 46, 48, 49, 50, 81, 98, 100, 107, 109, 110], "start": [4, 13, 14, 15, 16, 19, 22, 24, 25, 27, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 65, 67, 68, 81, 92, 98, 100, 102, 103, 104, 106, 107, 109, 110, 111, 112, 114, 115], "relev": [4, 10, 13, 15, 24, 25, 27, 38, 39, 42, 44, 45, 46, 48, 49, 50, 67, 104, 105, 112, 115], "concret": [4, 10, 15, 27, 57, 67, 80, 98, 100, 105, 106, 107, 109, 110], "ligo": [4, 14, 15, 22, 27, 42, 44, 45, 46, 48, 49, 50, 56, 57, 62, 67, 96, 99, 100, 102, 103, 106, 107, 109, 113, 115, 116], "hanford": [4, 14, 15, 27, 42, 44, 45, 46, 48, 49, 50, 57, 67, 98, 99, 100, 103, 106, 107, 109, 110], "livingston": [4, 15, 27, 42, 44, 45, 46, 48, 49, 50, 67, 98, 99, 100, 103, 106, 107, 109, 110, 113], "pair": [4, 24, 25, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 113], "h1l1_baselin": 4, "none": [5, 6, 14, 16, 19, 20, 24, 25, 39, 40, 43, 51, 52, 53, 56, 64, 68, 74, 81, 82, 107], "calibration_epsilon": [5, 16, 38, 39, 105, 106, 107], "coarse_grain_psd": [5, 16, 38, 39], "coarse_grain_csd": [5, 16, 38, 39], "overlap_factor_welch": [5, 14, 16, 38, 39, 51, 56, 75, 77], "overlap_factor": [5, 12, 13, 14, 16, 38, 39, 51, 53, 55, 56, 69, 75, 76, 77, 78, 86, 87, 88, 89, 94, 106], "window_fftgram_dict": [5, 12, 14, 16, 51, 53, 55, 56, 69, 75, 76, 77, 86, 88, 90, 94], "window_fftgram": [5, 12, 13, 14, 16, 38, 39, 51, 53, 55, 56, 69, 75, 76, 77, 86, 88, 90, 94], "hann": [5, 12, 13, 14, 16, 39, 51, 53, 55, 56, 69, 75, 76, 77, 86, 87, 88, 89, 90, 94, 106], "window_fftgram_dict_welch": [5, 16, 51, 56], "n_average_segments_psd": [5, 12, 16, 38, 39], "g": [5, 14, 16, 17, 20, 22, 24, 25, 38, 39, 41, 59, 62, 74, 81, 96, 98, 103, 104, 106, 107, 115], "h1h2": [5, 16], "span": [5, 24, 25], "option": [5, 6, 11, 12, 14, 16, 20, 21, 22, 24, 25, 26, 35, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 74, 75, 76, 77, 78, 79, 81, 82, 86, 87, 88, 89, 90, 94, 98, 100, 104, 105, 106, 107, 112, 115], "inherit": [5, 16, 23, 24, 25, 41], "array_lik": [5, 6, 11, 12, 14, 16, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 68, 81, 91, 92], "calibr": [5, 14, 16, 39, 41, 103, 105, 107], "uncertainti": [5, 16, 41, 105, 107], "whether": [5, 10, 11, 14, 16, 19, 24, 25, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 75, 76, 77, 106, 108], "appli": [5, 12, 13, 14, 16, 19, 24, 25, 38, 39, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 79, 81, 87, 96, 104, 105, 106, 107], "coars": [5, 14, 16, 39, 69, 71, 72, 73, 74, 77, 106], "grain": [5, 14, 16, 39, 69, 71, 72, 73, 74, 77, 106], "spectra": [5, 16, 23, 24, 39, 51, 52, 54, 104, 106, 107, 112], "csd": [5, 7, 8, 16, 39, 51, 53, 69, 70, 75, 106], "welch": [5, 12, 14, 16, 39, 69, 73, 74, 75, 77, 78, 86, 87, 89, 106], "NOT": [5, 14, 39, 75, 77], "coarsegrain": [5, 14, 39, 75, 77], "boxcar": [5, 14, 39, 75, 76, 77], "50": [5, 13, 14, 17, 24, 25, 39, 57, 64, 75, 76, 77, 94, 101, 103, 106, 111], "dict": [5, 12, 14, 16, 39, 68, 75, 76, 77, 107, 116], "dictionari": [5, 12, 14, 16, 24, 25, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 55, 56, 68, 75, 76, 77, 86, 88, 90, 93, 94, 105, 106, 109, 110, 116], "describ": [5, 14, 16, 23, 24, 25, 39, 69, 75, 76, 77, 96, 102, 104, 105, 106], "produc": [5, 14, 16, 19, 24, 25, 39, 75, 76, 77, 104, 105, 106, 112], "fftgram": [5, 12, 14, 16, 39, 69, 106], "averag": [5, 12, 13, 14, 16, 24, 25, 39, 51, 52, 53, 55, 56, 69, 70, 73, 74, 75, 77, 78, 79, 86, 89, 106], "both": [5, 13, 14, 15, 16, 24, 25, 38, 40, 51, 67, 68, 70, 81, 96, 103, 104, 106, 108, 110, 111], "interest": [5, 14, 16, 70, 104, 108, 111, 112, 113], "should": [5, 10, 14, 16, 17, 20, 21, 24, 25, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 68, 70, 74, 75, 76, 77, 78, 82, 96, 102, 104, 105, 106, 107, 108, 111, 112, 114], "__call__": [5, 14, 16, 18, 19, 24, 25, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 68, 81], "self": [5, 14, 16, 18, 19, 24, 25, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 64, 68, 81, 106], "properti": [5, 14, 24, 25, 42, 44, 45, 46, 47, 48, 49, 50], "gp": [5, 11, 12, 14, 22, 24, 25, 59, 61, 62, 65, 81, 100, 103, 110], "delta": [5, 10, 11, 12, 24, 25, 39, 48, 80, 81, 82, 104, 106, 112, 113], "sigma": [5, 10, 11, 12, 16, 39, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 80, 81, 82, 104, 105, 106, 107, 112], "cut": [5, 10, 11, 12, 39, 80, 81, 82, 104, 106, 107, 112], "calc_baseline_orf": 5, "polar": [5, 14, 27, 35, 38, 39, 41, 43, 49, 68, 106], "tensor": [5, 14, 27, 31, 32, 35, 39, 41, 49, 68, 106, 113], "wrap": [5, 98, 100, 105, 110], "scalar": [5, 24, 25, 27, 28, 29, 35, 39, 49, 106, 113], "vector": [5, 24, 25, 27, 33, 34, 35, 36, 37, 39, 49, 106, 113], "By": [5, 24, 25, 27, 94, 98, 104, 106, 109, 110], "calc_orf": [5, 27], "comput": [5, 7, 12, 13, 14, 17, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 51, 56, 68, 69, 74, 75, 76, 77, 79, 81, 84, 85, 92, 97, 99, 102, 104, 105, 106, 107, 112, 113], "calculate_delta_sigma_cut": 5, "flow": [5, 16, 38, 39, 81, 106], "fhigh": [5, 16, 38, 39, 81, 106], "1726": [5, 16, 39, 106], "return_naive_and_averaged_sigma": [5, 12, 38, 39, 106], "cutoff": [5, 39, 106], "implement": [5, 24, 25, 41, 42, 44, 45, 46, 47, 48, 49, 50, 68, 69, 73, 96, 104, 106, 107, 108], "indic": [5, 10, 11, 12, 13, 16, 19, 23, 24, 25, 42, 43, 44, 45, 46, 47, 48, 49, 50, 57, 59, 62, 65, 68, 100, 102, 104, 106, 110, 111, 112], "low": [5, 14, 16, 24, 25, 48], "high": [5, 14, 16, 24, 25, 48, 57, 58, 59, 60, 61, 63, 99, 114], "check_sampling_frequencies_match_baseline_ifo": 5, "match": [5, 14, 16, 24, 25, 38, 39, 40, 92, 96, 106], "don": 5, "also": [5, 13, 14, 15, 17, 23, 24, 25, 27, 38, 51, 52, 68, 81, 96, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115], "later": [5, 109, 110], "coherence_dict": 5, "coher": [5, 81, 82, 103, 104, 106, 112], "coherence_spectrum": [5, 81], "crop_frequencies_average_psd_csd": 5, "crop": [5, 24, 25, 39, 65, 98, 100, 106], "place": [5, 10, 14, 19, 24, 25, 39, 64], "complet": [5, 24, 25, 100, 107, 111], "yet": 5, "csd_segment_offset": 5, "offset": [5, 24, 25], "delta_sigma": [5, 81], "from_interferomet": 5, "from_paramet": [5, 14, 100, 110], "necessari": [5, 24, 25, 84, 104, 107, 113], "subsequ": [5, 20, 24, 25], "analys": [5, 14, 39, 63, 64, 66, 81, 99, 103, 104, 106], "gamma_v": [5, 45], "asymmetr": 5, "polaris": [5, 14, 106, 107], "http": [5, 22, 28, 29, 30, 31, 32, 33, 34, 35, 56, 62, 92, 95, 102], "arxiv": [5, 14, 28, 29, 30, 31, 32, 33, 34, 35, 92], "org": [5, 22, 28, 29, 30, 31, 32, 33, 34, 35, 56, 62, 92, 95, 96, 102, 116], "pdf": [5, 28, 29, 30, 31, 32, 33, 34, 35, 56, 81, 92], "0707": [5, 30, 35], "0535": [5, 30, 35], "inclus": [5, 24, 25, 114], "orf_polar": [5, 68, 107, 113], "overlap_reduction_funct": [5, 35, 68, 113], "request": [5, 52, 62, 70], "point_estim": [5, 104, 106], "omega": [5, 14, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 80, 81, 92, 104, 106, 107, 111, 116], "point_estimate_spectrogram": [5, 106], "spectrogram": [5, 7, 8, 13, 14, 23, 24, 26, 51, 52, 53, 56, 69, 70, 74, 75, 76, 77, 78, 106], "point_estimate_spectrum": [5, 42, 44, 45, 46, 48, 49, 50, 81, 104, 106, 107], "reweight": [5, 23, 24, 25, 26, 52, 104], "new_alpha": [5, 23, 24, 25, 26], "new_fref": [5, 24, 25, 26], "weight": [5, 24, 26, 52, 53, 54, 104], "new": [5, 14, 23, 24, 25, 26, 40, 91, 96, 111], "must": [5, 24, 25, 38, 39, 52, 68], "save_point_estimate_spectra": 5, "save_data_typ": [5, 38, 39, 106], "save": [5, 13, 14, 15, 16, 17, 19, 23, 24, 25, 39, 62, 80, 81, 82, 98, 100, 103, 104, 105, 106, 107, 109, 110, 112], "overal": [5, 24, 25, 51, 104, 106, 112], "y": [5, 14, 24, 25, 27, 35, 51, 52, 68, 81, 107, 111, 113], "bar": [5, 11], "correspond": [5, 11, 16, 17, 24, 25, 68, 81, 92, 98, 100, 104, 106, 107, 108, 112], "npz": [5, 14, 39, 104, 106, 112], "json": [5, 39, 81, 105, 106, 109, 110, 116], "hdf5": [5, 16, 24, 25, 39, 106], "upon": 5, "afterward": 5, "loaod": 5, "kei": [5, 19, 24, 25, 104, 106, 115], "format": [5, 14, 16, 19, 24, 25, 38, 39, 62, 76, 98, 100, 105, 110, 112, 115], "type": [5, 17, 24, 25, 38, 39, 40, 59, 60, 61, 62, 63, 106, 107, 116], "want": [5, 17, 22, 24, 25, 38, 96, 100, 104, 105, 106, 110, 115], "save_psds_csd": 5, "save_to_pickl": [5, 24, 25], "wipe": [5, 104, 106], "scalar_overlap_reduction_funct": 5, "set_average_cross_spectral_dens": 5, "ha": [5, 10, 14, 17, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 41, 54, 98, 100, 102, 103, 106, 107, 109], "been": [5, 10, 14, 24, 25, 38, 96, 103, 107], "set_average_power_spectral_dens": 5, "have": [5, 14, 15, 17, 18, 19, 24, 25, 38, 51, 57, 71, 90, 96, 97, 98, 102, 103, 105, 106, 107, 109, 110, 111, 112, 115], "set_coherence_spectrum": 5, "badtim": 5, "apply_dsc": [5, 104, 106], "over": [5, 14, 17, 24, 25, 39, 51, 52, 56, 64, 68, 75, 77, 78, 79, 86, 104, 106, 107, 108, 111, 115], "exclud": [5, 10, 104, 105], "remov": [5, 10, 17, 19, 20, 21, 24, 25, 58, 59, 60, 61, 63, 107, 108], "calculate_coher": [5, 7], "shell": [5, 106], "set_cross_and_power_spectral_dens": 5, "frequency_resolut": [5, 13, 14, 38, 39, 69, 75, 77, 106], "avail": [5, 13, 24, 25, 39, 41, 104, 105], "resolut": [5, 13, 14, 25, 39, 56, 75, 77, 86, 103, 106], "cross_spectral_dens": [5, 14, 69], "set_frequency_mask": [5, 16], "apply_notch": [5, 105], "mask": [5, 10, 11, 12, 14, 16, 17, 18, 19, 52, 55, 56, 81, 98, 100, 103, 107, 113], "read": [5, 14, 16, 19, 23, 24, 25, 38, 39, 57, 59, 62, 69, 90, 103, 104, 105, 106, 107], "set_point_estimate_sigma": [5, 16], "25": [5, 23, 26, 27, 39, 44, 45, 46, 51, 53, 95, 101, 104, 105, 106, 107, 111, 112, 113], "omega_gw": [5, 16], "bin": [5, 11, 12, 16, 24, 71, 72, 81, 102, 103, 105, 108], "re": [5, 52, 104], "notch_list": [5, 16, 17, 19], "isn": [5, 16, 24], "directli": [5, 14, 16, 24, 25, 27, 38, 98, 100, 102, 106, 109], "here": [5, 9, 13, 14, 15, 16, 17, 18, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 41, 43, 51, 57, 62, 64, 68, 69, 70, 74, 75, 76, 78, 79, 81, 87, 91, 94, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115], "calc_y_sigma_from_yf_sigmaf": [5, 16, 51, 54], "set_point_estimate_sigma_spectrogram": 5, "doe": [5, 10, 14, 24, 25, 81, 98, 100, 104, 107, 110], "includ": [5, 14, 17, 20, 21, 24, 25, 39, 41, 52, 56, 57, 64, 99, 100, 103, 104, 105, 106, 107, 110], "final": [5, 13, 14, 17, 24, 25, 39, 53, 54, 75, 77, 103, 106, 107, 112], "lowest": [5, 16, 24], "highest": [5, 16, 24], "omega_spectra": [5, 16, 54], "omegaspectrogram": [5, 23, 52], "calculate_point_estimate_sigma_spectra": [5, 12, 51], "set_point_estimate_sigma_spectrum": 5, "integr": [5, 24, 41, 72, 99, 105, 107], "empti": [5, 13, 14, 16, 19, 24, 25, 27, 39, 59, 106, 107, 111, 113], "string": [5, 24, 25, 40, 59, 62, 81, 106], "postprocess_y_sigma": [5, 51], "omegaspectrum": [5, 16, 23, 54], "sigma_spectrogram": [5, 106], "sigma_spectrum": [5, 42, 44, 45, 46, 48, 49, 50, 81, 104, 106, 107], "tensor_overlap_reduction_funct": 5, "vector_overlap_reduction_funct": 5, "get": [6, 13, 14, 17, 18, 19, 24, 25, 52, 68, 96, 98, 100, 102, 109, 114, 115], "construct": [6, 24, 25, 42, 44, 45, 46, 48, 49, 50], "psd_1": [7, 8, 106], "psd_2": [7, 8, 106], "psd_1_spectrum": 8, "psd_2_spectrum": 8, "csd_spectrum": 8, "speed": [9, 24, 25], "light": 9, "hubbl": [9, 23, 24, 25], "insid": [9, 18, 19, 23, 24, 25, 96], "anoth": [9, 17, 24, 25, 51, 57, 113], "follow": [9, 24, 25, 35, 38, 41, 51, 57, 67, 68, 69, 80, 90, 96, 98, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 115], "ground": [10, 99], "chang": [10, 23, 24, 25, 26, 96, 102, 107, 112], "slowli": 10, "scale": [10, 24, 25, 81, 99], "ten": 10, "minut": [10, 98, 100], "hour": 10, "typic": [10, 16, 22, 103], "roughli": 10, "percent": 10, "next": [10, 17, 24, 25, 113], "occasion": 10, "veri": [10, 24, 25, 38, 109, 110], "loud": [10, 108], "disturb": 10, "glitch": [10, 13], "violat": [10, 44, 45, 105], "gaussian": [10, 81, 98, 100, 105, 107, 116], "auto": [10, 24, 25], "gate": [10, 13, 14, 38, 39, 57, 64, 81, 104, 106], "procedur": [10, 13, 51, 57, 68, 103, 104, 108], "non": [10, 24, 25, 27, 103, 108], "stationar": 10, "avoid": [10, 24, 25, 102, 105], "bias": 10, "event": [10, 109], "autom": [10, 96], "techniqu": 10, "develop": [10, 96, 102], "As": [10, 24, 25, 57, 67, 96, 103, 104, 106, 107, 111, 115], "end": [10, 12, 13, 14, 19, 22, 24, 25, 39, 42, 50, 51, 58, 59, 60, 61, 62, 63, 65, 72, 98, 100, 102, 104, 106, 112, 115], "randomli": 10, "placehold": 10, "sliding_sigma": 10, "normal": [10, 24, 25, 35, 57], "dsigma_mask": 10, "boolean": [10, 18, 19, 24, 25, 52, 55, 56, 68, 81], "remaind": [10, 13, 59, 60, 61, 63, 68, 103, 104], "actual": [10, 11, 12, 24, 25, 40, 67, 98, 100, 103, 104, 106, 112], "mark": [11, 13], "unus": 11, "j": [11, 12, 24, 25, 87], "pm": 11, "than": [11, 14, 24, 25, 75, 78, 108], "threshold": [11, 12, 14, 24, 25, 39, 64, 81, 106], "_": [11, 49, 106, 107, 115], "b_": 11, "avg": 11, "sigma_": [11, 43, 105, 107], "nav": 11, "bia": [11, 12, 56, 68, 81, 86], "exce": [11, 14, 39, 64], "were": [11, 24, 25, 64, 81, 103, 104, 106, 107, 108, 109], "bad": [11, 12, 17, 81], "wherea": [11, 104, 106, 108, 112, 115], "denot": [11, 104], "good": [11, 24, 25, 96, 102, 108], "per": [11, 12, 13, 24, 25, 39, 52, 108], "sample_r": [12, 14, 25, 51, 53, 57, 58, 61], "frequency_mask": [12, 51, 52, 55, 56, 81, 104, 106], "particular": [12, 14, 24, 25, 102, 105, 106], "adjac": [12, 14, 70, 75, 76, 77, 78], "rate": [12, 14, 39, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 81, 82, 106], "quantifi": 12, "locat": [12, 14, 24, 25, 40, 106, 113], "orient": [12, 14, 27, 113], "etc": [12, 24, 25, 38, 102], "characterist": [12, 53, 55, 56, 86, 88, 90, 93, 94], "dure": [12, 24, 25, 104, 106, 107, 108, 112], "chosen": [12, 15, 39, 98, 100, 105, 106, 109, 110], "dsigmas_dict": 12, "subclass": [13, 24, 25], "detail": [13, 24, 25, 38, 56, 69, 96, 102, 103, 106, 107, 110, 112, 114, 115], "charg": 13, "It": [13, 14, 15, 17, 18, 24, 25, 38, 41, 57, 99, 106, 107, 109, 110], "part": [13, 14, 24, 25, 38, 39, 41, 57, 63, 68, 80, 81, 84, 98, 100, 105, 107, 108, 111, 115], "relat": [13, 14, 17, 57, 68, 69, 106, 112, 115], "publicli": [13, 57], "gwosc": [13, 14, 39, 57, 59, 62, 69, 106], "server": [13, 57, 62, 104], "give": [13, 24, 25, 112, 115], "brief": [13, 106, 108, 112, 115], "overview": [13, 106, 115], "featur": [13, 23, 69, 96, 105, 114, 115], "make": [13, 15, 17, 23, 24, 25, 41, 96, 97, 98, 100, 102, 103, 105, 106, 107, 109, 110, 112, 113], "without": [13, 24, 25, 38, 52, 65, 104, 106, 107, 111, 115], "support": [13, 16, 24, 25, 27, 39, 52, 104, 114, 115], "parent": [13, 14, 23, 41, 42, 44, 45, 46, 47, 48, 49, 50], "ifo_1": [13, 51, 112], "Then": [13, 23, 24, 25, 51, 57, 102, 113], "set_timeseries_from": 13, "t0": [13, 14, 24, 38, 39, 57, 59, 61, 62, 69, 100, 104, 106, 110, 112, 115], "tf": [13, 38, 39, 57, 59, 61, 62, 69, 100, 104, 106, 110, 112, 115], "respect": [13, 24, 25, 52, 104, 112, 113], "public": [13, 24, 25, 39, 56, 57, 59, 62, 69, 106], "data_typ": [13, 38, 39, 57, 59, 62, 69, 106], "tag": [13, 39, 57, 81, 104, 106, 112, 115], "4khz_r1_strain": [13, 14, 59, 62, 69], "illustr": [13, 17, 27, 42, 44, 45, 46, 48, 49, 50, 57, 67, 69, 97, 98, 100, 103, 105, 107, 108, 109, 110, 111, 112, 113], "set_timeseries_from_channel_nam": [13, 14], "1247644138": [13, 57, 69, 106], "1247648138": [13, 57, 69], "local_data_path": [13, 38, 39, 57, 59, 62, 69, 106], "new_sample_r": [13, 38, 39, 51, 55, 56, 57, 59, 60, 61, 63, 100, 106, 110], "input_sample_r": [13, 38, 39, 57, 59, 62, 69, 106], "cutoff_frequ": [13, 38, 39, 57, 58, 59, 60, 61, 63, 106], "number_cropped_second": [13, 38, 39, 57, 58, 59, 60, 61, 63, 106], "window_downsampl": [13, 38, 39, 57, 59, 60, 61, 63, 106], "ham": [13, 39, 57, 59, 60, 61, 63, 106], "ftype": [13, 38, 39, 57, 59, 60, 61, 63, 106], "fir": [13, 24, 25, 39, 57, 59, 60, 61, 63, 106], "stretch": [13, 104, 106], "rid": [13, 17], "artefact": [13, 17, 81], "technic": 13, "gate_data_appli": [13, 14], "gate_tzero": [13, 14, 38, 39, 57, 106], "gate_tpad": [13, 14, 38, 39, 57, 104, 106], "gate_threshold": [13, 14, 38, 39, 57, 64, 106], "cluster_window": [13, 14, 38, 39, 57, 64, 106], "gate_whiten": [13, 14, 38, 39, 57, 106], "allow": [13, 17, 24, 25, 38, 41, 68, 80, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113], "after": [13, 19, 24, 25, 55, 56, 68, 80, 81, 89, 96, 102, 103, 104, 108, 112, 114, 115], "desir": [13, 15, 16, 24, 25, 39, 52, 68, 98, 100, 109, 110, 111], "set_psd_spectrogram": [13, 14], "window_fftgram_dict_welch_psd": [13, 69], "overlap_factor_welch_psd": [13, 69], "invok": [13, 15, 24, 25, 69], "set_average_psd": [13, 14], "n_average_segments_welch_psd": [13, 106], "highlight": [13, 114], "api": [13, 23, 24, 25, 40, 51, 69, 99, 103, 104, 105, 107, 108, 115], "argument": [14, 24, 25, 38, 39, 40, 59, 61, 64, 98, 100, 104, 105, 106, 110, 112, 115], "keyword": [14, 24, 25], "determin": [14, 24, 25, 108], "sensit": [14, 80, 81, 103, 107, 113], "length": [14, 19, 24, 25, 71, 75, 76, 77, 87, 88, 89, 94, 115], "km": [14, 24, 25], "latitud": [14, 113], "north": 14, "degre": [14, 44, 45, 113], "south": 14, "neg": [14, 24, 25, 68], "longitud": [14, 113], "east": 14, "west": 14, "elev": 14, "height": [14, 24], "surfac": 14, "metr": 14, "xarm_azimuth": [14, 113], "x": [14, 24, 25, 26, 27, 35, 36, 52, 54, 55, 56, 68, 111, 113], "arm": [14, 35, 113], "yarm_azimuth": [14, 113], "xarm_tilt": 14, "tilt": 14, "radian": 14, "horizont": 14, "ellipsoid": 14, "earth": [14, 22, 28, 29, 30, 31, 32, 33, 34, 35], "t980044": 14, "08": [14, 101, 111], "yarm_tilt": 14, "calibration_model": 14, "recalibr": 14, "correct": [14, 24, 25, 40, 68, 94, 103, 113], "templat": 14, "resampl": [14, 55, 56, 57, 63], "filter": [14, 24, 25, 39, 57, 58, 59, 60, 61, 63, 106], "segmentlist": [14, 64], "pad": [14, 24, 25, 64, 75, 76, 77], "gate_pad": 14, "amplitude_spectral_density_arrai": 14, "amplitud": [14, 24, 39, 42, 44, 45, 46, 47, 48, 49, 50, 64, 98], "asd": 14, "represent": [14, 24, 25, 103], "antenna_respons": 14, "ra": 14, "dec": 14, "psi": 14, "mode": [14, 24, 25, 102, 103], "antenna": 14, "respons": 14, "sky": 14, "nishizawa": 14, "et": 14, "al": 14, "2009": 14, "0903": [14, 28, 29, 30, 31, 32, 33, 34, 35], "0528": [14, 28, 29, 30, 31, 32, 33, 34, 35], "definit": [14, 24, 25, 43], "v": [14, 22, 24, 25, 49, 81, 96, 107, 113, 115], "w": [14, 24, 25, 54, 109, 110], "frame": [14, 16, 38, 39, 57, 59, 62], "m": [14, 24, 25, 43, 79, 96, 105, 107], "n": [14, 20, 24, 25, 43, 87, 88, 89, 94, 102, 105, 107], "typo": [14, 96], "right": [14, 24, 42, 43, 44, 45, 46, 47, 48, 49, 50, 68, 105, 107, 113], "ascens": 14, "declin": 14, "geocentr": 14, "binari": [14, 24, 25, 67, 103, 109, 110, 114], "angl": [14, 28, 29, 30, 31, 32, 33, 34, 36, 81, 113], "counter": 14, "clockwis": 14, "direct": [14, 24, 25], "propag": [14, 102], "plu": 14, "apply_gates_from_fil": 14, "loaded_object": 14, "integ": [14, 24, 25, 65, 71], "width": [14, 20, 21, 24, 25, 39, 64, 103], "planck": [14, 24, 25, 39, 64], "taper": [14, 24, 25, 39, 64], "preprocess": [14, 38, 39, 69, 106], "self_gate_data": [14, 57], "check_signal_dur": 14, "raise_error": 14, "fit": [14, 24, 25, 43, 81, 105, 107, 111], "inject": [14, 16, 17, 22, 24, 25, 68, 103, 105], "otherwis": [14, 24, 25, 75, 102, 103, 106, 107], "print": [14, 17, 18, 24, 25, 57, 104, 106, 111, 115], "argpars": [14, 38, 39], "command": [14, 38, 102, 104, 105, 106, 112, 115], "instanc": [14, 24, 25, 68, 82], "from_pickl": 14, "cluster": [14, 39, 64, 99, 102, 104, 106, 115], "befor": [14, 19, 24, 25, 64, 75, 76, 77, 80, 81, 103, 105, 107, 108, 109, 110], "discov": [14, 64], "highli": [14, 64], "recommend": [14, 64, 96, 102, 106], "itself": [14, 17, 19, 24, 25, 38, 87, 108, 112, 115], "get_detector_respons": 14, "waveform_polar": 14, "waveform": [14, 67, 109, 110], "posit": [14, 24, 25, 27, 113], "arriv": 14, "evalu": [14, 24, 25, 35, 42, 43, 44, 45, 46, 47, 48, 49, 50, 72, 81], "3x3": 14, "observ": [14, 106, 107], "inject_sign": 14, "injection_polar": 14, "waveform_gener": 14, "frequency_domain_strain": 14, "waveformgener": [14, 68], "longer": [14, 108], "instead": [14, 24, 25, 65, 98, 100, 102, 106], "wa": [14, 23, 24, 25, 57, 68, 81, 82, 95, 98, 100, 103, 104, 106, 107, 108, 110, 111, 112], "your": [14, 95, 96, 102, 104, 105, 106, 114, 115], "substanti": 14, "experi": 14, "buggi": 14, "behaviour": [14, 24, 25], "prefer": [14, 24, 25], "inject_signal_from_waveform_gener": 14, "altern": [14, 24, 25, 100, 102, 110], "inject_signal_from_waveform_polar": 14, "intern": 14, "inner_product": 14, "ratio": [14, 24, 108], "possibl": [14, 15, 24, 25, 38, 39, 41, 106, 107, 112, 114, 115], "squar": 14, "matched_filter_snr": 14, "optimal_snr_squar": 14, "plot_time_domain_data": 14, "outdir": [14, 105, 107, 116], "label": [14, 16, 96, 98, 100, 103, 104, 105, 106, 107, 111, 112, 113, 115, 116], "bandpass_frequ": 14, "250": [14, 101, 111], "start_end": 14, "strain": [14, 16, 68, 92, 100, 110, 111], "domain": [14, 24, 25, 68, 75, 98, 100, 111], "bandpass": 14, "tupl": [14, 19, 24, 25, 87, 89, 90], "subtract": [14, 103], "account": [14, 27, 51, 52, 81, 89, 103, 106, 107], "save_data": 14, "plain": [14, 24, 25], "text": [14, 24, 25, 42, 44, 45, 46, 47, 48, 49, 50, 81, 98, 100, 107, 111, 113], "three": [14, 17, 103, 107, 113], "column": [14, 24, 25, 104], "real": [14, 17, 24, 25, 80, 81, 107, 108, 111, 115], "h": [14, 104, 105, 111, 115], "imaginari": [14, 24, 25, 80, 81, 108], "v1": [14, 98, 103, 107, 113], "_psd": 14, "dat": [14, 22, 103, 107], "suppos": 14, "n_average_seg": 14, "exist": [14, 19, 24, 25, 39, 40, 96, 99, 102, 106], "raw": [14, 24, 25], "before_after_averag": 14, "coarse_grain": [14, 75, 77, 106], "fft": [14, 25, 68, 75, 76, 77, 78, 80, 81], "pwelch": [14, 39, 77], "via": [14, 24, 25, 77, 106, 112], "oppos": [14, 77], "set_strain_data_from_channel_nam": 14, "strain_data": [14, 17, 18, 98, 100, 109, 111, 113], "fetch": 14, "set_from_channel_nam": 14, "set_strain_data_from_csv": 14, "csv": 14, "set_strain_data_from_frame_fil": 14, "frame_fil": 14, "buffer_tim": 14, "set_strain_data_from_frequency_domain_strain": 14, "set_strain_data_from_gwpy_timeseri": [14, 100, 110], "time_seri": 14, "set_strain_data_from_power_spectral_dens": 14, "spectal": 14, "realiz": [14, 111], "interferometerstraindata": 14, "further": [14, 24, 25, 96, 105, 108, 112, 115], "set_strain_data_from_zero_nois": 14, "preprocessing_data_channel_nam": 14, "set_timeseries_from_gwpy_timeseri": 14, "gwpy_timeseri": [14, 60], "preprocessing_data_gwpy_timeseri": [14, 57], "set_timeseries_from_timeseries_arrai": 14, "timeseries_arrai": 14, "preprocessing_data_timeseries_arrai": 14, "time_delay_from_geocent": 14, "delai": 14, "geocent": 14, "to_pickl": 14, "version": [14, 24, 25, 96, 102, 106, 107, 115], "vertex_position_geocentr": 14, "vertex": [14, 27, 35, 113], "coordin": [14, 24, 25, 35], "meter": [14, 35], "gr": [14, 27, 41], "qc": 14, "0008066": 14, "eq": [14, 28, 29, 30, 31, 32, 33, 34], "b11": 14, "b13": 14, "except": [14, 24, 25, 39], "radiu": 14, "express": [14, 107], "3d": 14, "whitened_frequency_domain_strain": 14, "divid": [14, 115], "task": 15, "primari": [15, 112], "simul": [15, 16, 107, 114], "across": [15, 54], "queri": [15, 104], "sure": [15, 24, 25, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 109, 110, 112], "network_hl": 15, "hl": [15, 42, 44, 45, 46, 48, 49, 50, 103, 107, 109, 110], "hl_network": [15, 100, 110, 111], "from_baselin": [15, 16, 100, 110], "hl_baselin": [15, 100, 110], "intereferomet": 16, "current": [16, 24, 25, 26, 39, 99, 102, 106, 107, 115], "variou": [16, 17, 24, 25, 27, 51, 68, 80, 81, 96, 98, 100, 102, 103, 105, 106, 107, 109, 110, 111, 112], "combine_point_estimate_sigma_spectra": 16, "combine_spectra_with_sigma_weight": 16, "initialis": [16, 39], "care": [16, 51, 68, 115], "unpack": [16, 24, 25, 90, 103, 107], "save_interferometer_data_to_fil": [16, 98, 100, 110], "save_dir": 16, "file_format": 16, "write": [16, 24, 25, 96, 98, 100, 110], "folder": [16, 104, 106, 115], "accept": [16, 24, 25], "timeseriesdict": 16, "set_dur": 16, "set_interferometer_data_from_simul": [16, 98, 100, 109, 110, 111], "n_segment": [16, 67, 68, 98, 100, 110, 111], "gwb_intens": [16, 98, 100, 110], "cbc_dict": [16, 109, 110], "inject_into_data_flag": [16, 100, 110, 111], "fill": [16, 24, 25, 68], "alreadi": [16, 19, 24, 25, 51, 96, 102, 103, 104, 107, 108], "present": [16, 17, 19, 42, 43, 44, 45, 46, 47, 48, 49, 50, 68, 81, 98, 100, 103, 104, 105, 106, 108, 112, 115], "top": [16, 110, 111, 113], "cbc": [16, 68, 114], "so": [16, 24, 25, 68, 96, 105, 107], "extra": [16, 39, 107], "realist": [17, 103], "These": [17, 23, 24, 25, 38, 39, 51, 57, 84, 96, 97, 102, 103, 104, 105, 106, 114, 115], "thing": 17, "few": [17, 96, 97, 98, 106, 108, 109, 110, 113], "notchlist": [17, 19, 22, 103], "badli": 17, "behav": [17, 24, 25], "turn": [17, 65, 92, 104, 106, 112], "small": [17, 18, 38, 84, 96, 104, 106], "preval": 17, "comb": [17, 103], "structur": [17, 24, 25, 38, 41], "secondli": 17, "power_lin": [17, 103], "harmon": [17, 20, 21, 103], "60": [17, 21, 98, 100, 101, 103, 110, 111], "usa": 17, "itali": 17, "third": [17, 104, 106, 107], "pulsar_inject": [17, 103], "contamin": [17, 22], "pulsar": [17, 22, 103], "showcas": 17, "pn": 17, "collect": 17, "known": [17, 20, 24, 25, 68, 103], "around": [17, 24, 25, 108], "inde": [17, 57, 100, 107], "is_60_in_notch_list": 17, "check_frequ": [17, 18, 19], "print_notch": [17, 18], "That": [17, 52], "out": [17, 18, 19, 24, 25, 52, 96, 103, 104, 105, 106, 107, 110, 112, 114, 115], "arang": [17, 24, 25, 27, 103, 113], "1700": 17, "get_notch_mask": [17, 18, 19, 103], "save_file_flag": [17, 19], "save_to_txt": [17, 19, 103], "save_notch_mask": [17, 19, 103], "origin": [18, 24, 25, 54, 61, 103, 113], "reason": [18, 96], "get_idx": 18, "idx": [18, 107], "notch_mask": [18, 19], "displai": [18, 24, 25, 104, 105, 106, 108, 112, 115], "min": [19, 24, 25], "max": [19, 24, 25, 95], "malform": 19, "clear": [19, 24, 25, 107, 108], "item": [19, 24, 25, 83, 90, 116], "copi": [19, 24, 25, 68, 113, 115], "count": [19, 24, 25], "occurr": 19, "extend": [19, 103], "iter": [19, 24, 25, 40], "element": [19, 24, 25], "stop": [19, 24, 25], "maxsiz": 19, "insert": [19, 24, 25, 103, 111], "pop": 19, "indexerror": 19, "revers": [19, 24, 25], "IN": 19, "sort": [19, 24, 25], "ascend": 19, "order": [19, 24, 25, 66, 96, 98, 100], "modifi": [19, 24, 25, 41, 57, 105, 106], "stabl": [19, 24, 25, 102], "equal": [19, 23, 24, 25, 64, 75, 76, 77, 78], "onc": [19, 24, 25, 38, 96, 104], "descend": 19, "accord": [19, 24, 25], "sort_list": 19, "f0": [20, 24, 25], "f_space": 20, "n_harmon": 20, "fundament": [20, 21, 103], "space": [20, 24, 25, 40, 41, 74, 113], "studi": [20, 21, 111], "nharmon": [21, 103], "40": [21, 24, 25, 29, 101, 106, 111], "t_start": [22, 103], "t_end": [22, 103], "doppler": 22, "0001": 22, "o3": [22, 107], "git": [22, 96, 102], "stochasticdetchar": 22, "blob": 22, "master": 22, "make_notchlist": 22, "c": [22, 24, 25, 43, 68, 103, 105, 107, 112, 113], "motion": 22, "solar": 22, "system": [22, 102], "1e": [22, 24, 25, 67, 103, 105, 107, 116], "deal": [23, 115], "compar": [23, 24, 25, 38, 80, 81, 104, 108], "constitut": [23, 113, 114], "often": 23, "quickli": 23, "pe": [23, 105, 107], "sake": [23, 42, 44, 45, 46, 48, 49, 50, 103], "elabor": 23, "y_spectrogram": [23, 51], "omg_spectrogram": 23, "save_to_pickle_pickl": 23, "pickle_test": 23, "p": [23, 24, 25, 43, 81, 85, 105, 107, 108], "omg_load": 23, "addition": [23, 24, 25, 106], "could": [23, 24, 25, 98, 103, 104, 106, 107, 110], "cosmologi": 23, "reset_h0": [23, 24, 25], "new_h0": [23, 24, 25], "6766": [24, 25], "view": [24, 25], "transpos": [24, 25, 68], "cast": [24, 25], "same_kind": [24, 25], "k": [24, 25, 80, 81, 85, 98, 108, 113], "subok": [24, 25], "signatur": [24, 25, 116], "extobj": [24, 25], "absolut": [24, 25, 105], "wise": [24, 25], "shorthand": [24, 25], "broadcast": [24, 25], "freshli": [24, 25], "alloc": [24, 25], "condit": [24, 25], "At": [24, 25, 96, 103], "ufunc": [24, 25], "elsewher": [24, 25], "retain": [24, 25], "uniniti": [24, 25], "remain": [24, 25, 108], "doc": [24, 25, 102], "complex": [24, 25, 76], "ib": [24, 25], "b": [24, 25, 96, 102, 111], "1j": [24, 25], "5620499351813308": [24, 25], "num": [24, 25], "101": [24, 25, 101], "plane": [24, 25, 36], "xx": [24, 25], "newaxi": [24, 25], "imshow": [24, 25], "extent": [24, 25], "cmap": [24, 25], "grai": [24, 25], "axi": [24, 25, 79, 81], "keepdim": [24, 25], "full": [24, 25, 38, 39, 74, 82, 104], "equival": [24, 25, 73, 74, 113], "gap": [24, 25], "resiz": [24, 25], "connect": [24, 25], "onto": [24, 25], "oper": [24, 25], "bypass": [24, 25], "carefulli": [24, 25], "haven": [24, 25, 96], "share": [24, 25, 41, 107], "memori": [24, 25, 106], "discontigu": [24, 25], "action": [24, 25], "accommod": [24, 25, 105], "old": [24, 25, 96], "potenti": [24, 25], "fall": [24, 25], "off": [24, 25, 68], "put": [24, 25, 105], "argmax": [24, 25], "along": [24, 25, 35, 36], "argmin": [24, 25, 107], "argpartit": [24, 25], "kth": [24, 25], "kind": [24, 25], "introselect": [24, 25], "partit": [24, 25], "argsort": [24, 25], "unsaf": [24, 25], "typecod": [24, 25], "layout": [24, 25], "fortran": [24, 25], "contigu": [24, 25], "close": [24, 25], "appear": [24, 25], "equiv": [24, 25], "safe": [24, 25], "occur": [24, 25], "backward": [24, 25], "compat": [24, 25, 93], "byte": [24, 25], "preserv": [24, 25], "float64": [24, 25], "float32": [24, 25], "convers": [24, 25], "sub": [24, 25], "forc": [24, 25], "alwai": [24, 25, 96, 103], "newli": [24, 25], "satisfi": [24, 25, 111], "arr_t": [24, 25], "unless": [24, 25, 106], "complexwarn": [24, 25], "17": [24, 25, 101, 103, 111], "simpl": [24, 25, 41, 104, 107], "field": [24, 25], "numer": [24, 25, 108], "long": [24, 25, 52, 104, 114], "convert": [24, 25, 68, 98, 100], "own": [24, 25, 41, 102, 106, 107, 114], "slice": [24, 25], "whose": [24, 25], "byteswap": [24, 25], "swap": [24, 25], "toggl": [24, 25], "endian": [24, 25], "big": [24, 25], "256": [24, 25, 27, 101, 107], "8755": [24, 25], "int16": [24, 25], "map": [24, 25, 40], "hex": [24, 25], "0x1": [24, 25], "0x100": [24, 25], "0x2233": [24, 25], "13090": [24, 25], "0x3322": [24, 25], "ceg": [24, 25], "fac": [24, 25], "s3": [24, 25], "newbyteord": [24, 25], "uint8": [24, 25], "cg": [24, 25], "instrument": [24, 25, 103], "choos": [24, 25, 41, 102, 103], "clip": [24, 25], "limit": [24, 25, 107], "compress": [24, 25], "select": [24, 25], "conj": [24, 25], "conjug": [24, 25], "similar": [24, 25, 102, 104, 111, 112, 115], "behavior": [24, 25, 96, 98, 108, 112], "copyto": [24, 25], "c_contigu": [24, 25], "lower": [24, 25, 39, 106], "x0": [24, 25], "upper": [24, 25, 68, 81, 113], "fresh": [24, 25], "outsid": [24, 25, 68, 96, 115], "restrict": [24, 25, 62, 98, 100, 110], "xspan": [24, 25], "crop_frequ": [24, 51], "bound": 24, "spec": [24, 26], "subset": [24, 25, 38, 104], "ctype": [24, 25], "simplifi": [24, 25], "easier": [24, 25, 102], "librari": [24, 25, 95, 99], "stride": [24, 25], "themselv": [24, 25, 98, 100, 110], "possess": [24, 25], "ctypeslib": [24, 25], "guid": [24, 25], "omit": [24, 25, 103], "undocu": [24, 25], "privat": [24, 25, 39, 59, 62, 106], "_ctype": [24, 25], "pointer": [24, 25], "area": [24, 25], "writeabl": [24, 25], "troubl": [24, 25], "bewar": [24, 25], "exactli": [24, 25, 103, 104, 106, 107], "_array_interface_": [24, 25], "unlik": [24, 25], "data_a": [24, 25], "kept": [24, 25], "c_void_p": [24, 25], "dealloc": [24, 25], "spelt": [24, 25], "ndim": [24, 25], "basetyp": [24, 25], "platform": [24, 25], "c_intp": [24, 25], "c_int": [24, 25], "c_long": [24, 25], "c_longlong": [24, 25], "underli": [24, 25], "mani": [24, 25, 38, 96, 103, 104, 106], "jump": [24, 25], "obj": [24, 25], "_as_parameter_": [24, 25], "perhap": [24, 25], "c_doubl": [24, 25], "shape_a": [24, 25], "c_short": [24, 25], "strides_a": [24, 25], "still": [24, 25, 107, 115], "someth": [24, 25, 102, 108], "as_paramet": [24, 25], "int32": [24, 25], "31962608": [24, 25], "vari": [24, 25, 78], "c_uint32": [24, 25], "lp_c_uint": [24, 25], "0x7ff2fc1fc200": [24, 25], "c_uint": [24, 25], "c_uint64": [24, 25], "c_ulong": [24, 25], "4294967296": [24, 25], "_intern": [24, 25], "c_long_array_2": [24, 25], "0x7ff2fc1fce60": [24, 25], "0x7ff2fc1ff320": [24, 25], "cumprod": [24, 25], "cumul": [24, 25, 72, 80, 81, 108], "cumsum": [24, 25, 79], "buffer": [24, 25], "decompos": [24, 25], "irreduc": [24, 25], "unitbas": [24, 25], "sequenc": [24, 25], "down": [24, 25], "unitserror": [24, 25], "newq": [24, 25], "hertz": [24, 25], "diagon": [24, 25, 68], "axis1": [24, 25], "axis2": [24, 25], "previou": [24, 25, 96, 103, 104, 106, 108], "diff": [24, 25], "th": [24, 25, 72], "discret": [24, 25], "higher": [24, 25, 39, 106, 107], "recurs": [24, 25], "differenc": [24, 25], "taken": [24, 25, 27, 81, 107], "dimens": [24, 25, 52, 54, 55, 56, 68], "smaller": [24, 25, 104, 114], "arr": [24, 25], "discourag": [24, 25], "deprec": [24, 25], "replac": [24, 25, 102], "dump": [24, 25, 109, 110], "back": [24, 25], "dx": [24, 25], "separ": [24, 25, 103, 104, 113], "dy": 24, "epoch": [24, 25], "assign": [24, 25], "rare": [24, 25], "filt": [24, 25], "nx1": [24, 25], "coeffici": [24, 25, 39, 106], "nx6": [24, 25], "denomin": [24, 25], "polynomi": [24, 25], "pole": [24, 25], "gain": [24, 25], "state": [24, 25], "analog": [24, 25, 68, 103, 106, 111], "z": [24, 25, 68], "digit": [24, 25], "overwritten": [24, 25], "cannot": [24, 25], "interpret": [24, 25, 80, 97, 112], "properli": [24, 25, 38, 93, 96], "lowercas": [24, 25], "short": [24, 25, 104], "writebackifcopi": [24, 25], "entri": [24, 25, 71, 81, 90, 95, 107], "setflag": [24, 25], "arbitrarili": [24, 25], "truli": [24, 25], "ultim": [24, 25], "owner": [24, 25], "expos": [24, 25], "interfac": [24, 25], "style": [24, 25, 96], "simultan": [24, 25, 41, 104], "dimension": [24, 25], "dim": [24, 25], "hold": [24, 25], "items": [24, 25], "f_contigu": [24, 25], "owndata": [24, 25], "o": [24, 25, 96], "borrow": [24, 25], "written": [24, 25], "lock": [24, 25], "creation": [24, 25], "opposit": [24, 25], "made": [24, 25, 40, 102, 111], "under": [24, 25, 81, 96, 106], "circumst": [24, 25, 40], "alter": [24, 25], "previous": [24, 25, 106], "attempt": [24, 25, 40], "runtimeerror": [24, 25], "appropri": [24, 25, 38, 69], "hardwar": [24, 25], "pyarray_resolvewritebackifcopi": [24, 25], "updat": [24, 25, 39, 111], "fnc": [24, 25], "carrai": [24, 25], "ca": [24, 25], "farrai": [24, 25], "fa": [24, 25], "flat": [24, 25, 67], "quantityiter": [24, 25], "flatit": [24, 25], "built": [24, 25, 41], "flatten": [24, 25], "collaps": [24, 25], "row": [24, 25], "major": [24, 25], "ravel": [24, 25], "from_spectra": 24, "vertic": [24, 113], "stack": [24, 25], "metadata": [24, 25], "explicitli": [24, 64], "constructor": 24, "getfield": [24, 25], "complex128": [24, 25], "bit": [24, 25], "larger": [24, 25], "skip": [24, 25, 96], "begin": [24, 25, 42, 50, 58, 59, 60, 61, 63, 72, 104, 107], "diag": [24, 25], "imag": [24, 25], "0j": [24, 25], "70710678": [24, 25], "xindex": [24, 25], "intersect": [24, 25], "incompat": [24, 25], "interv": [24, 25], "uniformli": [24, 25], "timestamp": [24, 25], "who": [24, 25, 96], "wish": [24, 25, 102, 104], "thin": [24, 25], "wrapper": [24, 25], "q": [24, 25], "cm": [24, 25], "is_compat": [24, 25], "is_contigu": [24, 25], "tol": [24, 25], "814697265625e": [24, 25], "06": [24, 25, 101, 106, 111], "toler": [24, 25], "attach": [24, 25], "seamlessli": [24, 25], "anti": [24, 25], "seir": [24, 25], "di": [24, 25], "thie": [24, 25], "isscalar": [24, 25], "subtli": [24, 25], "sinc": [24, 25, 81, 103, 107, 111], "itemset": [24, 25], "There": [24, 25, 96], "least": [24, 25, 90], "faster": [24, 25], "syntax": [24, 25, 106], "problem": [24, 25, 107], "complic": [24, 25], "loop": [24, 25], "variabl": [24, 25, 48, 104, 106], "up": [24, 25, 96, 102, 103, 106, 108, 111, 112, 115], "123": [24, 25, 101, 107, 111], "randint": [24, 25], "amax": [24, 25], "median": [24, 25], "ax": [24, 25, 98, 100, 103, 111], "overwrite_input": [24, 25], "treat": [24, 25, 51, 75], "undefin": [24, 25], "probabl": [24, 25, 96, 104, 106], "fulli": [24, 25], "partial": [24, 25], "reduc": [24, 25, 104, 106], "With": [24, 25, 51, 107], "correctli": [24, 25, 98, 100, 109], "against": [24, 25], "percentil": [24, 25], "middl": [24, 25], "v_sort": [24, 25], "odd": [24, 25, 51, 55, 56, 71], "assert": [24, 25], "amin": [24, 25], "nbyte": [24, 25], "total": [24, 25], "consum": [24, 25], "480": [24, 25, 101, 111], "prod": [24, 25], "new_ord": [24, 25], "newbytord": [24, 25], "littl": [24, 25], "nativ": [24, 25], "byteord": [24, 25], "new_arr": [24, 25], "reflect": [24, 25, 107], "nonzero": [24, 25], "override_unit": [24, 25], "parse_strict": [24, 25], "forcefulli": [24, 25], "reset": [24, 25], "favour": [24, 25], "accur": [24, 25], "realli": [24, 25], "wrong": [24, 25], "pars": [24, 25, 38, 39, 93], "valid": [24, 25, 103], "pad_width": [24, 25], "assymetr": [24, 25], "rearrang": [24, 25], "wai": [24, 25, 100, 102, 103, 106, 111, 112, 114], "move": [24, 25, 103], "greater": [24, 25, 78], "behind": [24, 25, 98, 100, 104, 109], "22": [24, 25, 101, 103, 111], "algorithm": [24, 25], "unspecifi": [24, 25], "thei": [24, 25, 41, 97, 103], "come": [24, 25, 57, 104, 105, 106, 109, 110, 114, 115], "break": [24, 25, 42, 48, 50, 107], "ti": [24, 25], "indirect": [24, 25], "spectralvaraic": 24, "pcolormesh": 24, "figsiz": [24, 98, 100, 103, 111, 113], "xscale": [24, 25], "render": [24, 25], "inch": 24, "figur": [24, 25, 112, 113], "add_subplot": [24, 25], "prepend": [24, 25], "ptp": [24, 25], "peak": [24, 25, 108], "operand": 24, "usag": [24, 25, 38, 104, 115], "repeat": [24, 25, 104, 107, 111], "reshap": [24, 25], "free": [24, 25, 68, 106, 114], "new_shap": [24, 25], "refcheck": [24, 25], "pypi": [24, 25, 102], "reliabl": [24, 25], "systemerror": [24, 25], "bug": [24, 25, 96], "realloc": [24, 25], "consecut": [24, 25, 39, 55, 86, 87, 88, 89, 94, 106], "shrink": [24, 25], "enlarg": [24, 25], "miss": [24, 25], "doesn": [24, 25, 38], "referenc": [24, 25], "prevent": [24, 25, 68], "round": [24, 25], "decim": [24, 25], "searchsort": [24, 25], "sorter": [24, 25], "find": [24, 25, 40, 102, 106, 115], "setfield": [24, 25], "val": [24, 25], "ey": [24, 25], "0e": [24, 25], "000": [24, 25, 56, 111], "5e": [24, 25], "323": [24, 25, 101, 111], "uic": [24, 25], "affect": [24, 25, 103], "never": [24, 25], "unpickl": [24, 25, 40], "four": [24, 25, 94], "compil": [24, 25], "letter": [24, 25], "stdin": [24, 25], "infer": [24, 25, 42, 43, 44, 45, 46, 47, 48, 49, 50, 105, 107, 114], "fail": [24, 25, 40], "approach": [24, 25, 107], "getter": [24, 25], "unchang": [24, 25], "attributeerror": [24, 25], "modif": [24, 25], "forward": [24, 25], "xunit": [24, 25], "995": [24, 25, 101], "precis": [24, 25, 103], "suggest": [24, 25, 96], "int_": [24, 25], "overflow": [24, 25], "fix": [24, 25, 35, 96], "quicksort": [24, 25], "mergesort": [24, 25], "heapsort": [24, 25], "timsort": [24, 25], "cover": [24, 25, 72, 107, 108, 111], "datatyp": [24, 25], "lexsort": [24, 25], "s1": [24, 25], "i8": [24, 25], "std": [24, 25], "ddof": [24, 25], "deviat": [24, 25, 51, 52, 81, 104, 106, 108], "step": [24, 25, 96, 98, 100, 102, 103, 104, 107, 109, 115], "travers": [24, 25], "explan": [24, 25, 112], "rst": [24, 25], "stride_trick": [24, 25], "as_strid": [24, 25], "safer": [24, 25], "imagin": [24, 25], "block": [24, 25], "tell": [24, 25, 108, 113, 115], "19": [24, 25, 101, 111], "21": [24, 25, 101, 106, 111], "48": [24, 25, 101, 111], "224": [24, 25, 101, 111], "1344": [24, 25], "813": [24, 25, 101], "swapax": [24, 25], "interchang": [24, 25], "parseabl": [24, 25], "unit_equival": [24, 25], "context": [24, 25], "to_valu": [24, 25], "to_str": [24, 25], "subfmt": [24, 25], "set_printopt": [24, 25], "configur": [24, 25, 99, 115], "latex_array_threshold": [24, 25], "becaus": [24, 25, 98], "browser": [24, 25, 96], "unadorn": [24, 25], "latex": [24, 25], "latex_inlin": [24, 25], "expon": [24, 25], "subformat": [24, 25], "moment": [24, 25], "delimit": [24, 25, 40], "displaystyl": [24, 25], "possibli": [24, 25, 96], "tobyt": [24, 25], "exhibit": [24, 25], "frombuff": [24, 25], "invers": [24, 25, 68, 81, 108], "u2": [24, 25], "x00": [24, 25], "x01": [24, 25], "x02": [24, 25], "x03": [24, 25], "tofil": [24, 25], "fid": [24, 25], "sep": [24, 25], "independ": [24, 25, 54], "recov": [24, 25, 107, 111], "fromfil": [24, 25], "closest": [24, 25], "conveni": [24, 25, 107, 114], "quick": [24, 25, 96], "storag": [24, 25, 38], "intend": [24, 25, 96], "archiv": [24, 25, 102], "transport": [24, 25], "machin": [24, 25], "overcom": [24, 25], "expens": [24, 25], "gzipfil": [24, 25], "fileno": [24, 25], "bytesio": [24, 25], "tolist": [24, 25], "deep": [24, 25], "nest": [24, 25], "nearest": [24, 25], "depth": [24, 25], "recreat": [24, 25], "although": [24, 25, 98, 100, 103, 106, 109], "sometim": [24, 25], "lose": [24, 25], "1d": [24, 25, 52, 55, 56, 107], "almost": [24, 25], "uint32": [24, 25], "a_list": [24, 25], "a_tolist": [24, 25], "2d": [24, 25, 52, 54, 55, 56, 107], "0d": [24, 25], "typeerror": [24, 25], "tostr": [24, 25], "trace": [24, 25], "becom": [24, 25], "suitabl": [24, 25, 102], "permut": [24, 25], "physic": [24, 25, 41], "drop": [24, 25], "value_at": [24, 25], "yindex": 24, "var": [24, 25], "500": [24, 101, 103, 111], "norm": 24, "spectralvari": 24, "histogram": [24, 81, 108], "edg": [24, 71, 73], "rightmost": 24, "logarithm": 24, "normalis": [24, 25, 87], "specvar": 24, "former": [24, 25, 104], "alia": [24, 25], "float_": [24, 25], "descriptor": [24, 25], "matrix": [24, 25, 68, 76], "again": [24, 25, 57, 96, 97, 102, 107, 115], "omiss": [24, 25], "some_dtyp": [24, 25], "caus": [24, 25, 103], "reinterpret": [24, 25], "ndarray_subclass": [24, 25], "regular": [24, 25], "entir": [24, 25], "had": [24, 25], "int8": [24, 25], "513": [24, 25, 101], "xv": [24, 25], "i1": [24, 25], "recarrai": [24, 25], "i2": [24, 25], "rest": [24, 25, 62], "770": [24, 25, 101, 111], "3340": [24, 25], "3854": [24, 25, 101], "1284": [24, 25, 101], "1798": [24, 25, 101], "4368": [24, 25], "4882": [24, 25], "2312": [24, 25], "2826": [24, 25], "5396": [24, 25], "5910": [24, 25], "ye": [24, 25], "encompass": [24, 25], "y0": 24, "yspan": 24, "yunit": 24, "zip": [24, 25], "zpk": [24, 25], "dc": [24, 25], "specgram": 24, "five": [24, 25], "data2": [24, 25], "from_lal": 25, "lalf": 25, "from_pycbc": 25, "pycbc": 25, "ifft": [25, 68, 81], "fourier": [25, 68, 81, 108], "transform": [25, 68, 81, 108], "irfft": 25, "interpol": [25, 91, 103], "interp": [25, 103], "linear": [25, 80, 81, 107, 108], "scheme": 25, "to_lal": 25, "lalspec": 25, "xlal": 25, "real8frequencyseri": 25, "unabl": 25, "to_pycbc": 25, "old_alpha": 26, "old_fref": 26, "assum": [26, 27, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 81, 103, 107, 108, 113], "n_frequenc": 26, "n_time": 26, "meant": [26, 38, 40, 98, 100, 103, 108, 109], "helper": [26, 38, 103], "unweight": [26, 104], "new_spec": 26, "compon": 27, "bilbydet": [27, 42, 44, 45, 46, 48, 49, 50, 67, 107], "practic": [27, 98, 100, 104, 106, 110, 115], "beta": [28, 29, 30, 31, 32, 33, 34, 45, 113], "center": [28, 29, 30, 31, 32, 33, 34, 108], "special": [28, 29, 30, 31, 32, 33, 34, 38], "spherical_jn": [28, 29, 30, 31, 32, 33, 34], "35": [31, 101, 106, 107, 111], "38": [33, 101, 111], "det1_vertex": 35, "det2_vertex": 35, "det1_xarm": 35, "det2_xarm": 35, "det1_yarm": 35, "det2_yarm": 35, "ivb": 35, "appendix": 35, "1704": 35, "08373": 35, "discuss": [35, 104, 111, 112, 115], "cartesian": 35, "tesnor": 35, "bisector": 36, "tangent_vector": 36, "perp": 36, "tangent": [36, 37], "great": 36, "circl": 36, "outward": 36, "radial": 36, "perpendicular": 36, "omega_detx": 36, "vector1": 37, "vector2": 37, "tanget_vector": 37, "enter": [38, 69], "accompani": 38, "parametershelp": 38, "ingredi": 38, "script": [38, 82, 99, 107, 108, 114], "pygwb_pip": [38, 39, 112, 114, 115], "parameter_to_pass": 38, "my": 38, "update_from_fil": [38, 39, 100, 110], "data_spec": 38, "interferometer_list": [38, 39, 100, 106, 110], "ifo1": [38, 106], "ifo2": [38, 106], "frametyp": [38, 39, 59, 62], "gate_data": [38, 39, 106], "window_fft_spec": [38, 39], "window_fft_welch_spec": 38, "density_estim": 38, "data_qu": [38, 115], "alphas_delta_sigma_cut": [38, 39, 106], "local_data": 38, "ini": [38, 39, 100, 104, 106, 110, 115], "help": [38, 102, 104, 105, 106, 108, 112, 115], "emploi": [38, 41], "tukei": 38, "window_fftgram_welch": [38, 39], "evid": 38, "clarifi": 38, "my_fram": 38, "my_frame_1": 38, "my_frame_2": 38, "factori": 39, "16khz_r1_strain": [39, 57, 106], "16384": [39, 57, 59, 62, 69, 106], "03125": [39, 103], "window_fft_dict": [39, 90, 106], "window_fft_dict_welch": 39, "path_gate_data": 39, "dataclass": 39, "download": [39, 102, 103, 106], "downsampl": [39, 59, 60, 61, 63, 106], "suffix": [39, 106], "timeshift": [39, 57, 66, 106], "hint": [39, 106], "read_data": [39, 57, 69, 106], "retriev": [39, 59, 62, 100, 104, 106, 110, 115], "c00": [39, 106], "c01": [39, 106], "parse_ifo_paramet": 39, "param_dict": 39, "save_paramfil": 39, "output_path": [39, 106], "update_from_argu": 39, "coincid": [39, 113], "Not": [39, 104, 105, 106, 110], "easili": [39, 104, 108], "compos": 39, "update_from_dictionari": 39, "enum": 40, "qualnam": 40, "member": [40, 62], "color": [40, 98, 100, 109, 110, 111], "red": [40, 98, 111], "green": [40, 100], "blue": [40, 98, 100, 111], "white": 40, "comma": 40, "picklabl": 40, "scope": 40, "mix": 40, "natur": [41, 105], "toolkit": 41, "builder": 41, "constrain": [41, 114], "gwbmodel": [41, 42, 44, 45, 46, 47, 48, 49, 50], "likelihood": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 105, 107], "formul": 41, "epsilon": [41, 107], "explor": 41, "sampler": [41, 105, 107], "dynesti": [41, 107], "child": 41, "catalog": 41, "probe": [41, 107], "straightforward": 41, "expand": 41, "particularli": [41, 53, 108], "applic": 41, "presenc": [41, 107], "magnet": [41, 107], "astrophys": [41, 95, 107], "cosmolog": [41, 107], "dedic": [41, 51, 98, 100, 103, 105, 107, 109, 112, 115], "demo": [41, 80, 99, 104, 105, 112], "alpha_1": [42, 48, 50, 107], "leqslant": [42, 50], "alpha_2": [42, 48, 50, 107], "h1l1": [42, 44, 45, 46, 48, 49, 50, 107, 115], "simplic": [42, 44, 45, 46, 48, 49, 50, 103], "rand": [42, 44, 45, 46, 48, 49, 50], "kwargs_bpl": [42, 107], "model_nam": [42, 43, 44, 45, 46, 48, 49, 50, 107], "bpl": [42, 107], "model_bpl": [42, 107], "omega_ref": [42, 44, 45, 46, 48, 50, 105, 107, 116], "fbreak": [42, 48, 107], "log_likelihood": [42, 43, 44, 45, 46, 47, 48, 49, 50], "log_likelihood_ij": [42, 43, 44, 45, 46, 47, 48, 49, 50], "freq_mask": [42, 43, 44, 45, 46, 47, 48, 49, 50], "ij": [42, 43, 44, 45, 46, 47, 48, 49, 50, 105, 107], "logl_ij": [42, 43, 44, 45, 46, 47, 48, 49, 50], "log_likelihood_ratio": [42, 43, 44, 45, 46, 47, 48, 49, 50], "model_funct": [42, 43, 44, 45, 46, 47, 48, 49, 50], "bline": [42, 44, 45, 46, 47, 48, 49, 50], "noise_log_likelihood": [42, 43, 44, 45, 46, 47, 48, 49, 50], "hat": [43, 105, 107], "f_k": [43, 105, 107], "mathbf": [43, 105, 107], "theta": [43, 105, 107], "propto": [43, 105, 107], "exp": [43, 105, 107], "sum_": [43, 47, 105, 107], "sum_k": [43, 105, 107], "abstract": 43, "pariti": [44, 45, 105], "gamma": [44, 45, 49, 81, 107, 113], "_v": [44, 49, 107], "_i": [44, 45, 81], "kwargs_pl_pv": 44, "pl_pv": 44, "model_pl_pv": 44, "kwargs_pl_pv_2": 45, "pl_pv_2": 45, "model_pl_pv_2": 45, "kwargs_pl": [46, 107], "pl": [46, 107], "model_pl": [46, 107], "schumann": [47, 105, 107], "kappa_i": [47, 107], "kappa_j": [47, 107], "beta_i": [47, 107], "beta_j": [47, 107], "m_": [47, 107], "46": [47, 101, 107, 111], "coupl": 47, "smooth": [48, 105], "kwargs_sbpl": 48, "sbpl": 48, "model_sbpl": 48, "_t": [49, 107], "gamma_t": [49, 107], "gamma_": [49, 107], "kwargs_pl_sv": [49, 107], "pl_sv": [49, 107], "model_pl_sv": [49, 107], "omega_ref_pol": 49, "pol": 49, "alpha_pol": 49, "alpha_": [49, 107], "tripl": [50, 105], "f_1": 50, "f_2": 50, "alpha_3": 50, "kwargs_tbpl": 50, "tbpl": 50, "model_tbpl": 50, "fbreak1": 50, "fbreak2": 50, "stage": [51, 84, 96], "odd_even_segment_postprocess": 51, "achiev": [51, 75, 104], "var_spectrogram": 51, "csd_baselin": [51, 69], "12500000e": 51, "048e": 51, "03": [51, 98, 100, 101, 109, 111], "ifo_2": [51, 112], "pre": [51, 59, 60, 61, 63, 65, 96, 99, 100], "togeth": [51, 57, 68, 100, 104, 106, 108, 114], "y_spectrum": 51, "var_spectrum": 51, "badtimes_mask": [51, 56], "magnitud": 51, "postpp": 51, "outlin": [51, 98, 100, 106, 109], "y_f": [52, 55, 56], "sigma_f": 52, "suppli": 52, "nfrequenc": 52, "omega_spectrogram": 52, "theoret": [52, 81], "integrand": [53, 80, 81], "statist": [53, 54, 80, 81, 82, 97, 108, 114, 115], "window_factor": [53, 55], "main_spectra": 54, "weights_spectra": 54, "s_i": 54, "w_i": 54, "sum_i": 54, "2_i": 54, "n_1": 54, "n_2": 54, "contrast": 54, "combined_weighted_spectrum": 54, "combined_weights_spectrum": 54, "_check_omegaspectra": 54, "var_f": [55, 56], "nfreq": [55, 56], "y_f_new": [55, 56], "var_f_few": 55, "dcc": 56, "0027": 56, "t040089": 56, "00": [56, 109, 111, 113], "gpstime": 56, "noth": 56, "sigma_f_few": 56, "anyth": [57, 107], "prepar": 57, "triplet": 57, "preprocessing_data": 57, "fly": [57, 81], "ppp": [57, 69], "shown": [57, 98, 100, 104, 105, 106, 107, 108, 111], "data_timeseri": [57, 69], "khz": 57, "preprocessed_timeseri": 57, "gated_timeseri": 57, "deadtim": [57, 64], "process": [59, 60, 61, 63, 65, 73, 102], "l1_hoft_c00": [59, 62], "set_start_tim": [59, 61], "gwf": [59, 62], "pre_processed_data": [59, 60, 61], "www": 62, "opensci": 62, "virgo": [62, 96, 98, 99, 103, 106, 107, 113, 115], "kagra": [62, 96, 98, 106, 113, 115], "collabor": [62, 96], "gwsumm": 62, "get_timeseri": 62, "tzero": [64, 106], "tpad": [64, 106], "those": [64, 103, 106, 111, 114], "job_start_gp": 65, "job_end_gp": 65, "buffer_sec": 65, "do_sider": 65, "sider": 65, "dai": [65, 81], "terrestri": 65, "centered_start_tim": 65, "easi": 67, "tool": [67, 99, 102, 103], "compact": [67, 109, 110, 114], "coalesc": [67, 109, 110, 114], "ones": [67, 81, 104, 106], "simulator_object": 67, "continu": 68, "noise_psd": 68, "get_baselin": 68, "interpolate_frequency_seri": 68, "splice": 68, "compute_eigval_eigvec": 68, "eigenvalu": 68, "eigenvector": 68, "covari": 68, "nd": 68, "nf": 68, "eigval": 68, "matric": 68, "eigvec": 68, "linalg": 68, "eig": 68, "covariance_matrix": 68, "data_start": 68, "isotrop": [68, 107, 111, 115], "period": 68, "artifact": 68, "generate_freq_domain_data": 68, "uncorrel": 68, "phase": 68, "randn": 68, "interferometer_data": 68, "get_frequ": 68, "create_frequency_seri": 68, "get_noise_psd_arrai": 68, "noise_psds_arrai": 68, "get_orf": 68, "orf_list": 68, "inject_cbc": 68, "n_samples_per_seg": 68, "orf_to_arrai": 68, "orf_arrai": 68, "convent": [68, 81, 82, 96, 106, 112], "slot": 68, "until": 68, "reach": [68, 96], "splice_seg": 68, "aris": 68, "transform_to_correlated_data": 68, "einsum": 68, "effici": [68, 99], "summat": 68, "psp": 69, "data_timeseries_l": 69, "psd_h1": 69, "psd_l1": 69, "zeropad": [69, 75, 76, 77, 106], "psdgram": [70, 78], "avg_psdgram": [70, 78], "gram": [70, 78], "coarsening_factor": [71, 72, 73, 79], "coarsen": [71, 72, 73, 74, 79], "effect": [71, 73, 89, 94, 102, 107], "coarse_grain_exact": 71, "ii": [72, 111, 113], "delta_t": 74, "time_method": 74, "frequency_method": 74, "running_mean": 74, "time_series_data1": 75, "time_series_data2": 75, "is_psd": 75, "detector1": 75, "detector2": 75, "proper": [75, 76, 77], "slightli": [75, 107], "csd_spectrogram": 75, "fftlength": 76, "data_fftgram": 76, "get_window_tupl": 76, "parse_window_dict": 76, "get_window": [76, 87, 89, 90, 94], "everi": [77, 96, 104, 115], "running_mean_arrai": 79, "distribut": [80, 81, 102, 108, 109, 110], "trend": [80, 81, 108], "dedicatedplot_": 80, "sliding_times_al": 81, "sliding_omega_al": 81, "sliding_sigmas_al": 81, "naive_sigmas_al": 81, "coherence_n_seg": 81, "plot_dir": [81, 82, 112], "baseline_nam": 81, "param_fil": [81, 82, 104, 106, 112], "coherence_far": [81, 82], "gates_ifo1": 81, "gates_ifo2": 81, "file_tag": [81, 82, 104], "legend_fonts": [81, 82], "seaborn_palett": [81, 82], "tab10": [81, 82], "specrtra": 81, "broad": 81, "alarm": [81, 82], "exceed": 81, "font": [81, 111, 112], "legend": [81, 98, 100, 103, 111, 113], "coherence_pdf": 81, "coherence_pvalu": 81, "tail": 81, "coherence_threshold": 81, "far": [81, 107], "compute_ifft_integrand": 81, "point_estimate_integrand": 81, "t_arrai": 81, "lag": 81, "omega_t": 81, "compute_running_quant": 81, "sliding_sigma_cut": 81, "running_pt_estim": 81, "running_sigma": 81, "generate_all_plot": 81, "get_data_after_dsc": 81, "sliding_times_cut": 81, "days_cut": 81, "sliding_omega_cut": 81, "naive_sigma_cut": 81, "sliding_deviate_cut": 81, "plot_ifft_point_estimate_integrand": [81, 108], "plot_ks_test": [81, 108], "bias_factor": 81, "panel": 81, "kolmogorov": [81, 108], "smirnov": [81, 85, 108], "statk": 81, "plot_snr_spectrum": [81, 108], "plot_coherence_spectrum": 81, "plot_cumulative_snr_spectrum": [81, 108], "plot_cumulative_sensit": [81, 108], "plot_hist_coher": 81, "total_bin": 81, "outlier": [81, 108], "plot_hist_omega_pre_post_dsc": [81, 108], "snr": [81, 108], "sliding_deviate_al": 81, "plot_hist_sigma_dsc": [81, 108], "delta_sigmas_al": 81, "plot_hist_sigma_squar": [81, 108], "max_val": 81, "label_numb": 81, "math": 81, "langlesigma": 81, "plot_imag_snr_spectrum": [81, 108], "plot_omega_sigma_in_tim": [81, 108], "scatter": 81, "langl": 81, "rangl": 81, "plot_omega_time_fit": [81, 108], "plot_real_snr_spectrum": [81, 108], "plot_running_point_estim": [81, 108], "ymin": 81, "ymax": 81, "plot_running_sigma": [81, 108], "plot_scatter_omega_sigma_dsc": [81, 108], "plot_scatter_sigma_dsc": [81, 108], "plot_sigma_spectrum": [81, 108], "plot_sigma_time_fit": [81, 108], "save_all_stat": 81, "statement": 81, "gather": 81, "throughout": 81, "combine_file_path": [82, 112], "dsc_file_path": [82, 112], "coherence_file_path": [82, 112], "fontsiz": [82, 103, 113], "miscellan": 84, "mainli": [84, 115], "dk": 85, "kolgomorov": 85, "pvalu": 85, "window_tupl": [87, 89, 90], "ident": 87, "rho": [87, 88], "1967": [87, 101], "rho1": 88, "nsampl": 89, "neff": 89, "window_fft": 90, "fseri": 91, "new_frequ": 91, "fseries_new": 91, "interp1d": [91, 103], "omega_gwb": 92, "2303": 92, "15696": 92, "window_dict": 93, "w1w2ovlbar": 94, "w1w2squaredovlbar": 94, "scientif": 95, "accordingli": 95, "publish": 95, "apj": 95, "bibtex": 95, "articl": 95, "renzini_2023": 95, "doi": 95, "3847": 95, "1538": 95, "4357": 95, "acd775": 95, "url": 95, "2f1538": 95, "2facd775": 95, "year": [95, 106], "month": [95, 106], "jul": 95, "american": 95, "astronom": 95, "societi": 95, "volum": 95, "952": [95, 101, 111], "author": 95, "alba": 95, "romero": 95, "rodr": 95, "guez": 95, "colm": 95, "talbot": 95, "lalleman": 95, "shivaraj": 95, "kandhasami": 95, "kevin": [95, 98, 107, 109], "turbang": [95, 98, 107, 109], "sylvia": 95, "biscoveanu": 95, "katarina": 95, "martinov": 95, "patrick": [95, 107], "meyer": [95, 107], "leo": 95, "tsukada": 95, "kamiel": 95, "janssen": 95, "derek": 95, "davi": 95, "andrew": 95, "mata": 95, "philip": 95, "charlton": 95, "guo": 95, "chin": 95, "liu": 95, "irina": 95, "dvorkin": 95, "sharan": 95, "banagiri": 95, "sukanta": 95, "bose": 95, "thoma": 95, "callist": 95, "federico": 95, "de": 95, "lillo": 95, "luca": 95, "onofrio": 95, "fabio": 95, "garufi": 95, "gregg": 95, "harri": 95, "jessica": 95, "lawrenc": 95, "vuk": 95, "mandic": 95, "adrian": 95, "macquet": 95, "ioanni": 95, "michaloliako": 95, "sanjit": 95, "mitra": 95, "kiet": 95, "pham": 95, "rosa": 95, "poggiani": 95, "tania": 95, "regimbau": 95, "joseph": 95, "nick": 95, "van": 95, "remortel": 95, "haowen": 95, "zhong": 95, "titl": 95, "journal": 95, "instruct": [96, 102], "guidelin": 96, "environ": [96, 98, 100, 103, 107, 109, 111], "instal": [96, 98, 99, 100, 103, 107, 109, 111], "notabl": 96, "firstli": [96, 102], "welcom": 96, "appreci": 96, "hope": 96, "idea": 96, "understand": [96, 103, 107], "plan": 96, "ideal": 96, "issu": 96, "activ": [96, 102], "propos": [96, 106], "feedback": 96, "go": [96, 105, 107, 108, 115], "straight": [96, 111], "fork": 96, "workflow": [96, 114], "person": 96, "live": 96, "albert": 96, "einstein": [96, 113], "clone": [96, 102], "precommit": 96, "commit": 96, "verifi": [96, 108, 113], "reformat": 96, "ensur": [96, 100], "spell": 96, "checker": 96, "pip": [96, 102], "branch": 96, "checkout": 96, "suit": [96, 114], "pytest": 96, "extrem": 96, "intimid": 96, "onlin": 96, "my_new_fil": 96, "my_modified_fil": 96, "push": 96, "remot": 96, "repositori": [96, 102, 106], "prompt": [96, 102], "upstream": 96, "successfulli": 96, "link": [96, 102], "promptli": 96, "mention": [96, 103, 104, 106, 107, 111, 115], "nevertheless": 96, "peopl": 96, "contirbut": 96, "repo": [96, 102, 115], "touch": 96, "team": 96, "abl": [96, 104, 109, 110], "assist": 96, "fold": 96, "acknowledg": 96, "capabl": 97, "sens": 97, "custom": [97, 98, 100, 105, 110, 111], "feel": [97, 105, 106, 114], "overwhelm": [97, 105, 106], "sgwb": [98, 110, 115], "serv": [98, 109, 110], "loglog": [98, 100, 109, 111], "xlabel": [98, 100, 103, 111, 113], "ylabel": [98, 100, 103, 111, 113], "k1": [98, 113], "geo600": 98, "psd_arrai": [98, 109, 111], "line2d": [98, 109], "0x7f7284bf3040": 98, "screen": [98, 100, 102, 104, 109], "therefor": [98, 100, 103, 104, 106, 107, 108, 109, 110, 111, 115], "net_hlvkg": 98, "hlvkg": 98, "pygwb_mainten": [98, 107, 109], "220": [98, 101, 109], "did": [98, 109, 111], "05": [98, 100, 101, 102, 105, 109, 111], "981": [98, 101, 111], "272": [98, 100, 101, 109, 111], "026": 98, "073": [98, 101, 111], "119": [98, 101], "165": [98, 101, 111], "crop_start_tim": [98, 100], "crop_dur": [98, 100], "grab": [98, 100], "data_h_1min": 98, "to_gwpy_timeseri": [98, 100, 109, 111], "conclud": [98, 100, 106], "fig": [98, 100, 103, 111, 113], "subplot": [98, 100, 103, 111], "linewidth": [98, 100, 103, 111], "fairli": 98, "clearli": 98, "laser": 99, "tailor": [99, 115], "wide": 99, "anylsi": 99, "param": [100, 106, 110], "parameters_baseline_test": [100, 110], "1247644204": [100, 110], "1247645100": [100, 110], "128": [100, 101, 110, 111], "100000": 100, "net_hl": [100, 109, 110], "succesfulli": 100, "data_h_1min_pre_inject": 100, "58": [100, 101, 111], "716": [100, 101, 111], "878": [100, 101], "data_h_1min_post_inject": 100, "post": 100, "xlim": [100, 111, 113], "orang": [100, 111], "9997e": 101, "0115": 101, "9462e": 101, "0231": 101, "8942e": 101, "0347": 101, "8437e": 101, "0463": 101, "7946e": 101, "0579": 101, "7469e": 101, "0696": 101, "7005e": 101, "0813": 101, "6555e": 101, "093": [101, 111], "6117e": 101, "1047": 101, "5691e": 101, "1165": 101, "5277e": 101, "1283": 101, "4875e": 101, "1401": 101, "4484e": 101, "152": [101, 111], "4104e": 101, "1639": 101, "3734e": 101, "1758": 101, "3375e": 101, "1877": 101, "3026e": 101, "1997": 101, "2686e": 101, "2117": 101, "2355e": 101, "2237": 101, "2034e": 101, "2357": 101, "1722e": 101, "2478": 101, "1418e": 101, "2599": 101, "1122e": 101, "0835e": 101, "2842": 101, "0555e": 101, "2964": 101, "0283e": 101, "3086": 101, "0018e": 101, "3208": 101, "7607e": 101, "3331": 101, "5103e": 101, "3454": 101, "2666e": 101, "3577": 101, "0295e": 101, "3701": 101, "7988e": 101, "3825": 101, "5744e": 101, "3949": 101, "3559e": 101, "4073": 101, "1434e": 101, "4198": 101, "9365e": 101, "4323": 101, "7352e": 101, "4448": 101, "5393e": 101, "4574": 101, "3487e": 101, "4699": 101, "1631e": 101, "4826": 101, "9824e": 101, "4952": 101, "8066e": 101, "5079": 101, "6354e": 101, "5206": 101, "4688e": 101, "5333": 101, "3066e": 101, "5461": 101, "1487e": 101, "5589": 101, "995e": 101, "5717": 101, "8453e": 101, "5845": 101, "6996e": 101, "5974": 101, "5577e": 101, "6103": 101, "4195e": 101, "6232": 101, "285e": 101, "6362": 101, "154e": 101, "6492": 101, "0264e": 101, "6622": 101, "9022e": 101, "6753": 101, "7812e": 101, "6884": 101, "6634e": 101, "7015": 101, "5486e": 101, "7146": 101, "4369e": 101, "7278": 101, "328e": 101, "741": [101, 111], "222e": 101, "7543": 101, "1187e": 101, "7675": 101, "0181e": 101, "7808": 101, "9201e": 101, "7942": 101, "8246e": 101, "8075": 101, "7316e": 101, "8209": 101, "641e": 101, "8343": 101, "5528e": 101, "8478": 101, "4668e": 101, "8613": 101, "383e": 101, "8748": 101, "3014e": 101, "8884": 101, "2218e": 101, "9019": 101, "1443e": 101, "9155": 101, "0688e": 101, "9292": 101, "9953e": 101, "9429": 101, "9236e": 101, "9566": 101, "8537e": 101, "9703": 101, "7856e": 101, "9841": 101, "7193e": 101, "9979": 101, "6546e": 101, "0117": 101, "5916e": 101, "0256": 101, "5302e": 101, "0394": 101, "4703e": 101, "0534": 101, "412e": 101, "0673": 101, "3551e": 101, "2997e": 101, "0954": 101, "2457e": 101, "1094": 101, "1931e": 101, "1235": 101, "1376": 101, "0917e": 101, "1518": 101, "043e": 101, "166": 101, "9955e": 101, "1802": 101, "9491e": 101, "1944": 101, "904e": 101, "2087": 101, "86e": 101, "223": [101, 111], "817e": 101, "2374": 101, "7752e": 101, "2518": 101, "7344e": 101, "2662": 101, "6947e": 101, "2806": 101, "6559e": 101, "2951": 101, "6181e": 101, "3096": 101, "5812e": 101, "3242": 101, "5453e": 101, "3388": 101, "3534": 101, "4762e": 101, "368": 101, "4429e": 101, "3827": 101, "3974": 101, "3788e": 101, "4122": 101, "3479e": 101, "427": [101, 111], "3178e": 101, "4418": 101, "2885e": 101, "4566": 101, "2599e": 101, "4715": 101, "232e": 101, "4865": 101, "2048e": 101, "5014": 101, "1783e": 101, "5164": 101, "1524e": 101, "5314": 101, "1272e": 101, "5465": 101, "1027e": 101, "5616": 101, "0787e": 101, "5767": 101, "0553e": 101, "5919": 101, "0326e": 101, "6071": 101, "0103e": 101, "6223": 101, "8868e": 101, "6376": 101, "6756e": 101, "6529": 101, "4697e": 101, "6682": 101, "2689e": 101, "6836": 101, "0732e": 101, "699": 101, "8823e": 101, "7145": 101, "6962e": 101, "73": 101, "5148e": 101, "7455": 101, "3378e": 101, "761": [101, 111], "1654e": 101, "7766": 101, "9972e": 101, "7923": 101, "8332e": 101, "8079": 101, "6734e": 101, "8236": 101, "5175e": 101, "8394": 101, "3656e": 101, "8551": 101, "2174e": 101, "8709": 101, "073e": 101, "8868": 101, "9323e": 101, "9027": 101, "795e": 101, "9186": 101, "6612e": 101, "9345": 101, "5308e": 101, "9505": 101, "4037e": 101, "9666": 101, "2798e": 101, "9826": 101, "159e": 101, "9987": 101, "0412e": 101, "0149": 101, "9265e": 101, "031": [101, 111], "8146e": 101, "0473": 101, "7056e": 101, "0635": 101, "5994e": 101, "0798": 101, "4958e": 101, "0961": 101, "3949e": 101, "1125": 101, "2966e": 101, "1289": 101, "2007e": 101, "1453": 101, "1073e": 101, "1618": 101, "0163e": 101, "1783": 101, "9277e": 101, "1949": 101, "8413e": 101, "2115": 101, "7571e": 101, "2281": 101, "6751e": 101, "2448": 101, "5952e": 101, "2615": 101, "5173e": 101, "2782": 101, "4415e": 101, "3676e": 101, "3118": 101, "2957e": 101, "3287": 101, "2256e": 101, "3456": 101, "1573e": 101, "3625": 101, "0908e": 101, "3795": 101, "0261e": 101, "3965": 101, "963e": 101, "4136": 101, "9016e": 101, "4307": 101, "8418e": 101, "4478": 101, "7836e": 101, "465": [101, 111], "7269e": 101, "4822": 101, "6717e": 101, "4994": 101, "618e": 101, "5167": 101, "5656e": 101, "5341": 101, "5147e": 101, "5514": 101, "4651e": 101, "5689": 101, "4169e": 101, "5863": 101, "3699e": 101, "6038": 101, "3242e": 101, "6213": 101, "2797e": 101, "6389": 101, "2365e": 101, "6565": 101, "1943e": 101, "6742": 101, "1534e": 101, "6919": 101, "1135e": 101, "7096": 101, "0747e": 101, "7274": 101, "037e": 101, "7452": 101, "0004e": 101, "7631": 101, "9647e": 101, "781": [101, 111], "93e": 101, "7989": 101, "8963e": 101, "8169": 101, "8635e": 101, "8349": 101, "8316e": 101, "853": [101, 111], "8007e": 101, "8711": 101, "7706e": 101, "8893": 101, "7413e": 101, "9074": 101, "7129e": 101, "9257": 101, "6853e": 101, "944": [101, 111], "6586e": 101, "9623": 101, "6326e": 101, "9806": 101, "6073e": 101, "999": [101, 111], "5828e": 101, "0175": 101, "5591e": 101, "036": [101, 111], "5361e": 101, "0545": 101, "5137e": 101, "0731": 101, "4921e": 101, "0917": 101, "4712e": 101, "1104": 101, "4509e": 101, "1291": 101, "4312e": 101, "1478": 101, "4123e": 101, "1666": 101, "3939e": 101, "1854": 101, "3762e": 101, "2043": 101, "3591e": 101, "2232": 101, "3426e": 101, "2422": 101, "3268e": 101, "2612": 101, "3115e": 101, "2802": 101, "2968e": 101, "2993": 101, "2827e": 101, "3185": 101, "2692e": 101, "3377": 101, "2563e": 101, "3569": 101, "244e": 101, "3762": 101, "2322e": 101, "3955": 101, "221e": 101, "4148": 101, "2104e": 101, "4342": 101, "2004e": 101, "4537": 101, "191e": 101, "4732": 101, "1822e": 101, "4927": 101, "174e": 101, "5123": 101, "1664e": 101, "5319": 101, "1594e": 101, "5516": 101, "1531e": 101, "5713": 101, "1474e": 101, "5911": 101, "1423e": 101, "6109": 101, "138e": 101, "6308": 101, "1343e": 101, "6507": 101, "1314e": 101, "6706": 101, "1292e": 101, "6906": 101, "1278e": 101, "7106": 101, "7307": 101, "1274e": 101, "7509": 101, "1285e": 101, "771": [101, 111], "1305e": 101, "7913": 101, "1335e": 101, "8115": 101, "1375e": 101, "8319": 101, "1426e": 101, "8522": 101, "1489e": 101, "8726": 101, "1564e": 101, "8931": 101, "1651e": 101, "9136": 101, "1753e": 101, "9342": 101, "187e": 101, "9548": 101, "2003e": 101, "9754": 101, "2154e": 101, "9961": 101, "2323e": 101, "0169": 101, "2513e": 101, "0377": 101, "2726e": 101, "0585": 101, "2963e": 101, "0794": 101, "3227e": 101, "1003": 101, "3521e": 101, "1213": 101, "3848e": 101, "1423": 101, "4211e": 101, "1634": 101, "4615e": 101, "1846": 101, "5065e": 101, "2057": 101, "5566e": 101, "227": 101, "6125e": 101, "2482": 101, "675e": 101, "2696": 101, "7451e": 101, "2909": 101, "8238e": 101, "3124": 101, "9126e": 101, "3338": 101, "0131e": 101, "3554": 101, "3769": 101, "2581e": 101, "3986": 101, "4084e": 101, "4202": 101, "5826e": 101, "442": [101, 111], "786e": 101, "4637": 101, "026e": 101, "4856": 101, "3124e": 101, "5074": 101, "659e": 101, "5294": 101, "0857e": 101, "5513": 101, "6218e": 101, "5734": 101, "3135e": 101, "5954": 101, "237e": 101, "6176": 101, "5276e": 101, "6397": 101, "0452e": 101, "662": [101, 111], "3616e": 101, "6842": 101, "9762e": 101, "7066": 101, "6774e": 101, "729": 101, "0668e": 101, "7514": 101, "7297e": 101, "7739": 101, "1756e": 101, "7964": 101, "4056e": 101, "0349e": 101, "8417": 101, "1736e": 101, "8643": 101, "7459e": 101, "8871": 101, "7392e": 101, "9099": 101, "9927e": 101, "9327": 101, "4183e": 101, "9557": 101, "9636e": 101, "9786": 101, "5955e": 101, "002": [101, 111], "2919e": 101, "025": [101, 111], "0377e": 101, "048": [101, 111], "8223e": 101, "071": [101, 111], "6375e": 101, "094": [101, 111], "4777e": 101, "117": 101, "3383e": 101, "141": 101, "2158e": 101, "164": [101, 106, 111], "1074e": 101, "188": 101, "011e": 101, "211": [101, 111], "9248e": 101, "235": [101, 111], "8473e": 101, "258": 101, "7773e": 101, "7139e": 101, "306": [101, 111], "6562e": 101, "329": [101, 111], "6035e": 101, "353": 101, "5552e": 101, "377": [101, 111], "5108e": 101, "401": 101, "4699e": 101, "425": 101, "432e": 101, "449": [101, 111], "3969e": 101, "473": 101, "3643e": 101, "497": [101, 107], "3339e": 101, "522": [101, 111], "3056e": 101, "546": 101, "279e": 101, "57": [101, 111], "2541e": 101, "594": [101, 111], "2306e": 101, "619": 101, "2085e": 101, "643": 101, "1877e": 101, "668": 101, "1679e": 101, "693": [101, 111], "1492e": 101, "717": 101, "1315e": 101, "742": 101, "1146e": 101, "767": [101, 111], "0986e": 101, "791": [101, 111], "0832e": 101, "816": [101, 111], "0686e": 101, "841": [101, 111], "0545e": 101, "866": 101, "0411e": 101, "891": [101, 111], "0282e": 101, "916": 101, "0158e": 101, "942": [101, 111], "0039e": 101, "967": 101, "9242e": 101, "992": [101, 111], "8134e": 101, "018": 101, "7064e": 101, "043": 101, "603e": 101, "068": 101, "5029e": 101, "406e": 101, "312e": 101, "145": 101, "2207e": 101, "171": 101, "132e": 101, "197": [101, 111], "0458e": 101, "222": [101, 111], "9619e": 101, "248": 101, "8802e": 101, "274": 101, "8005e": 101, "7228e": 101, "326": 101, "6469e": 101, "352": [101, 111], "5728e": 101, "379": [101, 111], "5004e": 101, "405": [101, 111], "4296e": 101, "431": [101, 111], "3602e": 101, "458": [101, 111], "2923e": 101, "484": 101, "2258e": 101, "51": [101, 111], "1606e": 101, "537": [101, 111], "0966e": 101, "564": 101, "0339e": 101, "59": [101, 111], "9722e": 101, "617": [101, 111], "9117e": 101, "644": 101, "8523e": 101, "671": 101, "7938e": 101, "697": [101, 111], "7364e": 101, "724": [101, 111], "6798e": 101, "752": 101, "6242e": 101, "779": [101, 111], "5694e": 101, "806": [101, 111], "5155e": 101, "4624e": 101, "86": 101, "4101e": 101, "888": 101, "3585e": 101, "915": 101, "3076e": 101, "943": 101, "2575e": 101, "97": 101, "208e": 101, "998": [101, 111], "1592e": 101, "1111e": 101, "053": 101, "0636e": 101, "081": 101, "0166e": 101, "109": 101, "9703e": 101, "137": 101, "9246e": 101, "8794e": 101, "193": 101, "8347e": 101, "221": [101, 111], "7906e": 101, "249": [101, 111], "747e": 101, "7039e": 101, "6191e": 101, "362": 101, "5774e": 101, "391": [101, 111], "5362e": 101, "419": [101, 111], "4955e": 101, "448": [101, 111], "4551e": 101, "477": 101, "4152e": 101, "506": [101, 111], "3757e": 101, "534": [101, 111], "3367e": 101, "563": [101, 111], "298e": 101, "592": 101, "2597e": 101, "621": [101, 111], "65": [101, 111], "1843e": 101, "68": 101, "1471e": 101, "709": [101, 111], "1103e": 101, "738": 101, "0739e": 101, "0378e": 101, "797": 101, "002e": 101, "826": 101, "9666e": 101, "856": 101, "9315e": 101, "886": 101, "8968e": 101, "8623e": 101, "945": 101, "8282e": 101, "975": [101, 111], "7944e": 101, "005": [101, 111], "7609e": 101, "035": 101, "7276e": 101, "065": 101, "095": [101, 111], "6621e": 101, "125": 101, "6297e": 101, "156": 101, "5976e": 101, "186": [101, 111], "5658e": 101, "216": [101, 111], "5343e": 101, "247": [101, 111], "503e": 101, "472e": 101, "308": 101, "4413e": 101, "339": 101, "4108e": 101, "369": [101, 111], "3806e": 101, "3506e": 101, "3208e": 101, "462": [101, 111], "2913e": 101, "493": 101, "2621e": 101, "524": [101, 111], "233e": 101, "555": 101, "2042e": 101, "587": [101, 111], "618": [101, 111], "1473e": 101, "649": [101, 111], "1192e": 101, "681": 101, "0912e": 101, "712": [101, 111], "744": [101, 111], "0361e": 101, "776": 101, "0088e": 101, "808": [101, 111], "9817e": 101, "839": [101, 111], "9549e": 101, "871": 101, "9282e": 101, "903": 101, "9018e": 101, "935": [101, 111], "8755e": 101, "968": [101, 111], "8494e": 101, "8235e": 101, "032": [101, 111], "7979e": 101, "064": 101, "7724e": 101, "097": 101, "7471e": 101, "129": 101, "7219e": 101, "162": [101, 111], "697e": 101, "195": [101, 111], "6722e": 101, "6476e": 101, "26": [101, 111], "6232e": 101, "293": 101, "599e": 101, "5749e": 101, "359": [101, 111], "551e": 101, "392": 101, "5273e": 101, "5037e": 101, "459": [101, 111], "4803e": 101, "492": 101, "4571e": 101, "434e": 101, "559": 101, "411e": 101, "3883e": 101, "3657e": 101, "66": [101, 111], "3432e": 101, "694": [101, 111], "3209e": 101, "727": [101, 111], "2987e": 101, "2767e": 101, "795": [101, 111], "2549e": 101, "83": 101, "2332e": 101, "864": [101, 111], "2116e": 101, "898": 101, "1902e": 101, "932": 101, "1689e": 101, "1477e": 101, "001": 101, "1267e": 101, "1058e": 101, "0851e": 101, "105": [101, 111], "0645e": 101, "044e": 101, "175": [101, 111], "0237e": 101, "0035e": 101, "245": 101, "9834e": 101, "9635e": 101, "316": 101, "9436e": 101, "351": 101, "9239e": 101, "386": [101, 111], "9044e": 101, "422": [101, 111], "8849e": 101, "457": [101, 111], "8656e": 101, "8464e": 101, "529": 101, "8273e": 101, "8083e": 101, "7895e": 101, "636": 101, "7708e": 101, "672": [101, 111], "7522e": 101, "7337e": 101, "745": 101, "7153e": 101, "6788e": 101, "854": [101, 111], "6608e": 101, "89": 101, "6429e": 101, "927": 101, "625e": 101, "964": 101, "5897e": 101, "038": 101, "5722e": 101, "075": [101, 111], "5548e": 101, "112": [101, 111], "5375e": 101, "149": 101, "5203e": 101, "5032e": 101, "4862e": 101, "261": [101, 111], "4693e": 101, "4525e": 101, "336": 101, "4358e": 101, "374": 101, "4192e": 101, "411": 101, "4028e": 101, "3864e": 101, "487": [101, 111], "3701e": 101, "3539e": 101, "601": [101, 111], "3217e": 101, "3058e": 101, "678": [101, 111], "29e": 101, "2743e": 101, "755": [101, 111], "2586e": 101, "794": 101, "2431e": 101, "2276e": 101, "2122e": 101, "91": 101, "1969e": 101, "949": [101, 111], "1818e": 101, "1666e": 101, "027": 101, "1516e": 101, "067": [101, 111], "1367e": 101, "106": 101, "1218e": 101, "1071e": 101, "0924e": 101, "225": [101, 111], "0778e": 101, "264": 101, "0633e": 101, "304": 101, "0488e": 101, "344": [101, 111], "0345e": 101, "384": 101, "0202e": 101, "424": 101, "006e": 101, "464": [101, 111], "9919e": 101, "505": [101, 111], "9779e": 101, "545": [101, 111], "964e": 101, "585": 101, "9501e": 101, "9363e": 101, "667": [101, 111], "9226e": 101, "707": [101, 111], "9089e": 101, "748": 101, "8954e": 101, "789": 101, "8819e": 101, "8685e": 101, "8551e": 101, "912": [101, 111], "8419e": 101, "954": [101, 111], "8287e": 101, "8156e": 101, "037": 101, "8025e": 101, "078": [101, 111], "7896e": 101, "7767e": 101, "7638e": 101, "204": [101, 111], "7511e": 101, "246": 101, "7384e": 101, "288": 101, "7258e": 101, "7132e": 101, "372": 101, "7007e": 101, "414": 101, "6883e": 101, "676e": 101, "499": [101, 111], "6637e": 101, "542": 101, "6515e": 101, "6394e": 101, "628": [101, 111], "6273e": 101, "6153e": 101, "714": 101, "6034e": 101, "757": [101, 111], "5915e": 101, "5797e": 101, "844": [101, 111], "5679e": 101, "887": [101, 111], "5562e": 101, "931": 101, "5446e": 101, "974": [101, 111], "5331e": 101, "5216e": 101, "062": [101, 111], "5101e": 101, "4988e": 101, "194": 101, "238": [101, 111], "465e": 101, "283": [101, 111], "4539e": 101, "327": [101, 111], "4428e": 101, "4318e": 101, "416": [101, 111], "4209e": 101, "461": [101, 111], "41e": 101, "3992e": 101, "551": [101, 111], "3884e": 101, "596": [101, 111], "3777e": 101, "641": [101, 111], "367e": 101, "686": 101, "3564e": 101, "732": 101, "3459e": 101, "777": [101, 111], "3354e": 101, "823": 101, "325e": 101, "869": [101, 111], "3146e": 101, "3043e": 101, "96": 101, "294e": 101, "006": 101, "2838e": 101, "2737e": 101, "099": [101, 111], "2636e": 101, "2535e": 101, "2435e": 101, "2336e": 101, "285": [101, 111], "2237e": 101, "332": [101, 111], "2139e": 101, "2041e": 101, "426": [101, 111], "1847e": 101, "175e": 101, "567": [101, 111], "1655e": 101, "615": [101, 111], "1559e": 101, "1465e": 101, "71": 101, "1371e": 101, "758": 101, "1277e": 101, "805": 101, "1184e": 101, "1091e": 101, "901": [101, 111], "0999e": 101, "95": [101, 105], "0907e": 101, "0816e": 101, "046": 101, "0725e": 101, "0634e": 101, "144": 101, "0455e": 101, "241": [101, 111], "0366e": 101, "29": [101, 111], "0278e": 101, "019e": 101, "389": 101, "438": 101, "0015e": 101, "9929e": 101, "9843e": 101, "586": [101, 111], "9757e": 101, "9672e": 101, "9587e": 101, "736": [101, 111], "9503e": 101, "786": 101, "9419e": 101, "837": [101, 111], "9336e": 101, "9253e": 101, "937": 101, "917e": 101, "9088e": 101, "039": [101, 111], "9006e": 101, "089": 101, "8925e": 101, "8844e": 101, "191": [101, 111], "8764e": 101, "243": [101, 111], "8684e": 101, "294": [101, 111], "8604e": 101, "345": 101, "8525e": 101, "397": [101, 111], "8446e": 101, "8368e": 101, "829e": 101, "552": [101, 111], "8213e": 101, "604": 101, "8136e": 101, "656": [101, 111], "8059e": 101, "7983e": 101, "7907e": 101, "7831e": 101, "7756e": 101, "919": 101, "7681e": 101, "972": 101, "7533e": 101, "746e": 101, "131": [101, 111], "7386e": 101, "184": 101, "7314e": 101, "7241e": 101, "291": 101, "7169e": 101, "7098e": 101, "399": [101, 111], "7026e": 101, "453": 101, "6956e": 101, "507": [101, 111], "6885e": 101, "561": 101, "6815e": 101, "6745e": 101, "6676e": 101, "6607e": 101, "6538e": 101, "647e": 101, "889": 101, "6402e": 101, "6334e": 101, "6267e": 101, "055": 101, "62e": 101, "6133e": 101, "6067e": 101, "6001e": 101, "5936e": 101, "333": [101, 111], "5871e": 101, "5806e": 101, "446": [101, 111], "5741e": 101, "502": [101, 111], "5677e": 101, "558": [101, 111], "5613e": 101, "555e": 101, "5487e": 101, "5424e": 101, "843": [101, 111], "5299e": 101, "5238e": 101, "958": 101, "5176e": 101, "015": [101, 111], "5115e": 101, "5054e": 101, "4993e": 101, "189": [101, 111], "4933e": 101, "4873e": 101, "305": 101, "4814e": 101, "363": 101, "4754e": 101, "4695e": 101, "4637e": 101, "539": [101, 111], "4578e": 101, "598": [101, 111], "452e": 101, "4463e": 101, "4405e": 101, "4348e": 101, "4291e": 101, "895": [101, 111], "4235e": 101, "4178e": 101, "014": [101, 111], "4122e": 101, "074": 101, "4067e": 101, "134": 101, "4011e": 101, "3956e": 101, "255": [101, 111], "3901e": 101, "315": 101, "3847e": 101, "376": 101, "3793e": 101, "437": [101, 111], "3739e": 101, "498": 101, "3685e": 101, "3632e": 101, "62": [101, 111], "3579e": 101, "682": [101, 111], "3526e": 101, "743": 101, "3473e": 101, "3421e": 101, "867": 101, "3369e": 101, "929": 101, "3317e": 101, "991": [101, 111], "3266e": 101, "27": [101, 111], "3215e": 101, "115": 101, "3164e": 101, "178": [101, 111], "3113e": 101, "3063e": 101, "303": [101, 111], "3013e": 101, "366": [101, 111], "429": [101, 111], "2864e": 101, "556": 101, "2815e": 101, "2766e": 101, "683": [101, 109], "2718e": 101, "747": 101, "2669e": 101, "811": 101, "875": [101, 111], "2574e": 101, "94": 101, "2526e": 101, "004": [101, 111], "2479e": 101, "069": 101, "2432e": 101, "133": 101, "2385e": 101, "198": 101, "2338e": 101, "263": [101, 107], "2292e": 101, "328": 101, "2246e": 101, "394": [101, 111], "22e": 101, "2155e": 101, "2109e": 101, "591": 101, "2064e": 101, "202e": 101, "723": [101, 111], "1975e": 101, "855": 101, "1887e": 101, "922": [101, 111], "1799e": 101, "122": [101, 111], "1712e": 101, "1669e": 101, "257": 101, "1627e": 101, "324": [101, 111], "1584e": 101, "1542e": 101, "15e": 101, "528": 101, "1458e": 101, "1416e": 101, "664": 101, "1334e": 101, "801": [101, 111], "1293e": 101, "87": 101, "1252e": 101, "938": [101, 111], "1212e": 101, "007": [101, 111], "1171e": 101, "077": 101, "1131e": 101, "146": [101, 111], "1052e": 101, "1012e": 101, "355": [101, 111], "0973e": 101, "0934e": 101, "495": [101, 111], "0895e": 101, "566": [101, 111], "0818e": 101, "078e": 101, "0742e": 101, "848": [101, 111], "0704e": 101, "92": 101, "0667e": 101, "0629e": 101, "0592e": 101, "206": 101, "0518e": 101, "0482e": 101, "0445e": 101, "0409e": 101, "0373e": 101, "0337e": 101, "0302e": 101, "713": [101, 111], "0266e": 101, "0231e": 101, "859": [101, 111], "0196e": 101, "933": 101, "0161e": 101, "0126e": 101, "0092e": 101, "154": [101, 111], "0057e": 101, "228": [101, 111], "0023e": 101, "9894e": 101, "9556e": 101, "452": 101, "9221e": 101, "527": [101, 111], "8887e": 101, "602": [101, 111], "8554e": 101, "677": 101, "8224e": 101, "828": 101, "7569e": 101, "904": [101, 111], "7244e": 101, "979": [101, 111], "692e": 101, "6599e": 101, "132": 101, "6279e": 101, "208": 101, "5961e": 101, "5644e": 101, "361": [101, 111], "533e": 101, "5017e": 101, "515": 101, "4705e": 101, "593": 101, "4396e": 101, "4088e": 101, "3782e": 101, "3477e": 101, "3174e": 101, "982": [101, 111], "2873e": 101, "2573e": 101, "139": [101, 111], "2275e": 101, "218": 101, "1979e": 101, "296": 101, "1684e": 101, "139e": 101, "455": 101, "1099e": 101, "0809e": 101, "614": [101, 111], "052e": 101, "0233e": 101, "774": [101, 111], "9948e": 101, "9664e": 101, "934": 101, "9382e": 101, "9101e": 101, "096": [101, 111], "8822e": 101, "176": [101, 111], "8544e": 101, "8268e": 101, "7993e": 101, "772e": 101, "7448e": 101, "584": 101, "7178e": 101, "666": [101, 111], "6909e": 101, "6642e": 101, "831": [101, 111], "6376e": 101, "913": 101, "6112e": 101, "996": 101, "5849e": 101, "079": 101, "5587e": 101, "5327e": 101, "5069e": 101, "4811e": 101, "413": [101, 111], "4556e": 101, "4301e": 101, "581": [101, 111], "4048e": 101, "3796e": 101, "75": 101, "3546e": 101, "3297e": 101, "3049e": 101, "2803e": 101, "2558e": 101, "2315e": 101, "262": [101, 111], "2073e": 101, "347": 101, "1832e": 101, "434": [101, 103, 111], "1354e": 101, "606": [101, 111], "1117e": 101, "0881e": 101, "78": 101, "0647e": 101, "0414e": 101, "955": 101, "0182e": 101, "042": [101, 111], "9952e": 101, "9494e": 101, "9268e": 101, "9042e": 101, "483": [101, 111], "8818e": 101, "571": [101, 111], "8595e": 101, "8373e": 101, "8152e": 101, "7933e": 101, "928": [101, 111], "7715e": 101, "7498e": 101, "108": [101, 107, 111], "7282e": 101, "7067e": 101, "289": [101, 111], "6854e": 101, "6641e": 101, "47": [101, 111], "643e": 101, "622e": 101, "652": [101, 111], "6012e": 101, "5804e": 101, "836": [101, 111], "5597e": 101, "5392e": 101, "019": 101, "5188e": 101, "4985e": 101, "4783e": 101, "297": [101, 111], "4582e": 101, "4382e": 101, "576": [101, 111], "3986e": 101, "3789e": 101, "764": [101, 111], "3594e": 101, "858": 101, "3399e": 101, "3206e": 101, "2822e": 101, "236": 101, "2632e": 101, "331": 101, "2443e": 101, "2255e": 101, "2068e": 101, "1882e": 101, "1697e": 101, "81": 101, "1513e": 101, "906": [101, 111], "133e": 101, "003": 101, "1148e": 101, "0967e": 101, "0608e": 101, "489": [101, 111], "0253e": 101, "0077e": 101, "9902e": 101, "784": [101, 111], "9728e": 101, "883": [101, 111], "9555e": 101, "9383e": 101, "43": [101, 106, 109, 111], "9212e": 101, "9041e": 101, "8872e": 101, "8703e": 101, "479": 101, "8536e": 101, "8369e": 101, "8203e": 101, "8039e": 101, "882": [101, 111], "7875e": 101, "983": 101, "7712e": 101, "44": [101, 111], "084": [101, 111], "755e": 101, "7388e": 101, "7069e": 101, "691e": 101, "595": 101, "6752e": 101, "698": [101, 111], "6595e": 101, "6439e": 101, "6284e": 101, "45": [101, 111], "008": 101, "613e": 101, "5977e": 101, "5824e": 101, "5672e": 101, "5521e": 101, "5371e": 101, "634": [101, 111], "5222e": 101, "739": 101, "5073e": 101, "845": [101, 111], "4925e": 101, "951": 101, "4779e": 101, "057": 101, "4632e": 101, "163": [101, 106, 111], "4487e": 101, "269": 101, "4343e": 101, "4199e": 101, "3914e": 101, "3772e": 101, "3492e": 101, "021": [101, 111], "3353e": 101, "3214e": 101, "3077e": 101, "2804e": 101, "2668e": 101, "676": 101, "2534e": 101, "24e": 101, "896": [101, 111], "2267e": 101, "2134e": 101, "2002e": 101, "1871e": 101, "1741e": 101, "451": [101, 111], "1611e": 101, "562": [101, 111], "1482e": 101, "674": [101, 111], "787": [101, 111], "1227e": 101, "899": [101, 111], "11e": 101, "49": [101, 111], "012": [101, 111], "0974e": 101, "0848e": 101, "0723e": 101, "0599e": 101, "0476e": 101, "579": [101, 111], "0353e": 101, "023e": 101, "0109e": 101, "923": 101, "9988e": 101, "9868e": 101, "9748e": 101, "9629e": 101, "385": [101, 111], "9511e": 101, "9393e": 101, "9276e": 101, "735": 101, "916e": 101, "852": [101, 111], "969": 101, "8929e": 101, "087": [101, 111], "8814e": 101, "87e": 101, "322": [101, 111], "8587e": 101, "441": 101, "8474e": 101, "8362e": 101, "825e": 101, "8139e": 101, "917": [101, 111], "8029e": 101, "7919e": 101, "157": [101, 111], "7809e": 101, "7701e": 101, "7593e": 101, "518": 101, "7485e": 101, "639": 101, "7378e": 101, "7272e": 101, "7166e": 101, "53": [101, 111], "706e": 101, "127": 101, "6851e": 101, "6748e": 101, "6645e": 101, "6542e": 101, "644e": 101, "6338e": 101, "99": [101, 107], "6237e": 101, "54": [101, 111], "6137e": 101, "239": [101, 111], "6037e": 101, "365": [101, 111], "5938e": 101, "5839e": 101, "616": [101, 111], "574e": 101, "5642e": 101, "868": [101, 111], "5545e": 101, "994": 101, "5448e": 101, "55": [101, 111], "121": [101, 111], "5352e": 101, "5256e": 101, "516e": 101, "503": [101, 111], "631": [101, 111], "4971e": 101, "76": 101, "4877e": 101, "56": [101, 111], "017": [101, 111], "469e": 101, "4598e": 101, "276": [101, 111], "4506e": 101, "4414e": 101, "535": 101, "4323e": 101, "4232e": 101, "4142e": 101, "4052e": 101, "059": [101, 111], "3963e": 101, "3874e": 101, "3786e": 101, "454": [101, 111], "3698e": 101, "361e": 101, "72": 101, "3523e": 101, "3437e": 101, "986": [101, 111], "3351e": 101, "3265e": 101, "254": 101, "3179e": 101, "388": [101, 111], "3095e": 101, "523": 101, "301e": 101, "658": [101, 111], "2926e": 101, "793": 101, "2842e": 101, "2759e": 101, "2676e": 101, "201": [101, 111], "2594e": 101, "337": 101, "2512e": 101, "474": [101, 111], "243e": 101, "611": [101, 111], "2349e": 101, "749": 101, "2268e": 101, "2188e": 101, "2108e": 101, "2028e": 101, "302": 101, "1949e": 101, "1792e": 101, "1714e": 101, "1636e": 101, "61": [101, 111], "1405e": 101, "423": 101, "1329e": 101, "565": [101, 111], "1253e": 101, "1178e": 101, "849": [101, 111], "1028e": 101, "135": 101, "0953e": 101, "0879e": 101, "0806e": 101, "0659e": 101, "0587e": 101, "0515e": 101, "63": [101, 111], "0443e": 101, "0371e": 101, "436": [101, 111], "03e": 101, "583": 101, "0229e": 101, "876": [101, 111], "023": 101, "9949e": 101, "319": [101, 111], "9879e": 101, "467": 101, "981e": 101, "9742e": 101, "9673e": 101, "914": 101, "9605e": 101, "9538e": 101, "214": [101, 111], "947e": 101, "9403e": 101, "9337e": 101, "927e": 101, "9204e": 101, "9138e": 101, "9073e": 101, "9007e": 101, "8943e": 101, "8878e": 101, "734": [101, 111], "875e": 101, "8686e": 101, "196": [101, 111], "8622e": 101, "8559e": 101, "8496e": 101, "8434e": 101, "8371e": 101, "8309e": 101, "8248e": 101, "8186e": 101, "8125e": 101, "8064e": 101, "762": 101, "8003e": 101, "921": 101, "7943e": 101, "69": 101, "7883e": 101, "7823e": 101, "7763e": 101, "7704e": 101, "719": 101, "7645e": 101, "88": 101, "7586e": 101, "70": 101, "041": [101, 111], "7527e": 101, "202": 101, "364": [101, 111], "7411e": 101, "7353e": 101, "689": [101, 111], "7296e": 101, "7238e": 101, "016": [101, 111], "7181e": 101, "179": [101, 111], "7124e": 101, "7068e": 101, "508": 101, "7012e": 101, "673": 101, "6955e": 101, "838": 101, "69e": 101, "6844e": 101, "6789e": 101, "6679e": 101, "6624e": 101, "657e": 101, "174": [101, 111], "6461e": 101, "343": [101, 111], "6408e": 101, "512": [101, 111], "6301e": 101, "6248e": 101, "74": 101, "022": [101, 111], "6195e": 101, "6142e": 101, "609e": 101, "6038e": 101, "5986e": 101, "879": 101, "5934e": 101, "052": [101, 111], "5882e": 101, "5831e": 101, "578e": 101, "572": 101, "5729e": 101, "5678e": 101, "5628e": 101, "5527e": 101, "5477e": 101, "624": [101, 111], "5427e": 101, "5378e": 101, "978": [101, 111], "5329e": 101, "77": 101, "155": [101, 111], "528e": 101, "5231e": 101, "5182e": 101, "5133e": 101, "5085e": 101, "049": [101, 111], "229": 101, "4989e": 101, "409": 101, "4941e": 101, "4894e": 101, "772": 101, "4846e": 101, "953": 101, "4799e": 101, "79": 101, "4752e": 101, "318": [101, 111], "501": 101, "4659e": 101, "684": [101, 111], "4612e": 101, "4566e": 101, "80": 101, "4474e": 101, "421": [101, 111], "607": [101, 111], "4337e": 101, "4292e": 101, "4247e": 101, "4202e": 101, "541": [101, 111], "4157e": 101, "4113e": 101, "4068e": 101, "82": 101, "4024e": 101, "398e": 101, "485": [101, 111], "3936e": 101, "675": 101, "3893e": 101, "3849e": 101, "3719e": 101, "633": [101, 111], "3634e": 101, "84": 101, "213": [101, 111], "3549e": 101, "407": 101, "3464e": 101, "3422e": 101, "3381e": 101, "85": 101, "582": [101, 111], "3256e": 101, "977": [101, 111], "3133e": 101, "3092e": 101, "573": 101, "3052e": 101, "773": 101, "3011e": 101, "973": 101, "2971e": 101, "173": [101, 111], "2931e": 101, "2891e": 101, "2851e": 101, "778": 101, "2811e": 101, "98": 101, "2771e": 101, "183": 101, "2732e": 101, "2693e": 101, "2654e": 101, "2614e": 101, "2576e": 101, "205": 101, "2537e": 101, "2498e": 101, "246e": 101, "2421e": 101, "90": [101, 113], "2383e": 101, "2345e": 101, "2307e": 101, "655": [101, 111], "2269e": 101, "2232e": 101, "2194e": 101, "2157e": 101, "494": 101, "2119e": 101, "705": [101, 111], "2082e": 101, "2045e": 101, "2008e": 101, "1971e": 101, "553": [101, 111], "1935e": 101, "1898e": 101, "1862e": 101, "93": 101, "1825e": 101, "1789e": 101, "625": [101, 106, 111], "1717e": 101, "058": [101, 111], "1681e": 101, "275": 101, "1646e": 101, "161e": 101, "1574e": 101, "1539e": 101, "147": 101, "1504e": 101, "367": [101, 111], "1469e": 101, "807": [101, 111], "1399e": 101, "028": 101, "1364e": 101, "471": [101, 111], "1295e": 101, "1261e": 101, "1226e": 101, "1158e": 101, "589": [101, 111], "1124e": 101, "814": 101, "109e": 101, "1056e": 101, "266": [101, 111], "1023e": 101, "0989e": 101, "0956e": 101, "947": [101, 111], "0922e": 101, "0889e": 101, "404": [101, 111], "0856e": 101, "0823e": 101, "863": [101, 111], "079e": 101, "0757e": 101, "0692e": 101, "066e": 101, "0627e": 101, "0595e": 101, "0563e": 101, "0531e": 101, "0499e": 101, "102": [101, 111], "0467e": 101, "0435e": 101, "0403e": 101, "0372e": 101, "103": [101, 111], "034e": 101, "0309e": 101, "0247e": 101, "104": [101, 111], "0216e": 101, "0185e": 101, "0154e": 101, "0123e": 101, "0062e": 101, "0031e": 101, "0001e": 101, "997e": 101, "994e": 101, "991e": 101, "988e": 101, "107": 101, "985e": 101, "982e": 101, "979e": 101, "9761e": 101, "9731e": 101, "9702e": 101, "9643e": 101, "9614e": 101, "9585e": 101, "9527e": 101, "110": [101, 111], "9498e": 101, "9469e": 101, "944e": 101, "9412e": 101, "111": 101, "9355e": 101, "9327e": 101, "9298e": 101, "9214e": 101, "9186e": 101, "113": 101, "9158e": 101, "913e": 101, "9103e": 101, "9075e": 101, "114": [101, 111], "9048e": 101, "902e": 101, "8993e": 101, "8966e": 101, "8939e": 101, "8911e": 101, "8884e": 101, "8857e": 101, "116": [101, 111], "8831e": 101, "8804e": 101, "8777e": 101, "8751e": 101, "8724e": 101, "8698e": 101, "8671e": 101, "118": [101, 111], "8645e": 101, "8619e": 101, "8593e": 101, "8566e": 101, "854e": 101, "8515e": 101, "8489e": 101, "120": [101, 113], "07": [101, 111], "8463e": 101, "8412e": 101, "8386e": 101, "8361e": 101, "8335e": 101, "831e": 101, "8285e": 101, "826e": 101, "821e": 101, "8185e": 101, "816e": 101, "8135e": 101, "124": 101, "811e": 101, "8086e": 101, "8061e": 101, "8037e": 101, "8012e": 101, "7964e": 101, "126": 101, "7939e": 101, "7915e": 101, "7891e": 101, "7867e": 101, "7843e": 101, "7819e": 101, "7796e": 101, "7772e": 101, "7748e": 101, "7725e": 101, "7678e": 101, "7654e": 101, "7631e": 101, "130": 101, "7608e": 101, "7585e": 101, "7562e": 101, "7539e": 101, "7516e": 101, "7493e": 101, "7447e": 101, "7425e": 101, "7402e": 101, "738e": 101, "7357e": 101, "7335e": 101, "7312e": 101, "729e": 101, "7268e": 101, "04": [101, 111], "7246e": 101, "7224e": 101, "7202e": 101, "718e": 101, "136": 101, "7158e": 101, "7136e": 101, "7114e": 101, "7093e": 101, "7071e": 101, "705e": 101, "138": [101, 111], "7028e": 101, "6985e": 101, "6964e": 101, "6943e": 101, "6922e": 101, "140": [101, 111], "6901e": 101, "688e": 101, "6859e": 101, "6838e": 101, "6817e": 101, "6796e": 101, "142": [101, 111], "6776e": 101, "6755e": 101, "6735e": 101, "143": 101, "6714e": 101, "6694e": 101, "6673e": 101, "6653e": 101, "6633e": 101, "6613e": 101, "6592e": 101, "6572e": 101, "6552e": 101, "6533e": 101, "6513e": 101, "6493e": 101, "6473e": 101, "6454e": 101, "6434e": 101, "148": [101, 107], "6414e": 101, "6395e": 101, "6356e": 101, "6337e": 101, "6318e": 101, "6299e": 101, "626e": 101, "151": [101, 111], "6241e": 101, "6222e": 101, "6204e": 101, "6185e": 101, "6166e": 101, "6147e": 101, "153": [101, 111], "6129e": 101, "611e": 101, "6092e": 101, "6055e": 101, "6019e": 101, "6e": 101, "5982e": 101, "5964e": 101, "5946e": 101, "5928e": 101, "5911e": 101, "5893e": 101, "158": [101, 111], "5875e": 101, "5857e": 101, "159": [101, 111], "584e": 101, "5822e": 101, "5805e": 101, "160": [101, 106], "5787e": 101, "577e": 101, "5753e": 101, "161": [101, 111], "5735e": 101, "5718e": 101, "5701e": 101, "5684e": 101, "5667e": 101, "565e": 101, "5633e": 101, "5616e": 101, "56e": 101, "5583e": 101, "5533e": 101, "5517e": 101, "55e": 101, "5484e": 101, "167": 101, "5468e": 101, "5452e": 101, "168": [101, 111], "5436e": 101, "5419e": 101, "5403e": 101, "169": 101, "5388e": 101, "5372e": 101, "170": 101, "5356e": 101, "534e": 101, "5324e": 101, "5309e": 101, "5293e": 101, "5278e": 101, "172": 101, "5262e": 101, "5247e": 101, "5201e": 101, "5186e": 101, "5171e": 101, "5156e": 101, "5141e": 101, "5126e": 101, "5111e": 101, "5096e": 101, "177": [101, 111], "5081e": 101, "5067e": 101, "5052e": 101, "5038e": 101, "5023e": 101, "5009e": 101, "4994e": 101, "180": [101, 111], "498e": 101, "4966e": 101, "4952e": 101, "181": 101, "4938e": 101, "4924e": 101, "182": [101, 111], "491e": 101, "4896e": 101, "4882e": 101, "4868e": 101, "4854e": 101, "4841e": 101, "4827e": 101, "4813e": 101, "48e": 101, "4787e": 101, "4773e": 101, "476e": 101, "187": 101, "4747e": 101, "4733e": 101, "4707e": 101, "4694e": 101, "4681e": 101, "4669e": 101, "190": [101, 111], "4656e": 101, "4643e": 101, "463e": 101, "4618e": 101, "4605e": 101, "4593e": 101, "458e": 101, "4568e": 101, "4544e": 101, "4531e": 101, "4519e": 101, "4507e": 101, "4495e": 101, "4483e": 101, "4472e": 101, "446e": 101, "4448e": 101, "4436e": 101, "4425e": 101, "199": [101, 111], "4402e": 101, "200": [101, 111], "439e": 101, "4379e": 101, "4368e": 101, "4357e": 101, "4346e": 101, "4335e": 101, "203": 101, "4324e": 101, "4313e": 101, "4302e": 101, "428e": 101, "427e": 101, "4259e": 101, "4248e": 101, "4238e": 101, "207": 101, "4228e": 101, "4217e": 101, "4207e": 101, "4197e": 101, "209": [101, 111], "4187e": 101, "4177e": 101, "210": [101, 111], "4167e": 101, "4147e": 101, "4137e": 101, "212": [101, 111], "4127e": 101, "4118e": 101, "4098e": 101, "4089e": 101, "408e": 101, "215": [101, 111], "407e": 101, "4061e": 101, "4043e": 101, "217": 101, "4034e": 101, "4025e": 101, "4016e": 101, "4007e": 101, "219": 101, "3998e": 101, "3989e": 101, "3981e": 101, "3972e": 101, "3964e": 101, "3955e": 101, "3947e": 101, "3938e": 101, "393e": 101, "3922e": 101, "3906e": 101, "3898e": 101, "389e": 101, "226": [101, 111], "3882e": 101, "3875e": 101, "3867e": 101, "3859e": 101, "3852e": 101, "3844e": 101, "3837e": 101, "230": [101, 111], "3822e": 101, "3815e": 101, "231": [101, 111], "3808e": 101, "232": [101, 111], "3801e": 101, "3794e": 101, "233": [101, 111], "3787e": 101, "378e": 101, "234": 101, "3774e": 101, "3767e": 101, "376e": 101, "3754e": 101, "3747e": 101, "3741e": 101, "237": [101, 111], "3735e": 101, "3729e": 101, "3722e": 101, "3716e": 101, "371e": 101, "240": [101, 111], "3704e": 101, "3693e": 101, "3687e": 101, "242": [101, 111], "3681e": 101, "244": [101, 111], "3665e": 101, "366e": 101, "3654e": 101, "3649e": 101, "3644e": 101, "3639e": 101, "3629e": 101, "3624e": 101, "362e": 101, "3615e": 101, "3611e": 101, "3606e": 101, "251": [101, 111], "252": [101, 111], "3597e": 101, "3593e": 101, "253": 101, "3589e": 101, "3581e": 101, "3577e": 101, "3573e": 101, "3569e": 101, "3565e": 101, "3562e": 101, "3558e": 101, "3555e": 101, "259": 101, "3548e": 101, "260": 101, "3545e": 101, "3542e": 101, "3536e": 101, "3533e": 101, "353e": 101, "3527e": 101, "3525e": 101, "265": 101, "3522e": 101, "352e": 101, "3517e": 101, "267": [101, 111], "3515e": 101, "3513e": 101, "268": [101, 111], "351e": 101, "3508e": 101, "270": [101, 111], "3504e": 101, "3503e": 101, "271": [101, 111], "3501e": 101, "3499e": 101, "3498e": 101, "273": [101, 111], "3496e": 101, "3495e": 101, "3493e": 101, "3491e": 101, "349e": 101, "3489e": 101, "3488e": 101, "3486e": 101, "3485e": 101, "3484e": 101, "286": 101, "287": 101, "290": 101, "292": 101, "3494e": 101, "3497e": 101, "35e": 101, "3502e": 101, "299": 101, "300": [101, 113], "301": 101, "3512e": 101, "3528e": 101, "3531e": 101, "3534e": 101, "307": [101, 111], "3537e": 101, "354e": 101, "3543e": 101, "309": [101, 111], "3547e": 101, "310": [101, 111], "355e": 101, "3554e": 101, "311": [101, 111], "3557e": 101, "312": [101, 111], "3561e": 101, "313": [101, 111], "314": [101, 111], "3586e": 101, "317": 101, "359e": 101, "3595e": 101, "36e": 101, "3604e": 101, "320": 101, "3609e": 101, "321": [101, 111], "3614e": 101, "3619e": 101, "363e": 101, "3635e": 101, "3641e": 101, "325": 101, "3646e": 101, "3652e": 101, "3658e": 101, "3663e": 101, "3669e": 101, "330": 101, "3682e": 101, "3688e": 101, "3694e": 101, "3708e": 101, "3714e": 101, "3721e": 101, "335": [101, 111], "3728e": 101, "3742e": 101, "3749e": 101, "338": [101, 111], "3764e": 101, "340": [101, 111], "341": 101, "342": 101, "3795e": 101, "3803e": 101, "3811e": 101, "382e": 101, "3828e": 101, "346": [101, 111], "3836e": 101, "3845e": 101, "348": [101, 111], "3854e": 101, "3862e": 101, "349": [101, 111], "3871e": 101, "350": [101, 111], "388e": 101, "3889e": 101, "3899e": 101, "3908e": 101, "3917e": 101, "354": [101, 111], "3927e": 101, "3937e": 101, "356": 101, "3946e": 101, "357": [101, 111], "3966e": 101, "358": 101, "3976e": 101, "3987e": 101, "360": [101, 111], "3997e": 101, "4018e": 101, "4029e": 101, "4039e": 101, "405e": 101, "4073e": 101, "4095e": 101, "4107e": 101, "370": [101, 111], "413e": 101, "371": [101, 111], "4154e": 101, "4166e": 101, "373": [101, 111], "4191e": 101, "375": 101, "4203e": 101, "4216e": 101, "378": [101, 111], "4241e": 101, "4254e": 101, "4267e": 101, "380": 101, "381": [101, 111], "4294e": 101, "382": [101, 111], "4307e": 101, "383": [101, 111], "4321e": 101, "4334e": 101, "4362e": 101, "4376e": 101, "387": 101, "4419e": 101, "390": 101, "4434e": 101, "393": [101, 111], "4478e": 101, "4493e": 101, "395": 101, "4508e": 101, "4524e": 101, "396": 101, "4555e": 101, "398": 101, "457e": 101, "4586e": 101, "400": 101, "4602e": 101, "402": [101, 111], "4635e": 101, "403": [101, 111], "4667e": 101, "4684e": 101, "406": [101, 111], "4701e": 101, "4718e": 101, "4735e": 101, "408": 101, "4769e": 101, "410": [101, 111], "4786e": 101, "4804e": 101, "412": [101, 111], "4822e": 101, "4839e": 101, "4857e": 101, "415": 101, "417": [101, 111], "4912e": 101, "418": [101, 111], "493e": 101, "4949e": 101, "420": 101, "4968e": 101, "4987e": 101, "5006e": 101, "5025e": 101, "5044e": 101, "5063e": 101, "5083e": 101, "428": 101, "5123e": 101, "5143e": 101, "430": 101, "5163e": 101, "5183e": 101, "432": [101, 111], "433": [101, 111], "5224e": 101, "5245e": 101, "435": [101, 103], "5265e": 101, "5286e": 101, "5307e": 101, "439": [101, 111], "535e": 101, "440": 101, "5415e": 101, "443": [101, 111], "5437e": 101, "444": 101, "5459e": 101, "445": [101, 111], "5481e": 101, "5504e": 101, "447": 101, "5526e": 101, "5549e": 101, "5572e": 101, "450": [101, 111], "5595e": 101, "5618e": 101, "5641e": 101, "5665e": 101, "5688e": 101, "5712e": 101, "456": 101, "5736e": 101, "576e": 101, "5784e": 101, "5809e": 101, "460": 101, "5833e": 101, "5858e": 101, "463": [101, 111], "5907e": 101, "5933e": 101, "466": [101, 111], "5958e": 101, "5983e": 101, "468": [101, 111], "6009e": 101, "469": [101, 111], "470": 101, "6061e": 101, "6087e": 101, "472": [101, 111], "6113e": 101, "6139e": 101, "476": 101, "6193e": 101, "478": [101, 111], "6247e": 101, "6274e": 101, "6302e": 101, "481": 101, "633e": 101, "482": 101, "6358e": 101, "6386e": 101, "6415e": 101, "486": 101, "6445e": 101, "6475e": 101, "6506e": 101, "490": [101, 111], "6574e": 101, "491": [101, 111], "6615e": 101, "6668e": 101, "6763e": 101, "7073e": 101, "496": [101, 111], "6937e": 101, "773e": 101, "6946e": 101, "6862e": 101, "6856e": 101, "6871e": 101, "6893e": 101, "504": 101, "6919e": 101, "6975e": 101, "7035e": 101, "510": [101, 111], "7066e": 101, "511": 101, "7097e": 101, "7128e": 101, "7159e": 101, "514": 101, "7191e": 101, "7223e": 101, "517": [101, 111], "7255e": 101, "7288e": 101, "519": 101, "732e": 101, "520": 101, "521": 101, "7419e": 101, "7452e": 101, "7486e": 101, "526": 101, "7519e": 101, "7553e": 101, "7587e": 101, "530": [101, 111], "7622e": 101, "531": 101, "7656e": 101, "532": 101, "7691e": 101, "776e": 101, "536": 101, "7795e": 101, "7866e": 101, "540": 101, "7902e": 101, "7974e": 101, "544": 101, "801e": 101, "8046e": 101, "547": 101, "8119e": 101, "549": 101, "550": 101, "8193e": 101, "823e": 101, "554": 101, "8305e": 101, "8343e": 101, "8381e": 101, "8458e": 101, "560": 101, "8535e": 101, "8574e": 101, "8613e": 101, "8652e": 101, "8691e": 101, "568": [101, 111], "8731e": 101, "569": [101, 111], "8771e": 101, "8811e": 101, "8851e": 101, "8891e": 101, "574": 101, "8932e": 101, "8972e": 101, "577": [101, 111], "9013e": 101, "578": [101, 111], "9054e": 101, "580": [101, 111], "9096e": 101, "9137e": 101, "9179e": 101, "9263e": 101, "9305e": 101, "588": [101, 111], "9347e": 101, "939e": 101, "9433e": 101, "9476e": 101, "9519e": 101, "9562e": 101, "9606e": 101, "597": [101, 111], "9649e": 101, "599": [101, 111], "9693e": 101, "600": [101, 111], "9737e": 101, "9782e": 101, "603": 101, "9826e": 101, "9871e": 101, "9916e": 101, "9961e": 101, "609": 101, "0006e": 101, "610": 101, "0052e": 101, "0097e": 101, "613": [101, 111], "0143e": 101, "0189e": 101, "0236e": 101, "0329e": 101, "620": [101, 111], "0376e": 101, "0423e": 101, "623": 101, "047e": 101, "0517e": 101, "0565e": 101, "627": 101, "0613e": 101, "629": [101, 111], "0661e": 101, "630": [101, 111], "0709e": 101, "0758e": 101, "0855e": 101, "0904e": 101, "637": 101, "1003e": 101, "640": [101, 111], "1053e": 101, "642": [101, 111], "1153e": 101, "645": [101, 111], "1203e": 101, "646": [101, 111], "648": [101, 111], "1304e": 101, "1355e": 101, "651": [101, 111], "1406e": 101, "654": [101, 111], "1509e": 101, "1561e": 101, "1613e": 101, "1665e": 101, "660": 101, "661": 101, "177e": 101, "1823e": 101, "1876e": 101, "1929e": 101, "1982e": 101, "669": [101, 111], "2036e": 101, "670": [101, 111], "209e": 101, "2144e": 101, "2198e": 101, "2253e": 101, "2362e": 101, "680": [101, 111], "2417e": 101, "2473e": 101, "2528e": 101, "2584e": 101, "264e": 101, "688": 101, "2696e": 101, "2753e": 101, "691": [101, 111], "2809e": 101, "2866e": 101, "696": 101, "2981e": 101, "3038e": 101, "3096e": 101, "700": [101, 111], "3154e": 101, "702": [101, 111], "3212e": 101, "704": [101, 111], "3271e": 101, "3329e": 101, "3388e": 101, "3447e": 101, "710": 101, "3566e": 101, "3626e": 101, "715": [101, 111], "3686e": 101, "3746e": 101, "718": 101, "720": [101, 111], "722": [101, 111], "3928e": 101, "725": 101, "4112e": 101, "728": 101, "4173e": 101, "730": 101, "4298e": 101, "733": [101, 111], "436e": 101, "4423e": 101, "737": [101, 111], "4486e": 101, "4549e": 101, "740": 101, "4676e": 101, "474e": 101, "751": [101, 111], "4998e": 101, "754": [101, 111], "5128e": 101, "756": [101, 111], "5193e": 101, "5259e": 101, "759": 101, "5325e": 101, "5391e": 101, "763": 101, "5458e": 101, "5524e": 101, "766": [101, 111], "768": [101, 111], "5726e": 101, "5793e": 101, "5861e": 101, "775": [101, 111], "5929e": 101, "5997e": 101, "6066e": 101, "6135e": 101, "782": [101, 111], "6343e": 101, "788": 101, "6413e": 101, "790": [101, 111], "6483e": 101, "6553e": 101, "6623e": 101, "6765e": 101, "6836e": 101, "6908e": 101, "802": 101, "698e": 101, "804": [101, 111], "7052e": 101, "7196e": 101, "810": [101, 111], "812": [101, 111], "7342e": 101, "7415e": 101, "7489e": 101, "7636e": 101, "7711e": 101, "7785e": 101, "825": 101, "827": 101, "7935e": 101, "829": 101, "8161e": 101, "8237e": 101, "8314e": 101, "839e": 101, "840": 101, "8467e": 101, "842": 101, "8621e": 101, "846": 101, "8699e": 101, "8776e": 101, "850": 101, "8855e": 101, "8933e": 101, "9011e": 101, "909e": 101, "9169e": 101, "860": [101, 111], "9249e": 101, "862": [101, 111], "9328e": 101, "9408e": 101, "9488e": 101, "9569e": 101, "870": [101, 111], "872": [101, 111], "973e": 101, "874": 101, "9812e": 101, "9893e": 101, "9975e": 101, "880": [101, 111], "0139e": 101, "884": [101, 111], "0221e": 101, "0304e": 101, "0387e": 101, "890": 101, "0471e": 101, "892": 101, "0554e": 101, "894": [101, 111], "0638e": 101, "0722e": 101, "0807e": 101, "900": [101, 111, 115], "0891e": 101, "0976e": 101, "905": [101, 111], "1061e": 101, "907": [101, 111], "1147e": 101, "909": 101, "1233e": 101, "911": [101, 111], "1319e": 101, "1578e": 101, "924": 101, "1841e": 101, "926": [101, 111], "2017e": 101, "930": [101, 111], "2105e": 101, "2283e": 101, "936": 101, "2372e": 101, "939": 101, "2462e": 101, "941": [101, 111], "2552e": 101, "2642e": 101, "2733e": 101, "2823e": 101, "950": [101, 111], "2914e": 101, "3006e": 101, "3097e": 101, "956": 101, "3189e": 101, "3281e": 101, "961": 101, "3374e": 101, "963": [101, 111], "3467e": 101, "965": [101, 111], "356e": 101, "3653e": 101, "3841e": 101, "3935e": 101, "976": [101, 111], "4124e": 101, "4219e": 101, "4315e": 101, "985": 101, "4411e": 101, "987": [101, 111], "990": [101, 111], "5229e": 101, "997": [101, 111], "4991e": 101, "1001": 101, "5088e": 101, "1004": 101, "1006": 101, "5284e": 101, "1008": 101, "5382e": 101, "1011": 101, "1013": 101, "558e": 101, "1015": 101, "568e": 101, "1018": 101, "5779e": 101, "1020": 101, "5879e": 101, "1022": 101, "598e": 101, "1025": 101, "608e": 101, "1027": 101, "1029": 101, "6283e": 101, "1032": 101, "6384e": 101, "1034": 101, "6486e": 101, "1036": 101, "6588e": 101, "1039": 101, "6691e": 101, "1041": 101, "6793e": 101, "1044": 101, "6896e": 101, "1046": 101, "7e": 101, "1048": 101, "7103e": 101, "1051": 101, "7207e": 101, "1053": 101, "1056": 101, "7416e": 101, "1058": 101, "7521e": 101, "1061": 101, "7626e": 101, "1063": 101, "7732e": 101, "1066": 101, "7838e": 101, "1068": 101, "1070": 101, "805e": 101, "1073": 101, "8157e": 101, "1075": 101, "8264e": 101, "1078": 101, "8372e": 101, "1080": 101, "8479e": 101, "1083": 101, "1085": 101, "8696e": 101, "1088": 101, "8805e": 101, "1090": 101, "8913e": 101, "1093": 101, "9023e": 101, "1095": 101, "9132e": 101, "1098": 101, "1100": 101, "9353e": 101, "1103": 101, "9463e": 101, "1106": 101, "9574e": 101, "1108": 101, "9685e": 101, "1111": 101, "9797e": 101, "1113": 101, "9909e": 101, "1116": 101, "0021e": 101, "1118": 101, "0133e": 101, "1121": 101, "0246e": 101, "1124": 101, "0359e": 101, "1126": 101, "0473e": 101, "1129": 101, "0586e": 101, "1131": 101, "0701e": 101, "1134": 101, "0815e": 101, "1137": 101, "093e": 101, "1139": 101, "1045e": 101, "1142": 101, "116e": 101, "1144": 101, "1276e": 101, "1147": 101, "1392e": 101, "1150": 101, "1152": 101, "1625e": 101, "1155": 101, "1742e": 101, "1158": 101, "186e": 101, "1160": 101, "1978e": 101, "1163": 101, "2096e": 101, "1166": 101, "2214e": 101, "1168": 101, "2333e": 101, "1171": 101, "2452e": 101, "1174": 101, "2571e": 101, "1177": 101, "2691e": 101, "1179": 101, "1182": 101, "2932e": 101, "1185": 101, "1187": 101, "3173e": 101, "1190": 101, "3295e": 101, "1193": 101, "3417e": 101, "1196": 101, "1198": 101, "3661e": 101, "1201": 101, "3784e": 101, "1204": 101, "3907e": 101, "1207": 101, "4031e": 101, "1209": 101, "4155e": 101, "1212": 101, "4279e": 101, "1215": 101, "4403e": 101, "1218": 101, "4528e": 101, "1221": 101, "4653e": 101, "1224": 101, "1226": 101, "4905e": 101, "1229": 101, "5031e": 101, "1232": 101, "5158e": 101, "5285e": 101, "1238": 101, "5412e": 101, "1241": 101, "554e": 101, "1243": 101, "5668e": 101, "1246": 101, "5796e": 101, "1249": 101, "5925e": 101, "1252": 101, "6054e": 101, "1255": 101, "6184e": 101, "1258": 101, "6313e": 101, "1261": 101, "6444e": 101, "1264": 101, "1267": 101, "6705e": 101, "1269": 101, "1272": 101, "6968e": 101, "1275": 101, "71e": 101, "1278": 101, "7232e": 101, "1281": 101, "7365e": 101, "1287": 101, "1290": 101, "7765e": 101, "1293": 101, "7899e": 101, "1296": 101, "8034e": 101, "1299": 101, "8168e": 101, "1302": 101, "8304e": 101, "1305": 101, "8439e": 101, "1308": 101, "8575e": 101, "1311": 101, "8712e": 101, "1314": 101, "8848e": 101, "1317": 101, "8985e": 101, "1320": 101, "9123e": 101, "1323": 101, "9261e": 101, "1326": 101, "9399e": 101, "1329": 101, "9537e": 101, "1332": 101, "9676e": 101, "1335": 101, "9816e": 101, "1339": 101, "1342": 101, "0096e": 101, "1345": 101, "1348": 101, "1351": 101, "1354": 101, "1357": 101, "0802e": 101, "1360": 101, "0944e": 101, "1363": 101, "1087e": 101, "1367": 101, "123e": 101, "1370": 101, "1373e": 101, "1373": 101, "1517e": 101, "1661e": 101, "1379": 101, "1806e": 101, "1382": 101, "1951e": 101, "1386": 101, "1389": 101, "2242e": 101, "1392": 101, "2388e": 101, "1395": 101, "1398": 101, "2682e": 101, "1402": 101, "2829e": 101, "1405": 101, "2977e": 101, "1408": 101, "3125e": 101, "1411": 101, "3274e": 101, "1415": 101, "3423e": 101, "1418": 101, "3572e": 101, "1421": 101, "1424": 101, "3872e": 101, "1428": 101, "4022e": 101, "1431": 101, "1434": 101, "4325e": 101, "1438": 101, "4476e": 101, "1441": 101, "4629e": 101, "1444": 101, "4781e": 101, "1448": 101, "4934e": 101, "1451": 101, "5087e": 101, "1454": 101, "5241e": 101, "1458": 101, "5395e": 101, "1461": 101, "1464": 101, "5705e": 101, "1468": 101, "586e": 101, "1471": 101, "6016e": 101, "1475": 101, "6172e": 101, "6329e": 101, "1481": 101, "1485": 101, "6644e": 101, "1488": 101, "6837e": 101, "1492": 101, "6961e": 101, "1495": 101, "7118e": 101, "1499": 101, "7277e": 101, "1502": 101, "7436e": 101, "1505": 101, "7596e": 101, "1509": 101, "1512": 101, "7917e": 101, "1516": 101, "8078e": 101, "1519": 101, "824e": 101, "1523": 101, "8402e": 101, "1526": 101, "8564e": 101, "1530": 101, "8727e": 101, "1533": 101, "889e": 101, "1537": 101, "1541": 101, "9218e": 101, "1544": 101, "1548": 101, "9547e": 101, "1551": 101, "9713e": 101, "1555": 101, "1558": 101, "0045e": 101, "1562": 101, "0211e": 101, "1566": 101, "1569": 101, "0546e": 101, "1573": 101, "0714e": 101, "1576": 101, "0882e": 101, "1580": 101, "1051e": 101, "1584": 101, "122e": 101, "1587": 101, "1591": 101, "156e": 101, "1595": 101, "1731e": 101, "1598": 101, "1602": 101, "1606": 101, "2245e": 101, "1609": 101, "2418e": 101, "1613": 101, "259e": 101, "1617": 101, "2763e": 101, "1621": 101, "2937e": 101, "1624": 101, "3111e": 101, "1628": 101, "3286e": 101, "1632": 101, "3461e": 101, "1636": 101, "3636e": 101, "3812e": 101, "1643": 101, "1647": 101, "4165e": 101, "1651": 101, "1655": 101, "1658": 101, "4698e": 101, "1662": 101, "5056e": 101, "1670": 101, "5236e": 101, "1674": 101, "5416e": 101, "1678": 101, "5596e": 101, "1681": 101, "5777e": 101, "1685": 101, "1689": 101, "614e": 101, "1693": 101, "6322e": 101, "1697": 101, "6505e": 101, "1701": 101, "6688e": 101, "1705": 101, "6872e": 101, "1709": 101, "1713": 101, "1717": 101, "7426e": 101, "1721": 101, "7611e": 101, "1725": 101, "7797e": 101, "1729": 101, "7984e": 101, "1733": 101, "8171e": 101, "1737": 101, "8358e": 101, "1741": 101, "8546e": 101, "1745": 101, "8735e": 101, "1749": 101, "8923e": 101, "1753": 101, "9113e": 101, "1757": 101, "9303e": 101, "1761": 101, "9493e": 101, "1765": 101, "9684e": 101, "1769": 101, "9875e": 101, "1773": 101, "0067e": 101, "1777": 101, "0259e": 101, "1781": 101, "1785": 101, "1789": 101, "0838e": 101, "1794": 101, "1033e": 101, "1422e": 101, "1806": 101, "1618e": 101, "1810": 101, "1814e": 101, "1814": 101, "2011e": 101, "1819": 101, "2208e": 101, "1823": 101, "2405e": 101, "1827": 101, "2603e": 101, "1831": 101, "2802e": 101, "1835": 101, "3001e": 101, "1840": 101, "3201e": 101, "1844": 101, "3401e": 101, "1848": 101, "3601e": 101, "1852": 101, "1857": 101, "4004e": 101, "1861": 101, "4206e": 101, "1865": 101, "4409e": 101, "1869": 101, "1874": 101, "4816e": 101, "1878": 101, "502e": 101, "1882": 101, "1887": 101, "5429e": 101, "1891": 101, "5635e": 101, "1896": 101, "5841e": 101, "1900": 101, "6048e": 101, "1904": 101, "6255e": 101, "1909": 101, "6463e": 101, "1913": 101, "6671e": 101, "1917": 101, "1922": 101, "7089e": 101, "1926": 101, "7299e": 101, "1931": 101, "7509e": 101, "1935": 101, "1940": 101, "7931e": 101, "8143e": 101, "8356e": 101, "1953": 101, "8569e": 101, "1958": 101, "8782e": 101, "1962": 101, "8996e": 101, "9211e": 101, "1971": 101, "9426e": 101, "1976": 101, "9641e": 101, "1980": 101, "9857e": 101, "1985": 101, "0011e": 101, "1989": 101, "0029e": 101, "1994": 101, "0051e": 101, "0073e": 101, "2003": 101, "0095e": 101, "2008": 101, "0117e": 101, "2013": 101, "2017": 101, "0183e": 101, "2026": 101, "0205e": 101, "2031": 101, "0227e": 101, "2036": 101, "0249e": 101, "2041": 101, "0272e": 101, "2045": 101, "0294e": 101, "2050": 101, "0316e": 101, "2055": 101, "2059": 101, "2064": 101, "0384e": 101, "2069": 101, "0407e": 101, "2074": 101, "0429e": 101, "2078": 101, "2083": 101, "0475e": 101, "2088": 101, "0498e": 101, "2093": 101, "0521e": 101, "2098": 101, "0544e": 101, "2103": 101, "0567e": 101, "2107": 101, "059e": 101, "2112": 101, "2122": 101, "2127": 101, "0683e": 101, "2132": 101, "0706e": 101, "2137": 101, "2142": 101, "0753e": 101, "2147": 101, "0777e": 101, "2152": 101, "08e": 101, "2157": 101, "0824e": 101, "2162": 101, "2167": 101, "0871e": 101, "2171": 101, "2177": 101, "0919e": 101, "2182": 101, "0943e": 101, "2187": 101, "2192": 101, "0991e": 101, "2197": 101, "1015e": 101, "2202": 101, "104e": 101, "2207": 101, "1064e": 101, "2212": 101, "1088e": 101, "2217": 101, "1113e": 101, "2222": 101, "1137e": 101, "2227": 101, "1161e": 101, "1186e": 101, "2238": 101, "1211e": 101, "2243": 101, "1235e": 101, "2248": 101, "126e": 101, "2253": 101, "2258": 101, "131e": 101, "2263": 101, "2269": 101, "136e": 101, "2274": 101, "1385e": 101, "2279": 101, "141e": 101, "2284": 101, "1435e": 101, "2290": 101, "146e": 101, "2295": 101, "1485e": 101, "2300": 101, "1511e": 101, "2306": 101, "1536e": 101, "2311": 101, "1562e": 101, "2316": 101, "1587e": 101, "2322": 101, "2327": 101, "1638e": 101, "2332": 101, "2338": 101, "169e": 101, "2343": 101, "1716e": 101, "2348": 101, "2354": 101, "1768e": 101, "2359": 101, "1794e": 101, "2365": 101, "182e": 101, "2370": 101, "1846e": 101, "2376": 101, "1872e": 101, "2381": 101, "2387": 101, "1925e": 101, "2392": 101, "2398": 101, "2403": 101, "2409": 101, "2031e": 101, "2414": 101, "2057e": 101, "2420": 101, "2084e": 101, "2425": 101, "2111e": 101, "2431": 101, "2138e": 101, "2437": 101, "2165e": 101, "2442": 101, "2192e": 101, "2219e": 101, "2454": 101, "2459": 101, "2273e": 101, "2465": 101, "23e": 101, "2471": 101, "2328e": 101, "2476": 101, "2384e": 101, "2488": 101, "241e": 101, "2493": 101, "2437e": 101, "2499": 101, "2465e": 101, "2505": 101, "2493e": 101, "2511": 101, "2521e": 101, "2516": 101, "2548e": 101, "2522": 101, "2528": 101, "2604e": 101, "2534": 101, "2540": 101, "2661e": 101, "2546": 101, "2552": 101, "2717e": 101, "2557": 101, "2745e": 101, "2563": 101, "2774e": 101, "2569": 101, "2575": 101, "2831e": 101, "2581": 101, "2859e": 101, "2587": 101, "2888e": 101, "2593": 101, "2917e": 101, "2945e": 101, "2605": 101, "2974e": 101, "2611": 101, "3003e": 101, "2617": 101, "3032e": 101, "2623": 101, "3061e": 101, "2629": 101, "309e": 101, "2635": 101, "2641": 101, "3149e": 101, "2647": 101, "2653": 101, "2660": 101, "3237e": 101, "2666": 101, "3267e": 101, "2672": 101, "3296e": 101, "2678": 101, "3326e": 101, "2684": 101, "3356e": 101, "2690": 101, "3386e": 101, "2697": 101, "3416e": 101, "2703": 101, "3446e": 101, "2709": 101, "3476e": 101, "2715": 101, "2722": 101, "2728": 101, "2734": 101, "2740": 101, "3627e": 101, "2747": 101, "2753": 101, "2759": 101, "2766": 101, "375e": 101, "2772": 101, "3781e": 101, "2779": 101, "2785": 101, "3842e": 101, "2791": 101, "3873e": 101, "2798": 101, "3904e": 101, "2804": 101, "2811": 101, "3967e": 101, "2817": 101, "2824": 101, "403e": 101, "2830": 101, "2837": 101, "4093e": 101, "2843": 101, "2850": 101, "4156e": 101, "2856": 101, "4188e": 101, "2863": 101, "422e": 101, "2870": 101, "4251e": 101, "2876": 101, "4283e": 101, "2883": 101, "4316e": 101, "2890": 101, "2896": 101, "438e": 101, "2903": 101, "4412e": 101, "2910": 101, "4445e": 101, "2916": 101, "4477e": 101, "2923": 101, "451e": 101, "2930": 101, "4542e": 101, "2936": 101, "4575e": 101, "2943": 101, "4608e": 101, "2950": 101, "4641e": 101, "2957": 101, "4673e": 101, "4706e": 101, "2970": 101, "2977": 101, "2984": 101, "4806e": 101, "2991": 101, "2998": 101, "3005": 101, "4906e": 101, "3012": 101, "494e": 101, "3019": 101, "4973e": 101, "3026": 101, "5007e": 101, "3033": 101, "5041e": 101, "3040": 101, "5075e": 101, "3047": 101, "5109e": 101, "3054": 101, "3061": 101, "5177e": 101, "3068": 101, "5211e": 101, "3075": 101, "3082": 101, "3089": 101, "5314e": 101, "5349e": 101, "3103": 101, "5383e": 101, "3111": 101, "5418e": 101, "3125": 101, "5488e": 101, "3132": 101, "5523e": 101, "3139": 101, "5558e": 101, "3147": 101, "5593e": 101, "3154": 101, "3161": 101, "5663e": 101, "3168": 101, "5699e": 101, "3176": 101, "5734e": 101, "3183": 101, "3190": 101, "3198": 101, "3205": 101, "5877e": 101, "3213": 101, "5913e": 101, "3220": 101, "5949e": 101, "3227": 101, "5985e": 101, "3235": 101, "6021e": 101, "6057e": 101, "3250": 101, "6093e": 101, "3257": 101, "3265": 101, "3272": 101, "6203e": 101, "3280": 101, "6239e": 101, "6276e": 101, "3295": 101, "3303": 101, "635e": 101, "3310": 101, "6387e": 101, "3318": 101, "6424e": 101, "3325": 101, "3333": 101, "6498e": 101, "3341": 101, "6536e": 101, "3349": 101, "6573e": 101, "3356": 101, "6611e": 101, "3364": 101, "6648e": 101, "3372": 101, "6686e": 101, "3380": 101, "6724e": 101, "3387": 101, "6762e": 101, "3395": 101, "6799e": 101, "3403": 101, "3411": 101, "6876e": 101, "3419": 101, "6914e": 101, "3427": 101, "6952e": 101, "3434": 101, "6991e": 101, "3442": 101, "7029e": 101, "3450": 101, "3458": 101, "7106e": 101, "3466": 101, "7145e": 101, "3474": 101, "7225e": 101, "3482": 101, "3490": 101, "7262e": 101, "3498": 101, "7301e": 101, "3506": 101, "7341e": 101, "3514": 101, "3523": 101, "3531": 101, "3539": 101, "7499e": 101, "3547": 101, "7538e": 101, "3555": 101, "7578e": 101, "3563": 101, "7618e": 101, "3572": 101, "7658e": 101, "3580": 101, "7698e": 101, "3588": 101, "7738e": 101, "3596": 101, "7778e": 101, "3605": 101, "3613": 101, "7859e": 101, "3621": 101, "79e": 101, "3630": 101, "7941e": 101, "3638": 101, "7981e": 101, "3646": 101, "8022e": 101, "3655": 101, "8063e": 101, "3663": 101, "8104e": 101, "3672": 101, "8145e": 101, "3680": 101, "8187e": 101, "3689": 101, "8228e": 101, "3697": 101, "8269e": 101, "3706": 101, "8311e": 101, "3714": 101, "8353e": 101, "3723": 101, "8394e": 101, "3731": 101, "8436e": 101, "3740": 101, "8478e": 101, "3749": 101, "852e": 101, "3757": 101, "8562e": 101, "3766": 101, "3775": 101, "8647e": 101, "3783": 101, "8689e": 101, "3792": 101, "8732e": 101, "3801": 101, "8774e": 101, "3810": 101, "8817e": 101, "3818": 101, "886e": 101, "8903e": 101, "3836": 101, "8946e": 101, "3845": 101, "8989e": 101, "9032e": 101, "3863": 101, "9076e": 101, "3872": 101, "9119e": 101, "3880": 101, "9163e": 101, "3889": 101, "9206e": 101, "3898": 101, "925e": 101, "3907": 101, "9294e": 101, "3916": 101, "9338e": 101, "3925": 101, "3934": 101, "3944": 101, "3953": 101, "9515e": 101, "3962": 101, "9559e": 101, "3971": 101, "9604e": 101, "3980": 101, "9648e": 101, "3989": 101, "3998": 101, "9738e": 101, "4008": 101, "9783e": 101, "4017": 101, "9828e": 101, "4026": 101, "9873e": 101, "4035": 101, "4045": 101, "9964e": 101, "4054": 101, "001e": 101, "4063": 101, "0055e": 101, "0101e": 101, "4082": 101, "0147e": 101, "4092": 101, "0193e": 101, "4101": 101, "0239e": 101, "4110": 101, "0285e": 101, "4120": 101, "0332e": 101, "4129": 101, "4139": 101, "0424e": 101, "4149": 101, "4158": 101, "4168": 101, "4177": 101, "0612e": 101, "4187": 101, "4197": 101, "4206": 101, "4216": 101, "0801e": 101, "4226": 101, "4235": 101, "0896e": 101, "4245": 101, "4255": 101, "4265": 101, "1039e": 101, "4275": 101, "4285": 101, "1136e": 101, "4294": 101, "4304": 101, "1232e": 101, "4314": 101, "1281e": 101, "4324": 101, "4334": 101, "1378e": 101, "4344": 101, "1427e": 101, "4354": 101, "1476e": 101, "4364": 101, "1525e": 101, "4374": 101, "4384": 101, "1624e": 101, "4394": 101, "1673e": 101, "4405": 101, "1723e": 101, "4415": 101, "1772e": 101, "4425": 101, "4435": 101, "4445": 101, "1922e": 101, "4456": 101, "1972e": 101, "4466": 101, "2023e": 101, "4476": 101, "4487": 101, "2124e": 101, "4497": 101, "4507": 101, "2225e": 101, "4518": 101, "4528": 101, "2327e": 101, "4539": 101, "2378e": 101, "4549": 101, "2429e": 101, "4559": 101, "248e": 101, "4570": 101, "2532e": 101, "4581": 101, "4591": 101, "2635e": 101, "4602": 101, "2687e": 101, "4612": 101, "2739e": 101, "4623": 101, "2791e": 101, "4634": 101, "2843e": 101, "4644": 101, "2896e": 101, "4655": 101, "2948e": 101, "4666": 101, "4676": 101, "3053e": 101, "4687": 101, "3106e": 101, "4698": 101, "3159e": 101, "4709": 101, "4720": 101, "4731": 101, "3319e": 101, "4742": 101, "3372e": 101, "4752": 101, "4763": 101, "4774": 101, "4785": 101, "3587e": 101, "4796": 101, "4808": 101, "3695e": 101, "4819": 101, "4830": 101, "3804e": 101, "4841": 101, "4852": 101, "4863": 101, "3968e": 101, "4874": 101, "4023e": 101, "4886": 101, "4079e": 101, "4897": 101, "4134e": 101, "4908": 101, "4189e": 101, "4920": 101, "4245e": 101, "4931": 101, "43e": 101, "4942": 101, "4356e": 101, "4954": 101, "4965": 101, "4468e": 101, "4977": 101, "4988": 101, "5000": [101, 104, 115], "ge3": 102, "releas": 102, "setup": 102, "symbol": 102, "immedi": 102, "anaconda": 102, "august": 102, "2021": 102, "virtualenv": 102, "cvmf": [102, 116], "mainten": 102, "lscsoft": 102, "usr": 102, "ldg": 102, "oasi": [102, 116], "opensciencegrid": [102, 116], "sw": [102, 116], "profil": 102, "sh": 102, "igwn": [102, 116], "py38": 102, "wget": 102, "com": 102, "anaconda3": 102, "linux": 102, "x86_64": 102, "bash": 102, "sai": 102, "bashrc": 102, "export": 102, "restart": 102, "debug": [102, 115], "conflict": 102, "delet": 102, "reaslist": 103, "mirror": 103, "specififc": 103, "strong": 103, "60hz": 103, "grid": 103, "50hz": 103, "italian": 103, "violin": 103, "thermal": 103, "excit": 103, "reson": [103, 107], "suspens": 103, "narrowband": 103, "contin": 103, "environment": 103, "whearea": 103, "synchronist": 103, "scenario": 103, "un": 103, "experiment": 103, "signific": 103, "loss": 103, "didn": 103, "aren": 103, "hv": [103, 107], "lv": [103, 107], "6hz": 103, "9hz": 103, "1hz": 103, "powerlin": 103, "500hz": 103, "2024hz": 103, "disclaim": [103, 107], "shouldn": 103, "seaborn": [103, 113], "sn": [103, 113], "my_palett": [103, 113], "color_palett": [103, 113], "colorblind": [103, 113], "calibration_lin": 103, "det": 103, "pure": 103, "noise_power_lines_60": 103, "ceil": 103, "noise_power_lines_50": 103, "noise_calibration_lines_h1": 103, "noise_calibration_lines_l1": 103, "noise_calibration_lines_v1": 103, "noise_pulsar_inject": 103, "toy_example_pulsar": 103, "1238112018": 103, "1269363618": 103, "noise_lines_hl": 103, "noise_lines_hv": 103, "noise_lines_lv": 103, "toy_example_hl_notchlist": 103, "toy_example_hv_notchlist": 103, "toy_example_lv_notchlist": 103, "focu": 103, "earlier": [103, 111, 115], "demonstr": [103, 113], "hl_notch_list": 103, "aligo": 103, "v5": 103, "frequencies_tmp": 103, "data_tmp": 103, "loadtxt": [103, 107], "aligodesign": 103, "usecol": [103, 107], "perfrom": 103, "region": [103, 111], "20hz": 103, "1012hz": 103, "strongli": 103, "advis": 103, "might": [103, 106], "exact": 103, "1012": 103, "hl_notch_mask": 103, "data_notch": 103, "l": [103, 111, 113], "dash": 103, "set_xscal": 103, "set_yscal": 103, "set_xlim": 103, "set_ylim": 103, "xtick": [103, 113], "ytick": [103, 113], "tight_layout": 103, "frequeni": 103, "notch_mask_toy_example_hl": 103, "split": [104, 114], "shorter": 104, "latter": [104, 113], "condor": [104, 106, 115], "dag": [104, 115], "visual": [104, 106, 112, 114], "subfil": 104, "submiss": [104, 115], "jobfil": 104, "dqsegdb": 104, "parentdir": 104, "dag_nam": 104, "pickle_out": [104, 106], "wipe_ifo": [104, 106], "calc_pt_est": [104, 106], "word": 104, "concreten": 104, "12000": 104, "4000": 104, "9000": 104, "3000": 104, "plai": [104, 109, 110], "colum": 104, "inspir": 104, "full_path_to_subfil": 104, "full_path_to_jobfil": 104, "parent_dir": 104, "full_path_to_parent_dir": 104, "full_path_to_param_fil": 104, "submit": [104, 115], "navig": 104, "condor_submit_dag": [104, 115], "statu": 104, "condor_q": 104, "finish": 104, "refrain": [104, 107, 112, 115], "data_path": 104, "combine_coher": [104, 115], "coherence_path": 104, "out_path": 104, "dataset": [104, 111], "my_pygwb_output_fold": 104, "my_spectral_index": 104, "my_fref": 104, "my_parameter_file_path": 104, "my_combine_fold": 104, "point_estimate_sigma_spectra_alpha_0": [104, 112], "0_fref_25_t0": [104, 112], "notat": [104, 112], "point_estimates_seg_uw": 104, "sigmas_seg_uw": 104, "npzfile": [104, 106], "lastli": 104, "_uw": 104, "delta_sigma_cut_t0": [104, 112], "naive_sigma_valu": [104, 106], "slide_sigma_valu": [104, 106], "delta_sigma_valu": [104, 106], "delta_sigma_tim": [104, 106], "ifo_1_g": [104, 106], "ifo_2_g": [104, 106], "ifo_1_gate_pad": [104, 106], "ifo_2_gate_pad": [104, 106], "delta_sigma_alpha": [104, 106], "ifo_": [104, 106], "_gate": [104, 106], "onterferomet": 104, "_gate_pad": [104, 106], "bayesian": [105, 114], "constraint": 105, "basic": [105, 113], "advanc": 105, "customiz": 105, "paramat": 105, "input_fil": 105, "model_prior_fil": 105, "non_prior_arg": 105, "injection_paramet": 105, "quantil": 105, "exit": [105, 115], "loguniform": [105, 107, 116], "pe_output": 105, "corner": 105, "path_to_pygwb_output_fil": 105, "powerlawmodel": [105, 107], "brokenpowerlawmodel": [105, 107], "triplebrokenpowerlawmodel": 105, "smoothbrokenpowerlawmodel": 105, "schumannmodel": [105, 107], "pvpowerlawmodel": 105, "pvpowerlawmodel2": 105, "priordict": [105, 116], "mu": 105, "latex_label": 105, "to_json": [105, 116], "path_to_where_you_want_to_save_json": 105, "path_to_fil": 105, "path_to_json_fil": 105, "chosenn_model": 105, "output_dir": 105, "posterior": [105, 107], "png": [105, 112], "summar": 105, "from_json": 105, "my_fil": 105, "assembl": [106, 114], "address": [106, 114], "calc_coh": 106, "calib": 106, "zeropad_csd": 106, "success": 106, "ran": 106, "496991e": 106, "688128e": 106, "path_to_param_fil": 106, "overwrit": 106, "val1": 106, "val2": 106, "simulated_strain": 106, "translat": 106, "parameters_": 106, "length_of": 106, "job": [106, 114, 115], "_final": 106, "psds_csds_": 106, "start_time_of_job": 106, "job_dur": 106, "avg_freq": 106, "avg_csd": 106, "csd_time": 106, "avg_csd_tim": 106, "psd_time": 106, "avg_psd_tim": 106, "psd_1_coh": 106, "psd_2_coh": 106, "csd_coh": 106, "n_segs_coh": 106, "densit": 106, "insert_spectral_dens": 106, "_time": 106, "avalu": 106, "point_estimate_sigma_": 106, "nalog": 106, "qualiti": [106, 112], "lot": 106, "quit": 106, "parallel": 106, "aspect": 107, "pygwb_p": 107, "explain": [107, 112], "offer": [107, 112, 114], "io": 107, "loadmat": 107, "lvk": 107, "y_hl": 107, "sigma_hl": 107, "c_o3_hl": 107, "y_hv": 107, "sigma_hv": 107, "c_o3_hv": 107, "y_lv": 107, "sigma_lv": 107, "c_o3_lv": 107, "ourselv": 107, "infin": 107, "remedi": 107, "inf_arrai": 107, "isinf": 107, "not_inf_arrai": 107, "h1v1": 107, "l1v1": [107, 113], "neither": 107, "nor": [107, 110], "pose": 107, "sole": 107, "remind": [107, 115], "2_": 107, "recoveri": 107, "rememb": 107, "priors_pl": 107, "hlv_pl": 107, "run_sampl": 107, "npoint": 107, "walk": 107, "npool": 107, "resum": 107, "plot_corn": 107, "carri": 107, "priors_bpl": 107, "beyond": 107, "appar": 107, "tvspowerlawmodel": 107, "priors_pl_sv": 107, "omega_ref_scalar": 107, "alpha_scalar": 107, "omega_ref_vector": 107, "alpha_vector": 107, "alpha_v": 107, "hlv_pl_sv": 107, "jointli": 107, "why": 107, "simultaneoulsi": 107, "gravitaion": 107, "magnetomet": 107, "mag_data": 107, "git_repo": 107, "magnetic_data_product_for_p": 107, "mat": 107, "m_hl": 107, "ptest_mag": 107, "m_hv": 107, "m_lv": 107, "measur": 107, "nan": 107, "mag": 107, "nan_arrai": 107, "isnan": 107, "not_nan_arrai": 107, "m_f": 107, "gw_schu": 107, "schu": 107, "kappa_h": 107, "kappa_l": 107, "kappa_v": 107, "beta_h": 107, "beta_l": 107, "beta_v": 107, "hlv_gw_schu": 107, "joint": 107, "fo": 107, "pygwb_stat": [108, 115], "evolv": 108, "accumul": 108, "toward": 108, "disappear": 108, "certainti": 108, "areal": 108, "noisi": 108, "much": 108, "irregular": 108, "pick": 108, "investig": 108, "principl": 108, "abnorm": 108, "assumpt": 108, "fluctuat": 108, "plot_gates_in_tim": 108, "0x7fcae8079d60": 109, "drawn": [109, 110], "wills": 109, "erv": 109, "indent": [109, 110], "bilbyjsonencod": [109, 110], "58it": 109, "62it": 109, "635": [109, 111], "anymor": 110, "livingstn": 110, "simulator_sign": 111, "data_sign": 111, "nice": 111, "psd_signal": 111, "r": [111, 113], "proce": 111, "simulator_signal_and_nois": 111, "data_signal_and_nois": 111, "092": 111, "psd_signal_and_nois": 111, "0x7f727ebbe730": 111, "visibl": 111, "data_h1": 111, "0x7f72886a2ac0": 111, "log10": 111, "ntest": 111, "psd_array_h1": 111, "simulator_1": 111, "data_l1": 111, "861": 111, "050": 111, "685": 111, "557": 111, "040": 111, "516": 111, "659": 111, "091": 111, "798": 111, "010": 111, "570": 111, "608": 111, "051": 111, "959": 111, "970": 111, "851": 111, "076": 111, "088": 111, "785": 111, "893": 111, "962": 111, "029": 111, "780": 111, "721": 111, "865": 111, "647": 111, "047": 111, "809": 111, "632": 111, "885": 111, "061": 111, "072": 111, "902": 111, "769": 111, "910": 111, "753": 111, "980": 111, "783": 111, "475": 111, "873": 111, "083": 111, "freqs_1": 111, "mask_1": 111, "psd_averag": 111, "psd_array_l1": 111, "spectral_arrai": 111, "intercept_arrai": 111, "mask1": 111, "popt": 111, "pcov": 111, "curve_fit": 111, "spectral_avg": 111, "intercept_avg": 111, "report": 111, "somewhat": 111, "omegaref_avg": 111, "311242553049733": 111, "290843104709632e": 111, "9467477264400146": 111, "816862094192637": 111, "mask_2": 111, "mask_3": 111, "mask_4": 111, "rcparam": 111, "magenta": 111, "090": 111, "897": 111, "803": 111, "590": 111, "971": 111, "796": 111, "080": 111, "063": 111, "703": 111, "045": 111, "013": 111, "024": 111, "989": 111, "857": 111, "695": 111, "509": 111, "881": 111, "011": 111, "711": 111, "960": 111, "653": 111, "054": 111, "824": 111, "792": 111, "3422843687995503": 111, "030512956769551e": 111, "383615805695005": 111, "6102591353910112": 111, "less": 111, "statistical_check": 112, "pd": 112, "pf": 112, "font_siz": 112, "fcoh": 112, "automat": [112, 115], "trigger": 112, "co": [112, 113], "snippet": 112, "pygwb_combin": [112, 114, 115], "my_combine_file_path": 112, "my_dsc_file_path": 112, "my_plotting_directori": 112, "my_param_file_path": 112, "atuomat": 112, "content_of_plot": 112, "insight": 112, "topic": 112, "encod": 113, "geometr": 113, "deepcopi": 113, "india": 113, "telescop": 113, "tringularinterferomet": 113, "equilater": 113, "triangl": 113, "a1": 113, "2048": 113, "l1a1": 113, "v1k1": 113, "a1et": 113, "et01": 113, "et02": 113, "et00": 113, "lw": 113, "loc": 113, "prop": 113, "coalign": 113, "irrespect": 113, "rotat": 113, "et_rot120": 113, "et_test120": 113, "rot": 113, "comparison": 113, "elif": 113, "lie": 113, "nearli": 113, "methodologi": 114, "asset": 114, "quickstart": 114, "manual": 114, "pygwb_dag": [114, 115], "group": 114, "diagnost": 115, "scipt": 115, "worklfow": 115, "pygwb_create_isotropic_workflow": 115, "verbos": 115, "program": 115, "basedir": 115, "configfil": 115, "config": 115, "overrid": 115, "config_overrid": 115, "run_loc": 115, "my_config_fil": 115, "accounting_group": 115, "dev": 115, "o4": 115, "plot_segment_result": 115, "max_job_dur": 115, "min_job_dur": 115, "1368921618": 115, "1374883218": 115, "pygwb_html": 115, "cleanli": 115, "science_seg": 115, "dmt": 115, "analysis_readi": 115, "veto_defin": 115, "public_html": 115, "er15_pygwb_run": 115, "old_setup": 115, "hoft_c00_o4_cbc": 115, "xml": 115, "html": 115, "webpag": 115, "introduct": 115, "futhermor": 115, "pygwb_cach": 115, "pygwb_pipe_": 115, "pygwb_dagman": 115, "subdirectori": 115, "combined_result": 115, "segment_list": 115, "66666667": 116, "project": 116, "mdc_5y": 116, "pygwb_run": 116, "pe_gaussian": 116, "docstr": 116, "py39": 116}, "objects": {"pygwb": [[4, 0, 0, "-", "baseline"], [7, 0, 0, "-", "coherence"], [9, 0, 0, "-", "constants"], [10, 0, 0, "-", "delta_sigma_cut"], [13, 0, 0, "-", "detector"], [15, 0, 0, "-", "network"], [17, 0, 0, "-", "notch"], [23, 0, 0, "-", "omega_spectra"], [27, 0, 0, "-", "orfs"], [38, 0, 0, "-", "parameters"], [41, 0, 0, "-", "pe"], [51, 0, 0, "-", "postprocessing"], [57, 0, 0, "-", "preprocessing"], [67, 0, 0, "-", "simulator"], [69, 0, 0, "-", "spectral"], [80, 0, 0, "-", "statistical_checks"], [84, 0, 0, "-", "util"]], "pygwb.baseline": [[5, 1, 1, "", "Baseline"], [6, 4, 1, "", "get_baselines"]], "pygwb.baseline.Baseline": [[5, 2, 1, "", "__call__"], [5, 2, 1, "", "__init__"], [5, 3, 1, "", "badGPStimes"], [5, 2, 1, "", "calc_baseline_orf"], [5, 2, 1, "", "calculate_delta_sigma_cut"], [5, 2, 1, "", "check_sampling_frequencies_match_baseline_ifos"], [5, 3, 1, "", "coherence_dict"], [5, 3, 1, "", "coherence_spectrum"], [5, 2, 1, "", "crop_frequencies_average_psd_csd"], [5, 3, 1, "", "csd_segment_offset"], [5, 3, 1, "", "delta_sigmas"], [5, 3, 1, "", "duration"], [5, 3, 1, "", "frequencies"], [5, 2, 1, "", "from_interferometers"], [5, 2, 1, "", "from_parameters"], [5, 3, 1, "", "gamma_v"], [5, 2, 1, "", "load_from_pickle"], [5, 3, 1, "", "orf_polarization"], [5, 3, 1, "", "overlap_reduction_function"], [5, 3, 1, "", "point_estimate"], [5, 3, 1, "", "point_estimate_spectrogram"], [5, 3, 1, "", "point_estimate_spectrum"], [5, 2, 1, "", "reweight"], [5, 3, 1, "", "sampling_frequency"], [5, 2, 1, "", "save_point_estimate_spectra"], [5, 2, 1, "", "save_psds_csds"], [5, 2, 1, "", "save_to_pickle"], [5, 3, 1, "", "scalar_overlap_reduction_function"], [5, 2, 1, "", "set_average_cross_spectral_density"], [5, 2, 1, "", "set_average_power_spectral_densities"], [5, 2, 1, "", "set_coherence_spectrum"], [5, 2, 1, "", "set_cross_and_power_spectral_density"], [5, 2, 1, "", "set_frequency_mask"], [5, 2, 1, "", "set_point_estimate_sigma"], [5, 2, 1, "", "set_point_estimate_sigma_spectrogram"], [5, 2, 1, "", "set_point_estimate_sigma_spectrum"], [5, 3, 1, "", "sigma"], [5, 3, 1, "", "sigma_spectrogram"], [5, 3, 1, "", "sigma_spectrum"], [5, 3, 1, "", "tensor_overlap_reduction_function"], [5, 3, 1, "", "vector_overlap_reduction_function"]], "pygwb.coherence": [[8, 4, 1, "", "calculate_coherence"]], "pygwb.delta_sigma_cut": [[11, 4, 1, "", "dsc_cut"], [12, 4, 1, "", "run_dsc"]], "pygwb.detector": [[14, 1, 1, "", "Interferometer"]], "pygwb.detector.Interferometer": [[14, 2, 1, "", "__call__"], [14, 2, 1, "", "__init__"], [14, 3, 1, "", "amplitude_spectral_density_array"], [14, 2, 1, "", "antenna_response"], [14, 2, 1, "", "apply_gates_from_file"], [14, 2, 1, "", "check_signal_duration"], [14, 2, 1, "", "from_parameters"], [14, 2, 1, "", "from_pickle"], [14, 2, 1, "", "gate_data_apply"], [14, 2, 1, "", "get_detector_response"], [14, 2, 1, "", "get_empty_interferometer"], [14, 2, 1, "", "inject_signal"], [14, 2, 1, "", "inject_signal_from_waveform_generator"], [14, 2, 1, "", "inject_signal_from_waveform_polarizations"], [14, 2, 1, "", "inner_product"], [14, 2, 1, "", "matched_filter_snr"], [14, 2, 1, "", "optimal_snr_squared"], [14, 2, 1, "", "plot_time_domain_data"], [14, 3, 1, "", "power_spectral_density_array"], [14, 2, 1, "", "save_data"], [14, 2, 1, "", "set_average_psd"], [14, 2, 1, "", "set_psd_spectrogram"], [14, 2, 1, "", "set_strain_data_from_channel_name"], [14, 2, 1, "", "set_strain_data_from_csv"], [14, 2, 1, "", "set_strain_data_from_frame_file"], [14, 2, 1, "", "set_strain_data_from_frequency_domain_strain"], [14, 2, 1, "", "set_strain_data_from_gwpy_timeseries"], [14, 2, 1, "", "set_strain_data_from_power_spectral_density"], [14, 2, 1, "", "set_strain_data_from_zero_noise"], [14, 2, 1, "", "set_timeseries_from_channel_name"], [14, 2, 1, "", "set_timeseries_from_gwpy_timeseries"], [14, 2, 1, "", "set_timeseries_from_timeseries_array"], [14, 2, 1, "", "time_delay_from_geocenter"], [14, 2, 1, "", "to_pickle"], [14, 2, 1, "", "vertex_position_geocentric"], [14, 3, 1, "", "whitened_frequency_domain_strain"]], "pygwb.network": [[16, 1, 1, "", "Network"]], "pygwb.network.Network": [[16, 2, 1, "", "__call__"], [16, 2, 1, "", "__init__"], [16, 2, 1, "", "combine_point_estimate_sigma_spectra"], [16, 2, 1, "", "from_baselines"], [16, 2, 1, "", "save_interferometer_data_to_file"], [16, 2, 1, "", "set_duration"], [16, 2, 1, "", "set_frequency_mask"], [16, 2, 1, "", "set_interferometer_data_from_simulator"], [16, 2, 1, "", "set_point_estimate_sigma"]], "pygwb.notch": [[18, 1, 1, "", "StochNotch"], [19, 1, 1, "", "StochNotchList"], [20, 4, 1, "", "comb"], [21, 4, 1, "", "power_lines"], [22, 4, 1, "", "pulsar_injections"]], "pygwb.notch.StochNotch": [[18, 2, 1, "", "__call__"], [18, 2, 1, "", "__init__"], [18, 2, 1, "", "check_frequency"], [18, 2, 1, "", "get_idxs"], [18, 2, 1, "", "get_notch_mask"], [18, 2, 1, "", "print_notch"]], "pygwb.notch.StochNotchList": [[19, 2, 1, "", "__call__"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "append"], [19, 2, 1, "", "check_frequency"], [19, 2, 1, "", "clear"], [19, 2, 1, "", "copy"], [19, 2, 1, "", "count"], [19, 2, 1, "", "extend"], [19, 2, 1, "", "get_notch_mask"], [19, 2, 1, "", "index"], [19, 2, 1, "", "insert"], [19, 2, 1, "", "load_from_file"], [19, 2, 1, "", "pop"], [19, 2, 1, "", "remove"], [19, 2, 1, "", "reverse"], [19, 2, 1, "", "save_notch_mask"], [19, 2, 1, "", "save_to_txt"], [19, 2, 1, "", "sort"], [19, 2, 1, "", "sort_list"]], "pygwb.omega_spectra": [[24, 1, 1, "", "OmegaSpectrogram"], [25, 1, 1, "", "OmegaSpectrum"], [26, 4, 1, "", "reweight_spectral_object"]], "pygwb.omega_spectra.OmegaSpectrogram": [[24, 3, 1, "", "T"], [24, 2, 1, "", "__call__"], [24, 2, 1, "", "__init__"], [24, 2, 1, "", "abs"], [24, 2, 1, "", "all"], [24, 3, 1, "", "alpha"], [24, 2, 1, "", "any"], [24, 2, 1, "", "append"], [24, 2, 1, "", "argmax"], [24, 2, 1, "", "argmin"], [24, 2, 1, "", "argpartition"], [24, 2, 1, "", "argsort"], [24, 2, 1, "", "astype"], [24, 3, 1, "", "band"], [24, 5, 1, "", "base"], [24, 2, 1, "", "byteswap"], [24, 3, 1, "", "cgs"], [24, 3, 1, "", "channel"], [24, 2, 1, "", "choose"], [24, 2, 1, "", "clip"], [24, 2, 1, "", "compress"], [24, 2, 1, "", "conj"], [24, 2, 1, "", "conjugate"], [24, 2, 1, "", "copy"], [24, 2, 1, "", "crop"], [24, 2, 1, "", "crop_frequencies"], [24, 5, 1, "", "ctypes"], [24, 2, 1, "", "cumprod"], [24, 2, 1, "", "cumsum"], [24, 5, 1, "", "data"], [24, 2, 1, "", "decompose"], [24, 3, 1, "", "df"], [24, 2, 1, "", "diagonal"], [24, 2, 1, "", "diff"], [24, 3, 1, "", "dt"], [24, 5, 1, "", "dtype"], [24, 2, 1, "", "dump"], [24, 2, 1, "", "dumps"], [24, 3, 1, "", "dx"], [24, 3, 1, "", "dy"], [24, 3, 1, "", "epoch"], [24, 3, 1, "", "equivalencies"], [24, 3, 1, "", "f0"], [24, 2, 1, "", "fill"], [24, 2, 1, "", "filter"], [24, 5, 1, "", "flags"], [24, 3, 1, "", "flat"], [24, 2, 1, "", "flatten"], [24, 3, 1, "", "fref"], [24, 3, 1, "", "frequencies"], [24, 2, 1, "", "from_spectra"], [24, 2, 1, "", "getfield"], [24, 3, 1, "", "h0"], [24, 5, 1, "", "imag"], [24, 2, 1, "", "inject"], [24, 2, 1, "", "insert"], [24, 2, 1, "", "is_compatible"], [24, 2, 1, "", "is_contiguous"], [24, 3, 1, "", "isscalar"], [24, 2, 1, "", "item"], [24, 2, 1, "", "itemset"], [24, 5, 1, "", "itemsize"], [24, 2, 1, "", "load_from_pickle"], [24, 2, 1, "", "max"], [24, 2, 1, "", "mean"], [24, 2, 1, "", "median"], [24, 2, 1, "", "min"], [24, 3, 1, "", "name"], [24, 5, 1, "", "nbytes"], [24, 5, 1, "", "ndim"], [24, 2, 1, "", "newbyteorder"], [24, 2, 1, "", "nonzero"], [24, 2, 1, "", "override_unit"], [24, 2, 1, "", "pad"], [24, 2, 1, "", "partition"], [24, 2, 1, "", "percentile"], [24, 2, 1, "", "plot"], [24, 2, 1, "", "prepend"], [24, 2, 1, "", "prod"], [24, 2, 1, "", "ptp"], [24, 2, 1, "", "put"], [24, 2, 1, "", "ratio"], [24, 2, 1, "", "ravel"], [24, 2, 1, "", "read"], [24, 5, 1, "", "real"], [24, 2, 1, "", "repeat"], [24, 2, 1, "", "reset_h0"], [24, 2, 1, "", "reshape"], [24, 2, 1, "", "resize"], [24, 2, 1, "", "reweight"], [24, 2, 1, "", "round"], [24, 2, 1, "", "save_to_pickle"], [24, 2, 1, "", "searchsorted"], [24, 2, 1, "", "setfield"], [24, 2, 1, "", "setflags"], [24, 5, 1, "", "shape"], [24, 2, 1, "", "shift"], [24, 3, 1, "", "si"], [24, 5, 1, "", "size"], [24, 2, 1, "", "sort"], [24, 3, 1, "", "span"], [24, 2, 1, "", "squeeze"], [24, 2, 1, "", "std"], [24, 2, 1, "", "step"], [24, 5, 1, "", "strides"], [24, 2, 1, "", "sum"], [24, 2, 1, "", "swapaxes"], [24, 3, 1, "", "t0"], [24, 2, 1, "", "take"], [24, 3, 1, "", "times"], [24, 2, 1, "", "to"], [24, 2, 1, "", "to_string"], [24, 2, 1, "", "to_value"], [24, 2, 1, "", "tobytes"], [24, 2, 1, "", "tofile"], [24, 2, 1, "", "tolist"], [24, 2, 1, "", "tostring"], [24, 2, 1, "", "trace"], [24, 2, 1, "", "transpose"], [24, 3, 1, "", "unit"], [24, 2, 1, "", "update"], [24, 3, 1, "", "value"], [24, 2, 1, "", "value_at"], [24, 2, 1, "", "var"], [24, 2, 1, "", "variance"], [24, 2, 1, "", "view"], [24, 2, 1, "", "write"], [24, 3, 1, "", "x0"], [24, 3, 1, "", "xindex"], [24, 3, 1, "", "xspan"], [24, 3, 1, "", "xunit"], [24, 3, 1, "", "y0"], [24, 3, 1, "", "yindex"], [24, 3, 1, "", "yspan"], [24, 3, 1, "", "yunit"], [24, 2, 1, "", "zip"], [24, 2, 1, "", "zpk"]], "pygwb.omega_spectra.OmegaSpectrum": [[25, 5, 1, "", "T"], [25, 2, 1, "", "__call__"], [25, 2, 1, "", "__init__"], [25, 2, 1, "", "abs"], [25, 2, 1, "", "all"], [25, 3, 1, "", "alpha"], [25, 2, 1, "", "any"], [25, 2, 1, "", "append"], [25, 2, 1, "", "argmax"], [25, 2, 1, "", "argmin"], [25, 2, 1, "", "argpartition"], [25, 2, 1, "", "argsort"], [25, 2, 1, "", "astype"], [25, 5, 1, "", "base"], [25, 2, 1, "", "byteswap"], [25, 3, 1, "", "cgs"], [25, 3, 1, "", "channel"], [25, 2, 1, "", "choose"], [25, 2, 1, "", "clip"], [25, 2, 1, "", "compress"], [25, 2, 1, "", "conj"], [25, 2, 1, "", "conjugate"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "crop"], [25, 5, 1, "", "ctypes"], [25, 2, 1, "", "cumprod"], [25, 2, 1, "", "cumsum"], [25, 5, 1, "", "data"], [25, 2, 1, "", "decompose"], [25, 3, 1, "", "df"], [25, 2, 1, "", "diagonal"], [25, 2, 1, "", "diff"], [25, 5, 1, "", "dtype"], [25, 2, 1, "", "dump"], [25, 2, 1, "", "dumps"], [25, 3, 1, "", "dx"], [25, 3, 1, "", "epoch"], [25, 3, 1, "", "equivalencies"], [25, 3, 1, "", "f0"], [25, 2, 1, "", "fill"], [25, 2, 1, "", "filter"], [25, 5, 1, "", "flags"], [25, 3, 1, "", "flat"], [25, 2, 1, "", "flatten"], [25, 3, 1, "", "fref"], [25, 3, 1, "", "frequencies"], [25, 2, 1, "", "from_lal"], [25, 2, 1, "", "from_pycbc"], [25, 2, 1, "", "getfield"], [25, 3, 1, "", "h0"], [25, 2, 1, "", "ifft"], [25, 5, 1, "", "imag"], [25, 2, 1, "", "inject"], [25, 2, 1, "", "insert"], [25, 2, 1, "", "interpolate"], [25, 2, 1, "", "is_compatible"], [25, 2, 1, "", "is_contiguous"], [25, 3, 1, "", "isscalar"], [25, 2, 1, "", "item"], [25, 2, 1, "", "itemset"], [25, 5, 1, "", "itemsize"], [25, 2, 1, "", "load_from_pickle"], [25, 2, 1, "", "max"], [25, 2, 1, "", "mean"], [25, 2, 1, "", "median"], [25, 2, 1, "", "min"], [25, 3, 1, "", "name"], [25, 5, 1, "", "nbytes"], [25, 5, 1, "", "ndim"], [25, 2, 1, "", "newbyteorder"], [25, 2, 1, "", "nonzero"], [25, 2, 1, "", "override_unit"], [25, 2, 1, "", "pad"], [25, 2, 1, "", "partition"], [25, 2, 1, "", "plot"], [25, 2, 1, "", "prepend"], [25, 2, 1, "", "prod"], [25, 2, 1, "", "ptp"], [25, 2, 1, "", "put"], [25, 2, 1, "", "ravel"], [25, 2, 1, "", "read"], [25, 5, 1, "", "real"], [25, 2, 1, "", "repeat"], [25, 2, 1, "", "reset_h0"], [25, 2, 1, "", "reshape"], [25, 2, 1, "", "resize"], [25, 2, 1, "", "reweight"], [25, 2, 1, "", "round"], [25, 2, 1, "", "save_to_pickle"], [25, 2, 1, "", "searchsorted"], [25, 2, 1, "", "setfield"], [25, 2, 1, "", "setflags"], [25, 5, 1, "", "shape"], [25, 2, 1, "", "shift"], [25, 3, 1, "", "si"], [25, 5, 1, "", "size"], [25, 2, 1, "", "sort"], [25, 2, 1, "", "squeeze"], [25, 2, 1, "", "std"], [25, 2, 1, "", "step"], [25, 5, 1, "", "strides"], [25, 2, 1, "", "sum"], [25, 2, 1, "", "swapaxes"], [25, 2, 1, "", "take"], [25, 2, 1, "", "to"], [25, 2, 1, "", "to_lal"], [25, 2, 1, "", "to_pycbc"], [25, 2, 1, "", "to_string"], [25, 2, 1, "", "to_value"], [25, 2, 1, "", "tobytes"], [25, 2, 1, "", "tofile"], [25, 2, 1, "", "tolist"], [25, 2, 1, "", "tostring"], [25, 2, 1, "", "trace"], [25, 2, 1, "", "transpose"], [25, 3, 1, "", "unit"], [25, 2, 1, "", "update"], [25, 3, 1, "", "value"], [25, 2, 1, "", "value_at"], [25, 2, 1, "", "var"], [25, 2, 1, "", "view"], [25, 2, 1, "", "write"], [25, 3, 1, "", "x0"], [25, 3, 1, "", "xindex"], [25, 3, 1, "", "xspan"], [25, 3, 1, "", "xunit"], [25, 2, 1, "", "zip"], [25, 2, 1, "", "zpk"]], "pygwb.orfs": [[28, 4, 1, "", "Sminus"], [29, 4, 1, "", "Splus"], [30, 4, 1, "", "T_right_left"], [31, 4, 1, "", "Tminus"], [32, 4, 1, "", "Tplus"], [33, 4, 1, "", "Vminus"], [34, 4, 1, "", "Vplus"], [35, 4, 1, "", "calc_orf"], [36, 4, 1, "", "omega_tangent_bisector"], [37, 4, 1, "", "tangent_vector"]], "pygwb.parameters": [[39, 1, 1, "", "Parameters"], [40, 1, 1, "", "ParametersHelp"]], "pygwb.parameters.Parameters": [[39, 5, 1, "", "N_average_segments_psd"], [39, 2, 1, "", "__call__"], [39, 2, 1, "", "__init__"], [39, 5, 1, "", "alpha"], [39, 5, 1, "", "alphas_delta_sigma_cut"], [39, 5, 1, "", "calibration_epsilon"], [39, 5, 1, "", "channel"], [39, 5, 1, "", "cluster_window"], [39, 5, 1, "", "coarse_grain_csd"], [39, 5, 1, "", "coarse_grain_psd"], [39, 5, 1, "", "cutoff_frequency"], [39, 5, 1, "", "data_type"], [39, 5, 1, "", "delta_sigma_cut"], [39, 5, 1, "", "fhigh"], [39, 5, 1, "", "flow"], [39, 5, 1, "", "frametype"], [39, 5, 1, "", "fref"], [39, 5, 1, "", "frequency_resolution"], [39, 5, 1, "", "ftype"], [39, 5, 1, "", "gate_data"], [39, 5, 1, "", "gate_threshold"], [39, 5, 1, "", "gate_tpad"], [39, 5, 1, "", "gate_tzero"], [39, 5, 1, "", "gate_whiten"], [39, 5, 1, "", "input_sample_rate"], [39, 5, 1, "", "interferometer_list"], [39, 5, 1, "", "local_data_path"], [39, 5, 1, "", "new_sample_rate"], [39, 5, 1, "", "notch_list_path"], [39, 5, 1, "", "number_cropped_seconds"], [39, 5, 1, "", "overlap_factor"], [39, 5, 1, "", "overlap_factor_welch"], [39, 2, 1, "", "parse_ifo_parameters"], [39, 5, 1, "", "polarization"], [39, 5, 1, "", "return_naive_and_averaged_sigmas"], [39, 5, 1, "", "save_data_type"], [39, 2, 1, "", "save_paramfile"], [39, 5, 1, "", "segment_duration"], [39, 5, 1, "", "t0"], [39, 5, 1, "", "tag"], [39, 5, 1, "", "tf"], [39, 5, 1, "", "time_shift"], [39, 2, 1, "", "update_from_arguments"], [39, 2, 1, "", "update_from_dictionary"], [39, 2, 1, "", "update_from_file"], [39, 5, 1, "", "window_downsampling"], [39, 5, 1, "", "window_fft_dict"], [39, 5, 1, "", "window_fft_dict_welch"]], "pygwb.parameters.ParametersHelp": [[40, 2, 1, "", "__call__"], [40, 2, 1, "", "__init__"]], "pygwb.pe": [[42, 1, 1, "", "BrokenPowerLawModel"], [43, 1, 1, "", "GWBModel"], [44, 1, 1, "", "PVPowerLawModel"], [45, 1, 1, "", "PVPowerLawModel2"], [46, 1, 1, "", "PowerLawModel"], [47, 1, 1, "", "SchumannModel"], [48, 1, 1, "", "SmoothBrokenPowerLawModel"], [49, 1, 1, "", "TVSPowerLawModel"], [50, 1, 1, "", "TripleBrokenPowerLawModel"]], "pygwb.pe.BrokenPowerLawModel": [[42, 2, 1, "", "__call__"], [42, 2, 1, "", "__init__"], [42, 2, 1, "", "log_likelihood"], [42, 2, 1, "", "log_likelihood_IJ"], [42, 2, 1, "", "log_likelihood_ratio"], [42, 2, 1, "", "model_function"], [42, 2, 1, "", "noise_log_likelihood"], [42, 3, 1, "", "parameters"]], "pygwb.pe.GWBModel": [[43, 2, 1, "", "__call__"], [43, 2, 1, "", "__init__"], [43, 2, 1, "", "log_likelihood"], [43, 2, 1, "", "log_likelihood_IJ"], [43, 2, 1, "", "log_likelihood_ratio"], [43, 2, 1, "", "model_function"], [43, 2, 1, "", "noise_log_likelihood"], [43, 2, 1, "", "parameters"]], "pygwb.pe.PVPowerLawModel": [[44, 2, 1, "", "__call__"], [44, 2, 1, "", "__init__"], [44, 2, 1, "", "log_likelihood"], [44, 2, 1, "", "log_likelihood_IJ"], [44, 2, 1, "", "log_likelihood_ratio"], [44, 2, 1, "", "model_function"], [44, 2, 1, "", "noise_log_likelihood"], [44, 3, 1, "", "parameters"]], "pygwb.pe.PVPowerLawModel2": [[45, 2, 1, "", "__call__"], [45, 2, 1, "", "__init__"], [45, 2, 1, "", "log_likelihood"], [45, 2, 1, "", "log_likelihood_IJ"], [45, 2, 1, "", "log_likelihood_ratio"], [45, 2, 1, "", "model_function"], [45, 2, 1, "", "noise_log_likelihood"], [45, 3, 1, "", "parameters"]], "pygwb.pe.PowerLawModel": [[46, 2, 1, "", "__call__"], [46, 2, 1, "", "__init__"], [46, 2, 1, "", "log_likelihood"], [46, 2, 1, "", "log_likelihood_IJ"], [46, 2, 1, "", "log_likelihood_ratio"], [46, 2, 1, "", "model_function"], [46, 2, 1, "", "noise_log_likelihood"], [46, 3, 1, "", "parameters"]], "pygwb.pe.SchumannModel": [[47, 2, 1, "", "__call__"], [47, 2, 1, "", "__init__"], [47, 2, 1, "", "log_likelihood"], [47, 2, 1, "", "log_likelihood_IJ"], [47, 2, 1, "", "log_likelihood_ratio"], [47, 2, 1, "", "model_function"], [47, 2, 1, "", "noise_log_likelihood"], [47, 3, 1, "", "parameters"]], "pygwb.pe.SmoothBrokenPowerLawModel": [[48, 2, 1, "", "__call__"], [48, 2, 1, "", "__init__"], [48, 2, 1, "", "log_likelihood"], [48, 2, 1, "", "log_likelihood_IJ"], [48, 2, 1, "", "log_likelihood_ratio"], [48, 2, 1, "", "model_function"], [48, 2, 1, "", "noise_log_likelihood"], [48, 3, 1, "", "parameters"]], "pygwb.pe.TVSPowerLawModel": [[49, 2, 1, "", "__call__"], [49, 2, 1, "", "__init__"], [49, 2, 1, "", "log_likelihood"], [49, 2, 1, "", "log_likelihood_IJ"], [49, 2, 1, "", "log_likelihood_ratio"], [49, 2, 1, "", "model_function"], [49, 2, 1, "", "noise_log_likelihood"], [49, 3, 1, "", "parameters"]], "pygwb.pe.TripleBrokenPowerLawModel": [[50, 2, 1, "", "__call__"], [50, 2, 1, "", "__init__"], [50, 2, 1, "", "log_likelihood"], [50, 2, 1, "", "log_likelihood_IJ"], [50, 2, 1, "", "log_likelihood_ratio"], [50, 2, 1, "", "model_function"], [50, 2, 1, "", "noise_log_likelihood"], [50, 3, 1, "", "parameters"]], "pygwb.postprocessing": [[52, 4, 1, "", "calc_Y_sigma_from_Yf_sigmaf"], [53, 4, 1, "", "calculate_point_estimate_sigma_spectra"], [54, 4, 1, "", "combine_spectra_with_sigma_weights"], [55, 4, 1, "", "odd_even_segment_postprocessing"], [56, 4, 1, "", "postprocess_Y_sigma"]], "pygwb.preprocessing": [[58, 4, 1, "", "apply_high_pass_filter"], [59, 4, 1, "", "preprocessing_data_channel_name"], [60, 4, 1, "", "preprocessing_data_gwpy_timeseries"], [61, 4, 1, "", "preprocessing_data_timeseries_array"], [62, 4, 1, "", "read_data"], [63, 4, 1, "", "resample_filter"], [64, 4, 1, "", "self_gate_data"], [65, 4, 1, "", "set_start_time"], [66, 4, 1, "", "shift_timeseries"]], "pygwb.simulator": [[68, 1, 1, "", "Simulator"]], "pygwb.simulator.Simulator": [[68, 2, 1, "", "__call__"], [68, 2, 1, "", "__init__"], [68, 2, 1, "", "compute_eigval_eigvec"], [68, 2, 1, "", "covariance_matrix"], [68, 2, 1, "", "generate_data"], [68, 2, 1, "", "generate_freq_domain_data"], [68, 2, 1, "", "get_data_for_interferometers"], [68, 2, 1, "", "get_frequencies"], [68, 2, 1, "", "get_noise_PSD_array"], [68, 2, 1, "", "get_orf"], [68, 2, 1, "", "inject_CBC"], [68, 2, 1, "", "orf_to_array"], [68, 2, 1, "", "simulate"], [68, 2, 1, "", "splice_segments"], [68, 2, 1, "", "transform_to_correlated_data"]], "pygwb.spectral": [[70, 4, 1, "", "before_after_average"], [71, 4, 1, "", "coarse_grain"], [72, 4, 1, "", "coarse_grain_exact"], [73, 4, 1, "", "coarse_grain_naive"], [74, 4, 1, "", "coarse_grain_spectrogram"], [75, 4, 1, "", "cross_spectral_density"], [76, 4, 1, "", "fftgram"], [77, 4, 1, "", "power_spectral_density"], [78, 4, 1, "", "pwelch_psd"], [79, 4, 1, "", "running_mean"]], "pygwb.statistical_checks": [[81, 1, 1, "", "StatisticalChecks"], [82, 4, 1, "", "run_statistical_checks_from_file"], [83, 4, 1, "", "sortingFunction"]], "pygwb.statistical_checks.StatisticalChecks": [[81, 2, 1, "", "__call__"], [81, 2, 1, "", "__init__"], [81, 2, 1, "", "coherence_pdf"], [81, 2, 1, "", "coherence_pvalue"], [81, 2, 1, "", "coherence_threshold"], [81, 2, 1, "", "compute_ifft_integrand"], [81, 2, 1, "", "compute_running_quantities"], [81, 2, 1, "", "generate_all_plots"], [81, 2, 1, "", "get_data_after_dsc"], [81, 2, 1, "", "plot_IFFT_point_estimate_integrand"], [81, 2, 1, "", "plot_KS_test"], [81, 2, 1, "", "plot_SNR_spectrum"], [81, 2, 1, "", "plot_coherence_spectrum"], [81, 2, 1, "", "plot_cumulative_SNR_spectrum"], [81, 2, 1, "", "plot_cumulative_sensitivity"], [81, 2, 1, "", "plot_hist_coherence"], [81, 2, 1, "", "plot_hist_omega_pre_post_dsc"], [81, 2, 1, "", "plot_hist_sigma_dsc"], [81, 2, 1, "", "plot_hist_sigma_squared"], [81, 2, 1, "", "plot_imag_SNR_spectrum"], [81, 2, 1, "", "plot_omega_sigma_in_time"], [81, 2, 1, "", "plot_omega_time_fit"], [81, 2, 1, "", "plot_real_SNR_spectrum"], [81, 2, 1, "", "plot_running_point_estimate"], [81, 2, 1, "", "plot_running_sigma"], [81, 2, 1, "", "plot_scatter_omega_sigma_dsc"], [81, 2, 1, "", "plot_scatter_sigma_dsc"], [81, 2, 1, "", "plot_sigma_spectrum"], [81, 2, 1, "", "plot_sigma_time_fit"], [81, 2, 1, "", "save_all_statements"]], "pygwb.util": [[85, 4, 1, "", "StatKS"], [86, 4, 1, "", "calc_bias"], [87, 4, 1, "", "calc_rho"], [88, 4, 1, "", "calc_rho1"], [89, 4, 1, "", "effective_welch_averages"], [90, 4, 1, "", "get_window_tuple"], [91, 4, 1, "", "interpolate_frequency_series"], [92, 4, 1, "", "omega_to_power"], [93, 4, 1, "", "parse_window_dict"], [94, 4, 1, "", "window_factors"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"an": [0, 103, 111], "introduct": [0, 111], "simul": [0, 67, 68, 98, 100, 109, 110, 111], "modul": [0, 108, 111], "data": [0, 98, 100, 107, 110, 111], "directli": [0, 111], "spectrum": [0, 98, 110, 111], "inject": [0, 98, 100, 109, 110, 111], "paramet": [0, 38, 39, 40, 85, 98, 105, 106, 107, 109, 110, 111, 112, 115], "cbc": [0, 109, 110], "background": [0, 103, 109, 110], "continu": 0, "produc": 1, "delta": [1, 108], "sigma": [1, 108], "cut": [1, 108], "about": [2, 103], "pygwb": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 110, 115], "api": 3, "baselin": [4, 5, 6, 100, 107, 113], "get_baselin": 6, "coher": [7, 8], "calculate_coher": 8, "constant": 9, "delta_sigma_cut": [10, 11, 12], "dsc_cut": 11, "run_dsc": 12, "detector": [13, 14], "interferomet": [14, 98, 100, 109, 110], "network": [15, 16, 98, 100, 109, 111], "notch": [17, 18, 19, 20, 21, 22, 103], "stochnotch": 18, "stochnotchlist": 19, "comb": 20, "power_lin": 21, "pulsar_inject": 22, "omega_spectra": [23, 24, 25, 26], "omegaspectrogram": 24, "omegaspectrum": 25, "reweight_spectral_object": 26, "orf": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "sminu": 28, "splu": 29, "t_right_left": 30, "tminu": 31, "tplu": 32, "vminu": 33, "vplu": 34, "calc_orf": 35, "omega_tangent_bisector": 36, "tangent_vector": 37, "parametershelp": 40, "pe": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "brokenpowerlawmodel": 42, "gwbmodel": 43, "pvpowerlawmodel": 44, "pvpowerlawmodel2": 45, "powerlawmodel": 46, "schumannmodel": 47, "smoothbrokenpowerlawmodel": 48, "tvspowerlawmodel": 49, "triplebrokenpowerlawmodel": 50, "postprocess": [51, 52, 53, 54, 55, 56], "calc_y_sigma_from_yf_sigmaf": 52, "calculate_point_estimate_sigma_spectra": 53, "combine_spectra_with_sigma_weight": 54, "odd_even_segment_postprocess": 55, "postprocess_y_sigma": 56, "preprocess": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "apply_high_pass_filt": 58, "preprocessing_data_channel_nam": 59, "preprocessing_data_gwpy_timeseri": 60, "preprocessing_data_timeseries_arrai": 61, "read_data": 62, "resample_filt": 63, "self_gate_data": 64, "set_start_tim": 65, "shift_timeseri": 66, "spectral": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "before_after_averag": 70, "coarse_grain": 71, "coarse_grain_exact": 72, "coarse_grain_na": 73, "coarse_grain_spectrogram": 74, "cross_spectral_dens": 75, "fftgram": 76, "power_spectral_dens": 77, "pwelch_psd": 78, "running_mean": 79, "statistical_check": [80, 81, 82, 83, 108], "statisticalcheck": 81, "run_statistical_checks_from_fil": 82, "sortingfunct": 83, "util": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "statk": 85, "calc_bia": 86, "calc_rho": 87, "calc_rho1": 88, "effective_welch_averag": 89, "get_window_tupl": 90, "interpolate_frequency_seri": 91, "omega_to_pow": 92, "parse_window_dict": 93, "window_factor": 94, "cite": 95, "contribut": 96, "guid": 96, "1": [96, 104, 105, 106, 110, 112, 115], "lvk": 96, "member": 96, "prepar": 96, "merg": 96, "request": 96, "2": [96, 104, 105, 106, 110, 112, 115], "non": [96, 107, 113], "demo": [97, 107], "power": [98, 100, 107, 110], "random": [98, 110], "ligo": [98, 110], "nois": [98, 109, 110, 111], "broken": [98, 100], "law": [98, 100, 107], "The": [98, 100, 104, 115], "signal": [98, 100, 111], "initi": [98, 109], "empti": [98, 109, 110], "set": [98, 109], "psd": [98, 100, 109, 111], "us": [98, 105, 106, 109], "list": [98, 103, 109], "each": 98, "visual": [98, 100, 108], "document": 99, "sgwb": 100, "real": [100, 110], "creat": [100, 102, 107], "top": 100, "both": 100, "befor": 100, "after": 100, "instal": 102, "from": 102, "sourc": 102, "python": 102, "environ": 102, "gener": 103, "inform": 103, "differ": 103, "line": 103, "should": 103, "creation": 103, "exampl": 103, "appli": 103, "run": [104, 105, 106, 107, 108, 112, 115], "multipl": 104, "pygwb_pip": [104, 106], "job": 104, "pygwb_dag": 104, "script": [104, 105, 106, 112, 115], "parameter": 104, "3": [104, 105, 106, 110, 112, 115], "output": [104, 105, 106, 108, 112, 115], "combin": [104, 107], "pygwb_combin": 104, "estim": [105, 107, 108], "pygwb_p": 105, "quickstart": 106, "manual": 106, "custom": 107, "import": 107, "model": 107, "gr": [107, 113], "polar": [107, 113], "tensor": 107, "vector": 107, "scalar": 107, "interpret": 108, "plot": [108, 113], "quantiti": 108, "iift": 108, "point": 108, "integrand": 108, "spectra": 108, "evolut": 108, "function": [108, 113], "time": 108, "i": 108, "e": 108, "analysi": 108, "segment": 108, "effect": 108, "test": [108, 111], "gaussian": [108, 109, 110], "variat": 108, "varianc": 108, "fit": 108, "gate": 108, "describ": 109, "popul": [109, 110], "stochast": 110, "gravit": 110, "wave": 110, "individu": 110, "event": 110, "initialis": 110, "specifi": 110, "onli": 111, "through": 111, "recoveri": 111, "averag": 111, "statist": 112, "check": [112, 113], "pygwb_stat": 112, "calcul": 113, "overlap": 113, "reduct": 113, "arbitrari": 113, "normal": 113, "et": 113, "tutori": 114, "workflow": 115, "write": 116, "your": 116, "own": 116, "prior": 116, "file": 116}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"An introduction to the simulator module": [[0, "An-introduction-to-the-simulator-module"], [111, "An-introduction-to-the-simulator-module"]], "Simulating data with the simulator module directly": [[0, "Simulating-data-with-the-simulator-module-directly"], [111, "Simulating-data-with-the-simulator-module-directly"]], "Spectrum to inject": [[0, "Spectrum-to-inject"], [111, "Spectrum-to-inject"]], "Parameters for the simulation": [[0, "Parameters-for-the-simulation"], [111, "Parameters-for-the-simulation"]], "CBC background": [[0, "CBC-background"]], "continuous data": [[0, "continuous-data"]], "Produce a \\Delta\\sigma cut": [[1, "Produce-a-\\Delta\\sigma-cut"]], "About pygwb": [[2, "about-pygwb"]], "API": [[3, "api"]], "pygwb.baseline": [[4, "module-pygwb.baseline"]], "pygwb.baseline.Baseline": [[5, "pygwb-baseline-baseline"]], "pygwb.baseline.get_baselines": [[6, "pygwb-baseline-get-baselines"]], "pygwb.coherence": [[7, "module-pygwb.coherence"]], "pygwb.coherence.calculate_coherence": [[8, "pygwb-coherence-calculate-coherence"]], "pygwb.constants": [[9, "module-pygwb.constants"]], "pygwb.delta_sigma_cut": [[10, "module-pygwb.delta_sigma_cut"]], "pygwb.delta_sigma_cut.dsc_cut": [[11, "pygwb-delta-sigma-cut-dsc-cut"]], "pygwb.delta_sigma_cut.run_dsc": [[12, "pygwb-delta-sigma-cut-run-dsc"]], "pygwb.detector": [[13, "module-pygwb.detector"]], "pygwb.detector.Interferometer": [[14, "pygwb-detector-interferometer"]], "pygwb.network": [[15, "module-pygwb.network"]], "pygwb.network.Network": [[16, "pygwb-network-network"]], "pygwb.notch": [[17, "module-pygwb.notch"]], "pygwb.notch.StochNotch": [[18, "pygwb-notch-stochnotch"]], "pygwb.notch.StochNotchList": [[19, "pygwb-notch-stochnotchlist"]], "pygwb.notch.comb": [[20, "pygwb-notch-comb"]], "pygwb.notch.power_lines": [[21, "pygwb-notch-power-lines"]], "pygwb.notch.pulsar_injections": [[22, "pygwb-notch-pulsar-injections"]], "pygwb.omega_spectra": [[23, "module-pygwb.omega_spectra"]], "pygwb.omega_spectra.OmegaSpectrogram": [[24, "pygwb-omega-spectra-omegaspectrogram"]], "pygwb.omega_spectra.OmegaSpectrum": [[25, "pygwb-omega-spectra-omegaspectrum"]], "pygwb.omega_spectra.reweight_spectral_object": [[26, "pygwb-omega-spectra-reweight-spectral-object"]], "pygwb.orfs": [[27, "module-pygwb.orfs"]], "pygwb.orfs.Sminus": [[28, "pygwb-orfs-sminus"]], "pygwb.orfs.Splus": [[29, "pygwb-orfs-splus"]], "pygwb.orfs.T_right_left": [[30, "pygwb-orfs-t-right-left"]], "pygwb.orfs.Tminus": [[31, "pygwb-orfs-tminus"]], "pygwb.orfs.Tplus": [[32, "pygwb-orfs-tplus"]], "pygwb.orfs.Vminus": [[33, "pygwb-orfs-vminus"]], "pygwb.orfs.Vplus": [[34, "pygwb-orfs-vplus"]], "pygwb.orfs.calc_orf": [[35, "pygwb-orfs-calc-orf"]], "pygwb.orfs.omega_tangent_bisector": [[36, "pygwb-orfs-omega-tangent-bisector"]], "pygwb.orfs.tangent_vector": [[37, "pygwb-orfs-tangent-vector"]], "pygwb.parameters": [[38, "module-pygwb.parameters"]], "pygwb.parameters.Parameters": [[39, "pygwb-parameters-parameters"]], "pygwb.parameters.ParametersHelp": [[40, "pygwb-parameters-parametershelp"]], "pygwb.pe": [[41, "module-pygwb.pe"]], "pygwb.pe.BrokenPowerLawModel": [[42, "pygwb-pe-brokenpowerlawmodel"]], "pygwb.pe.GWBModel": [[43, "pygwb-pe-gwbmodel"]], "pygwb.pe.PVPowerLawModel": [[44, "pygwb-pe-pvpowerlawmodel"]], "pygwb.pe.PVPowerLawModel2": [[45, "pygwb-pe-pvpowerlawmodel2"]], "pygwb.pe.PowerLawModel": [[46, "pygwb-pe-powerlawmodel"]], "pygwb.pe.SchumannModel": [[47, "pygwb-pe-schumannmodel"]], "pygwb.pe.SmoothBrokenPowerLawModel": [[48, "pygwb-pe-smoothbrokenpowerlawmodel"]], "pygwb.pe.TVSPowerLawModel": [[49, "pygwb-pe-tvspowerlawmodel"]], "pygwb.pe.TripleBrokenPowerLawModel": [[50, "pygwb-pe-triplebrokenpowerlawmodel"]], "pygwb.postprocessing": [[51, "module-pygwb.postprocessing"]], "pygwb.postprocessing.calc_Y_sigma_from_Yf_sigmaf": [[52, "pygwb-postprocessing-calc-y-sigma-from-yf-sigmaf"]], "pygwb.postprocessing.calculate_point_estimate_sigma_spectra": [[53, "pygwb-postprocessing-calculate-point-estimate-sigma-spectra"]], "pygwb.postprocessing.combine_spectra_with_sigma_weights": [[54, "pygwb-postprocessing-combine-spectra-with-sigma-weights"]], "pygwb.postprocessing.odd_even_segment_postprocessing": [[55, "pygwb-postprocessing-odd-even-segment-postprocessing"]], "pygwb.postprocessing.postprocess_Y_sigma": [[56, "pygwb-postprocessing-postprocess-y-sigma"]], "pygwb.preprocessing": [[57, "module-pygwb.preprocessing"]], "pygwb.preprocessing.apply_high_pass_filter": [[58, "pygwb-preprocessing-apply-high-pass-filter"]], "pygwb.preprocessing.preprocessing_data_channel_name": [[59, "pygwb-preprocessing-preprocessing-data-channel-name"]], "pygwb.preprocessing.preprocessing_data_gwpy_timeseries": [[60, "pygwb-preprocessing-preprocessing-data-gwpy-timeseries"]], "pygwb.preprocessing.preprocessing_data_timeseries_array": [[61, "pygwb-preprocessing-preprocessing-data-timeseries-array"]], "pygwb.preprocessing.read_data": [[62, "pygwb-preprocessing-read-data"]], "pygwb.preprocessing.resample_filter": [[63, "pygwb-preprocessing-resample-filter"]], "pygwb.preprocessing.self_gate_data": [[64, "pygwb-preprocessing-self-gate-data"]], "pygwb.preprocessing.set_start_time": [[65, "pygwb-preprocessing-set-start-time"]], "pygwb.preprocessing.shift_timeseries": [[66, "pygwb-preprocessing-shift-timeseries"]], "pygwb.simulator": [[67, "module-pygwb.simulator"]], "pygwb.simulator.Simulator": [[68, "pygwb-simulator-simulator"]], "pygwb.spectral": [[69, "module-pygwb.spectral"]], "pygwb.spectral.before_after_average": [[70, "pygwb-spectral-before-after-average"]], "pygwb.spectral.coarse_grain": [[71, "pygwb-spectral-coarse-grain"]], "pygwb.spectral.coarse_grain_exact": [[72, "pygwb-spectral-coarse-grain-exact"]], "pygwb.spectral.coarse_grain_naive": [[73, "pygwb-spectral-coarse-grain-naive"]], "pygwb.spectral.coarse_grain_spectrogram": [[74, "pygwb-spectral-coarse-grain-spectrogram"]], "pygwb.spectral.cross_spectral_density": [[75, "pygwb-spectral-cross-spectral-density"]], "pygwb.spectral.fftgram": [[76, "pygwb-spectral-fftgram"]], "pygwb.spectral.power_spectral_density": [[77, "pygwb-spectral-power-spectral-density"]], "pygwb.spectral.pwelch_psd": [[78, "pygwb-spectral-pwelch-psd"]], "pygwb.spectral.running_mean": [[79, "pygwb-spectral-running-mean"]], "pygwb.statistical_checks": [[80, "module-pygwb.statistical_checks"]], "pygwb.statistical_checks.StatisticalChecks": [[81, "pygwb-statistical-checks-statisticalchecks"]], "pygwb.statistical_checks.run_statistical_checks_from_file": [[82, "pygwb-statistical-checks-run-statistical-checks-from-file"]], "pygwb.statistical_checks.sortingFunction": [[83, "pygwb-statistical-checks-sortingfunction"]], "pygwb.util": [[84, "module-pygwb.util"]], "pygwb.util.StatKS": [[85, "pygwb-util-statks"]], "Parameters:": [[85, "parameters"]], "pygwb.util.calc_bias": [[86, "pygwb-util-calc-bias"]], "pygwb.util.calc_rho": [[87, "pygwb-util-calc-rho"]], "pygwb.util.calc_rho1": [[88, "pygwb-util-calc-rho1"]], "pygwb.util.effective_welch_averages": [[89, "pygwb-util-effective-welch-averages"]], "pygwb.util.get_window_tuple": [[90, "pygwb-util-get-window-tuple"]], "pygwb.util.interpolate_frequency_series": [[91, "pygwb-util-interpolate-frequency-series"]], "pygwb.util.omega_to_power": [[92, "pygwb-util-omega-to-power"]], "pygwb.util.parse_window_dict": [[93, "pygwb-util-parse-window-dict"]], "pygwb.util.window_factors": [[94, "pygwb-util-window-factors"]], "Citing pygwb": [[95, "citing-pygwb"]], "Contributing guide": [[96, "contributing-guide"]], "1. Contributing as LVK member": [[96, "contributing-as-lvk-member"]], "Preparing a merge request": [[96, "preparing-a-merge-request"]], "2. Contributing as a non-LVK member": [[96, "contributing-as-a-non-lvk-member"]], "Demos": [[97, "demos"]], "Inject a power spectrum in random LIGO noise": [[98, "Inject-a-power-spectrum-in-random-LIGO-noise"]], "Injection of a broken power-law": [[98, "Injection-of-a-broken-power-law"], [100, "Injection-of-a-broken-power-law"]], "Simulation parameters": [[98, "Simulation-parameters"], [109, "Simulation-parameters"]], "The signal to inject": [[98, "The-signal-to-inject"], [100, "The-signal-to-inject"]], "Initialize empty interferometers and set a noise PSD to use in the simulation": [[98, "Initialize-empty-interferometers-and-set-a-noise-PSD-to-use-in-the-simulation"], [109, "Initialize-empty-interferometers-and-set-a-noise-PSD-to-use-in-the-simulation"]], "Initialize a network with the interferometer list": [[98, "Initialize-a-network-with-the-interferometer-list"], [109, "Initialize-a-network-with-the-interferometer-list"]], "Simulate the data in each interferometer": [[98, "Simulate-the-data-in-each-interferometer"]], "Visualize the data PSD": [[98, "Visualize-the-data-PSD"]], "pygwb documentation": [[99, "pygwb-documentation"]], "Inject a SGWB into real data": [[100, "Inject-a-SGWB-into-real-data"]], "Create a network of interferometers": [[100, "Create-a-network-of-interferometers"]], "Create baseline and network": [[100, "Create-baseline-and-network"]], "Inject simulated data on top of the real data": [[100, "Inject-simulated-data-on-top-of-the-real-data"]], "Visualize the data PSD, both before and after the injection on top of real data": [[100, "Visualize-the-data-PSD,-both-before-and-after-the-injection-on-top-of-real-data"]], "Installation": [[102, "installation"]], "Installing from source": [[102, "installing-from-source"]], "Creating a python environment": [[102, "creating-a-python-environment"]], "Installing Python": [[102, "installing-python"]], "Generate a notch list": [[103, "Generate-a-notch-list"]], "Background information about the different lines that should be notched": [[103, "Background-information-about-the-different-lines-that-should-be-notched"]], "Creation of an example notch list": [[103, "Creation-of-an-example-notch-list"]], "Applying a notch list": [[103, "Applying-a-notch-list"]], "Running multiple pygwb_pipe jobs": [[104, "running-multiple-pygwb-pipe-jobs"]], "The pygwb_dag script": [[104, "the-pygwb-dag-script"]], "1. Script parameteres": [[104, "script-parameteres"], [104, "id6"]], "2. Running the script": [[104, "running-the-script"], [104, "id7"], [105, "running-the-script"], [106, "running-the-script"], [112, "running-the-script"], [115, "running-the-script"]], "3. Output of the script": [[104, "output-of-the-script"], [104, "id8"], [105, "output-of-the-script"], [106, "output-of-the-script"], [112, "output-of-the-script"], [115, "output-of-the-script"]], "Combining runs with pygwb_combine": [[104, "combining-runs-with-pygwb-combine"]], "Parameter estimation using pygwb_pe": [[105, "parameter-estimation-using-pygwb-pe"]], "1. Script parameters": [[105, "script-parameters"], [106, "script-parameters"], [112, "script-parameters"], [115, "script-parameters"]], "Using pygwb_pipe: a quickstart manual": [[106, "using-pygwb-pipe-a-quickstart-manual"]], "Parameter estimation demo: customizing runs": [[107, "Parameter-estimation-demo:-customizing-runs"]], "Importing data and creating baseline": [[107, "Importing-data-and-creating-baseline"]], "Run parameter estimation for a power-law model": [[107, "Run-parameter-estimation-for-a-power-law-model"]], "Non-GR polarizations: tensor-vector-scalar polarization model": [[107, "Non-GR-polarizations:-tensor-vector-scalar-polarization-model"]], "Combining models": [[107, "Combining-models"]], "Interpret the output of the statistical_checks module": [[108, "Interpret-the-output-of-the-statistical_checks-module"]], "Plots": [[108, "Plots"]], "Plotting running quantities": [[108, "Plotting-running-quantities"]], "Plotting the IIFT of the point estimate integrand": [[108, "Plotting-the-IIFT-of-the-point-estimate-integrand"]], "Plotting spectra": [[108, "Plotting-spectra"]], "Plotting the evolution as a function of time (i.e. analysis segment)": [[108, "Plotting-the-evolution-as-a-function-of-time-(i.e.-analysis-segment)"]], "Plotting the effect of the delta-sigma cut": [[108, "Plotting-the-effect-of-the-delta-sigma-cut"]], "Testing Gaussianity": [[108, "Testing-Gaussianity"]], "Visualizing the variation in variance": [[108, "Visualizing-the-variation-in-variance"]], "Fitting as a function of time": [[108, "Fitting-as-a-function-of-time"]], "Effect of gating": [[108, "Effect-of-gating"]], "Simulate a CBC background": [[109, "Simulate-a-CBC-background"]], "Injection of CBCs": [[109, "Injection-of-CBCs"]], "Describing the CBC population used for the simulation": [[109, "Describing-the-CBC-population-used-for-the-simulation"]], "Simulate the CBCs and Gaussian noise": [[109, "Simulate-the-CBCs-and-Gaussian-noise"]], "Simulating data with pygwb.simulator": [[110, "simulating-data-with-pygwb-simulator"]], "1. Simulating a stochastic gravitational-wave background": [[110, "simulating-a-stochastic-gravitational-wave-background"]], "1.1 Injecting a power spectrum in random LIGO noise": [[110, "injecting-a-power-spectrum-in-random-ligo-noise"]], "1.2 Injecting a power spectrum in real data": [[110, "injecting-a-power-spectrum-in-real-data"]], "2. Injecting individual CBC events": [[110, "injecting-individual-cbc-events"]], "2.1 Initialising empty interferometers and parameters for simulation": [[110, "initialising-empty-interferometers-and-parameters-for-simulation"]], "2.2 Specifying the CBC population": [[110, "specifying-the-cbc-population"]], "2.3 Simulating CBCs and Gaussian noise": [[110, "simulating-cbcs-and-gaussian-noise"]], "Signal only (no noise)": [[111, "Signal-only-(no-noise)"]], "Signal and noise": [[111, "Signal-and-noise"], [111, "id1"]], "Simulating data through the network module": [[111, "Simulating-data-through-the-network-module"]], "Recovery test: averaged PSD": [[111, "Recovery-test:-averaged-PSD"]], "Signal only": [[111, "Signal-only"]], "Running statistical checks with pygwb_stats": [[112, "running-statistical-checks-with-pygwb-stats"]], "Calculate overlap reduction functions": [[113, "Calculate-overlap-reduction-functions"]], "Overlap reduction function calculation for arbitrary baselines": [[113, "Overlap-reduction-function-calculation-for-arbitrary-baselines"]], "Check normalization for ET": [[113, "Check-normalization-for-ET"]], "Plot non-GR polarizations": [[113, "Plot-non-GR-polarizations"]], "Tutorials": [[114, "tutorials"]], "The pygwb workflow": [[115, "the-pygwb-workflow"]], "Write your own prior file": [[116, "Write-your-own-prior-file"]]}, "indexentries": {"module": [[4, "module-pygwb.baseline"], [7, "module-pygwb.coherence"], [9, "module-pygwb.constants"], [10, "module-pygwb.delta_sigma_cut"], [13, "module-pygwb.detector"], [15, "module-pygwb.network"], [17, "module-pygwb.notch"], [23, "module-pygwb.omega_spectra"], [27, "module-pygwb.orfs"], [38, "module-pygwb.parameters"], [41, "module-pygwb.pe"], [51, "module-pygwb.postprocessing"], [57, "module-pygwb.preprocessing"], [67, "module-pygwb.simulator"], [69, "module-pygwb.spectral"], [80, "module-pygwb.statistical_checks"], [84, "module-pygwb.util"]], "pygwb.baseline": [[4, "module-pygwb.baseline"]], "baseline (class in pygwb.baseline)": [[5, "pygwb.baseline.Baseline"]], "__call__() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.__call__"]], "__init__() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.__init__"]], "badgpstimes (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.badGPStimes"]], "calc_baseline_orf() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.calc_baseline_orf"]], "calculate_delta_sigma_cut() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.calculate_delta_sigma_cut"]], "check_sampling_frequencies_match_baseline_ifos() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.check_sampling_frequencies_match_baseline_ifos"]], "coherence_dict (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.coherence_dict"]], "coherence_spectrum (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.coherence_spectrum"]], "crop_frequencies_average_psd_csd() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.crop_frequencies_average_psd_csd"]], "csd_segment_offset (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.csd_segment_offset"]], "delta_sigmas (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.delta_sigmas"]], "duration (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.duration"]], "frequencies (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.frequencies"]], "from_interferometers() (pygwb.baseline.baseline class method)": [[5, "pygwb.baseline.Baseline.from_interferometers"]], "from_parameters() (pygwb.baseline.baseline class method)": [[5, "pygwb.baseline.Baseline.from_parameters"]], "gamma_v (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.gamma_v"]], "load_from_pickle() (pygwb.baseline.baseline class method)": [[5, "pygwb.baseline.Baseline.load_from_pickle"]], "orf_polarization (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.orf_polarization"]], "overlap_reduction_function (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.overlap_reduction_function"]], "point_estimate (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.point_estimate"]], "point_estimate_spectrogram (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.point_estimate_spectrogram"]], "point_estimate_spectrum (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.point_estimate_spectrum"]], "reweight() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.reweight"]], "sampling_frequency (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.sampling_frequency"]], "save_point_estimate_spectra() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.save_point_estimate_spectra"]], "save_psds_csds() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.save_psds_csds"]], "save_to_pickle() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.save_to_pickle"]], "scalar_overlap_reduction_function (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.scalar_overlap_reduction_function"]], "set_average_cross_spectral_density() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.set_average_cross_spectral_density"]], "set_average_power_spectral_densities() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.set_average_power_spectral_densities"]], "set_coherence_spectrum() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.set_coherence_spectrum"]], "set_cross_and_power_spectral_density() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.set_cross_and_power_spectral_density"]], "set_frequency_mask() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.set_frequency_mask"]], "set_point_estimate_sigma() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.set_point_estimate_sigma"]], "set_point_estimate_sigma_spectrogram() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.set_point_estimate_sigma_spectrogram"]], "set_point_estimate_sigma_spectrum() (pygwb.baseline.baseline method)": [[5, "pygwb.baseline.Baseline.set_point_estimate_sigma_spectrum"]], "sigma (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.sigma"]], "sigma_spectrogram (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.sigma_spectrogram"]], "sigma_spectrum (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.sigma_spectrum"]], "tensor_overlap_reduction_function (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.tensor_overlap_reduction_function"]], "vector_overlap_reduction_function (pygwb.baseline.baseline property)": [[5, "pygwb.baseline.Baseline.vector_overlap_reduction_function"]], "get_baselines() (in module pygwb.baseline)": [[6, "pygwb.baseline.get_baselines"]], "pygwb.coherence": [[7, "module-pygwb.coherence"]], "calculate_coherence() (in module pygwb.coherence)": [[8, "pygwb.coherence.calculate_coherence"]], "pygwb.constants": [[9, "module-pygwb.constants"]], "pygwb.delta_sigma_cut": [[10, "module-pygwb.delta_sigma_cut"]], "dsc_cut() (in module pygwb.delta_sigma_cut)": [[11, "pygwb.delta_sigma_cut.dsc_cut"]], "run_dsc() (in module pygwb.delta_sigma_cut)": [[12, "pygwb.delta_sigma_cut.run_dsc"]], "pygwb.detector": [[13, "module-pygwb.detector"]], "interferometer (class in pygwb.detector)": [[14, "pygwb.detector.Interferometer"]], "__call__() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.__call__"]], "__init__() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.__init__"]], "amplitude_spectral_density_array (pygwb.detector.interferometer property)": [[14, "pygwb.detector.Interferometer.amplitude_spectral_density_array"]], "antenna_response() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.antenna_response"]], "apply_gates_from_file() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.apply_gates_from_file"]], "check_signal_duration() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.check_signal_duration"]], "from_parameters() (pygwb.detector.interferometer class method)": [[14, "pygwb.detector.Interferometer.from_parameters"]], "from_pickle() (pygwb.detector.interferometer class method)": [[14, "pygwb.detector.Interferometer.from_pickle"]], "gate_data_apply() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.gate_data_apply"]], "get_detector_response() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.get_detector_response"]], "get_empty_interferometer() (pygwb.detector.interferometer class method)": [[14, "pygwb.detector.Interferometer.get_empty_interferometer"]], "inject_signal() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.inject_signal"]], "inject_signal_from_waveform_generator() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.inject_signal_from_waveform_generator"]], "inject_signal_from_waveform_polarizations() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.inject_signal_from_waveform_polarizations"]], "inner_product() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.inner_product"]], "matched_filter_snr() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.matched_filter_snr"]], "optimal_snr_squared() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.optimal_snr_squared"]], "plot_time_domain_data() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.plot_time_domain_data"]], "power_spectral_density_array (pygwb.detector.interferometer property)": [[14, "pygwb.detector.Interferometer.power_spectral_density_array"]], "save_data() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.save_data"]], "set_average_psd() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.set_average_psd"]], "set_psd_spectrogram() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.set_psd_spectrogram"]], "set_strain_data_from_channel_name() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.set_strain_data_from_channel_name"]], "set_strain_data_from_csv() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.set_strain_data_from_csv"]], "set_strain_data_from_frame_file() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.set_strain_data_from_frame_file"]], "set_strain_data_from_frequency_domain_strain() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.set_strain_data_from_frequency_domain_strain"]], "set_strain_data_from_gwpy_timeseries() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.set_strain_data_from_gwpy_timeseries"]], "set_strain_data_from_power_spectral_density() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.set_strain_data_from_power_spectral_density"]], "set_strain_data_from_zero_noise() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.set_strain_data_from_zero_noise"]], "set_timeseries_from_channel_name() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.set_timeseries_from_channel_name"]], "set_timeseries_from_gwpy_timeseries() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.set_timeseries_from_gwpy_timeseries"]], "set_timeseries_from_timeseries_array() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.set_timeseries_from_timeseries_array"]], "time_delay_from_geocenter() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.time_delay_from_geocenter"]], "to_pickle() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.to_pickle"]], "vertex_position_geocentric() (pygwb.detector.interferometer method)": [[14, "pygwb.detector.Interferometer.vertex_position_geocentric"]], "whitened_frequency_domain_strain (pygwb.detector.interferometer property)": [[14, "pygwb.detector.Interferometer.whitened_frequency_domain_strain"]], "pygwb.network": [[15, "module-pygwb.network"]], "network (class in pygwb.network)": [[16, "pygwb.network.Network"]], "__call__() (pygwb.network.network method)": [[16, "pygwb.network.Network.__call__"]], "__init__() (pygwb.network.network method)": [[16, "pygwb.network.Network.__init__"]], "combine_point_estimate_sigma_spectra() (pygwb.network.network method)": [[16, "pygwb.network.Network.combine_point_estimate_sigma_spectra"]], "from_baselines() (pygwb.network.network class method)": [[16, "pygwb.network.Network.from_baselines"]], "save_interferometer_data_to_file() (pygwb.network.network method)": [[16, "pygwb.network.Network.save_interferometer_data_to_file"]], "set_duration() (pygwb.network.network method)": [[16, "pygwb.network.Network.set_duration"]], "set_frequency_mask() (pygwb.network.network method)": [[16, "pygwb.network.Network.set_frequency_mask"]], "set_interferometer_data_from_simulator() (pygwb.network.network method)": [[16, "pygwb.network.Network.set_interferometer_data_from_simulator"]], "set_point_estimate_sigma() (pygwb.network.network method)": [[16, "pygwb.network.Network.set_point_estimate_sigma"]], "pygwb.notch": [[17, "module-pygwb.notch"]], "stochnotch (class in pygwb.notch)": [[18, "pygwb.notch.StochNotch"]], "__call__() (pygwb.notch.stochnotch method)": [[18, "pygwb.notch.StochNotch.__call__"]], "__init__() (pygwb.notch.stochnotch method)": [[18, "pygwb.notch.StochNotch.__init__"]], "check_frequency() (pygwb.notch.stochnotch method)": [[18, "pygwb.notch.StochNotch.check_frequency"]], "get_idxs() (pygwb.notch.stochnotch method)": [[18, "pygwb.notch.StochNotch.get_idxs"]], "get_notch_mask() (pygwb.notch.stochnotch method)": [[18, "pygwb.notch.StochNotch.get_notch_mask"]], "print_notch() (pygwb.notch.stochnotch method)": [[18, "pygwb.notch.StochNotch.print_notch"]], "stochnotchlist (class in pygwb.notch)": [[19, "pygwb.notch.StochNotchList"]], "__call__() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.__call__"]], "__init__() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.__init__"]], "append() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.append"]], "check_frequency() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.check_frequency"]], "clear() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.clear"]], "copy() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.copy"]], "count() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.count"]], "extend() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.extend"]], "get_notch_mask() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.get_notch_mask"]], "index() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.index"]], "insert() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.insert"]], "load_from_file() (pygwb.notch.stochnotchlist class method)": [[19, "pygwb.notch.StochNotchList.load_from_file"]], "pop() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.pop"]], "remove() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.remove"]], "reverse() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.reverse"]], "save_notch_mask() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.save_notch_mask"]], "save_to_txt() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.save_to_txt"]], "sort() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.sort"]], "sort_list() (pygwb.notch.stochnotchlist method)": [[19, "pygwb.notch.StochNotchList.sort_list"]], "comb() (in module pygwb.notch)": [[20, "pygwb.notch.comb"]], "power_lines() (in module pygwb.notch)": [[21, "pygwb.notch.power_lines"]], "pulsar_injections() (in module pygwb.notch)": [[22, "pygwb.notch.pulsar_injections"]], "pygwb.omega_spectra": [[23, "module-pygwb.omega_spectra"]], "omegaspectrogram (class in pygwb.omega_spectra)": [[24, "pygwb.omega_spectra.OmegaSpectrogram"]], "t (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.T"]], "__call__() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.__call__"]], "__init__() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.__init__"]], "abs() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.abs"]], "all() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.all"]], "alpha (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.alpha"]], "any() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.any"]], "append() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.append"]], "argmax() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.argmax"]], "argmin() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.argmin"]], "argpartition() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.argpartition"]], "argsort() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.argsort"]], "astype() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.astype"]], "band (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.band"]], "base (pygwb.omega_spectra.omegaspectrogram attribute)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.base"]], "byteswap() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.byteswap"]], "cgs (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.cgs"]], "channel (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.channel"]], "choose() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.choose"]], "clip() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.clip"]], "compress() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.compress"]], "conj() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.conj"]], "conjugate() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.conjugate"]], "copy() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.copy"]], "crop() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.crop"]], "crop_frequencies() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.crop_frequencies"]], "ctypes (pygwb.omega_spectra.omegaspectrogram attribute)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.ctypes"]], "cumprod() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.cumprod"]], "cumsum() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.cumsum"]], "data (pygwb.omega_spectra.omegaspectrogram attribute)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.data"]], "decompose() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.decompose"]], "df (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.df"]], "diagonal() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.diagonal"]], "diff() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.diff"]], "dt (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.dt"]], "dtype (pygwb.omega_spectra.omegaspectrogram attribute)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.dtype"]], "dump() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.dump"]], "dumps() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.dumps"]], "dx (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.dx"]], "dy (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.dy"]], "epoch (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.epoch"]], "equivalencies (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.equivalencies"]], "f0 (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.f0"]], "fill() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.fill"]], "filter() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.filter"]], "flags (pygwb.omega_spectra.omegaspectrogram attribute)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.flags"]], "flat (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.flat"]], "flatten() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.flatten"]], "fref (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.fref"]], "frequencies (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.frequencies"]], "from_spectra() (pygwb.omega_spectra.omegaspectrogram class method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.from_spectra"]], "getfield() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.getfield"]], "h0 (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.h0"]], "imag (pygwb.omega_spectra.omegaspectrogram attribute)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.imag"]], "inject() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.inject"]], "insert() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.insert"]], "is_compatible() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.is_compatible"]], "is_contiguous() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.is_contiguous"]], "isscalar (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.isscalar"]], "item() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.item"]], "itemset() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.itemset"]], "itemsize (pygwb.omega_spectra.omegaspectrogram attribute)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.itemsize"]], "load_from_pickle() (pygwb.omega_spectra.omegaspectrogram class method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.load_from_pickle"]], "max() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.max"]], "mean() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.mean"]], "median() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.median"]], "min() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.min"]], "name (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.name"]], "nbytes (pygwb.omega_spectra.omegaspectrogram attribute)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.nbytes"]], "ndim (pygwb.omega_spectra.omegaspectrogram attribute)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.ndim"]], "newbyteorder() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.newbyteorder"]], "nonzero() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.nonzero"]], "override_unit() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.override_unit"]], "pad() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.pad"]], "partition() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.partition"]], "percentile() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.percentile"]], "plot() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.plot"]], "prepend() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.prepend"]], "prod() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.prod"]], "ptp() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.ptp"]], "put() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.put"]], "ratio() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.ratio"]], "ravel() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.ravel"]], "read() (pygwb.omega_spectra.omegaspectrogram class method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.read"]], "real (pygwb.omega_spectra.omegaspectrogram attribute)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.real"]], "repeat() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.repeat"]], "reset_h0() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.reset_h0"]], "reshape() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.reshape"]], "resize() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.resize"]], "reweight() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.reweight"]], "round() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.round"]], "save_to_pickle() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.save_to_pickle"]], "searchsorted() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.searchsorted"]], "setfield() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.setfield"]], "setflags() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.setflags"]], "shape (pygwb.omega_spectra.omegaspectrogram attribute)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.shape"]], "shift() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.shift"]], "si (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.si"]], "size (pygwb.omega_spectra.omegaspectrogram attribute)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.size"]], "sort() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.sort"]], "span (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.span"]], "squeeze() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.squeeze"]], "std() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.std"]], "step() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.step"]], "strides (pygwb.omega_spectra.omegaspectrogram attribute)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.strides"]], "sum() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.sum"]], "swapaxes() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.swapaxes"]], "t0 (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.t0"]], "take() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.take"]], "times (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.times"]], "to() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.to"]], "to_string() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.to_string"]], "to_value() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.to_value"]], "tobytes() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.tobytes"]], "tofile() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.tofile"]], "tolist() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.tolist"]], "tostring() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.tostring"]], "trace() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.trace"]], "transpose() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.transpose"]], "unit (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.unit"]], "update() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.update"]], "value (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.value"]], "value_at() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.value_at"]], "var() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.var"]], "variance() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.variance"]], "view() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.view"]], "write() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.write"]], "x0 (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.x0"]], "xindex (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.xindex"]], "xspan (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.xspan"]], "xunit (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.xunit"]], "y0 (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.y0"]], "yindex (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.yindex"]], "yspan (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.yspan"]], "yunit (pygwb.omega_spectra.omegaspectrogram property)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.yunit"]], "zip() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.zip"]], "zpk() (pygwb.omega_spectra.omegaspectrogram method)": [[24, "pygwb.omega_spectra.OmegaSpectrogram.zpk"]], "omegaspectrum (class in pygwb.omega_spectra)": [[25, "pygwb.omega_spectra.OmegaSpectrum"]], "t (pygwb.omega_spectra.omegaspectrum attribute)": [[25, "pygwb.omega_spectra.OmegaSpectrum.T"]], "__call__() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.__call__"]], "__init__() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.__init__"]], "abs() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.abs"]], "all() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.all"]], "alpha (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.alpha"]], "any() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.any"]], "append() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.append"]], "argmax() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.argmax"]], "argmin() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.argmin"]], "argpartition() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.argpartition"]], "argsort() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.argsort"]], "astype() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.astype"]], "base (pygwb.omega_spectra.omegaspectrum attribute)": [[25, "pygwb.omega_spectra.OmegaSpectrum.base"]], "byteswap() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.byteswap"]], "cgs (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.cgs"]], "channel (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.channel"]], "choose() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.choose"]], "clip() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.clip"]], "compress() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.compress"]], "conj() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.conj"]], "conjugate() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.conjugate"]], "copy() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.copy"]], "crop() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.crop"]], "ctypes (pygwb.omega_spectra.omegaspectrum attribute)": [[25, "pygwb.omega_spectra.OmegaSpectrum.ctypes"]], "cumprod() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.cumprod"]], "cumsum() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.cumsum"]], "data (pygwb.omega_spectra.omegaspectrum attribute)": [[25, "pygwb.omega_spectra.OmegaSpectrum.data"]], "decompose() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.decompose"]], "df (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.df"]], "diagonal() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.diagonal"]], "diff() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.diff"]], "dtype (pygwb.omega_spectra.omegaspectrum attribute)": [[25, "pygwb.omega_spectra.OmegaSpectrum.dtype"]], "dump() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.dump"]], "dumps() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.dumps"]], "dx (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.dx"]], "epoch (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.epoch"]], "equivalencies (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.equivalencies"]], "f0 (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.f0"]], "fill() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.fill"]], "filter() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.filter"]], "flags (pygwb.omega_spectra.omegaspectrum attribute)": [[25, "pygwb.omega_spectra.OmegaSpectrum.flags"]], "flat (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.flat"]], "flatten() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.flatten"]], "fref (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.fref"]], "frequencies (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.frequencies"]], "from_lal() (pygwb.omega_spectra.omegaspectrum class method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.from_lal"]], "from_pycbc() (pygwb.omega_spectra.omegaspectrum class method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.from_pycbc"]], "getfield() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.getfield"]], "h0 (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.h0"]], "ifft() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.ifft"]], "imag (pygwb.omega_spectra.omegaspectrum attribute)": [[25, "pygwb.omega_spectra.OmegaSpectrum.imag"]], "inject() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.inject"]], "insert() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.insert"]], "interpolate() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.interpolate"]], "is_compatible() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.is_compatible"]], "is_contiguous() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.is_contiguous"]], "isscalar (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.isscalar"]], "item() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.item"]], "itemset() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.itemset"]], "itemsize (pygwb.omega_spectra.omegaspectrum attribute)": [[25, "pygwb.omega_spectra.OmegaSpectrum.itemsize"]], "load_from_pickle() (pygwb.omega_spectra.omegaspectrum class method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.load_from_pickle"]], "max() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.max"]], "mean() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.mean"]], "median() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.median"]], "min() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.min"]], "name (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.name"]], "nbytes (pygwb.omega_spectra.omegaspectrum attribute)": [[25, "pygwb.omega_spectra.OmegaSpectrum.nbytes"]], "ndim (pygwb.omega_spectra.omegaspectrum attribute)": [[25, "pygwb.omega_spectra.OmegaSpectrum.ndim"]], "newbyteorder() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.newbyteorder"]], "nonzero() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.nonzero"]], "override_unit() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.override_unit"]], "pad() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.pad"]], "partition() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.partition"]], "plot() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.plot"]], "prepend() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.prepend"]], "prod() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.prod"]], "ptp() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.ptp"]], "put() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.put"]], "ravel() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.ravel"]], "read() (pygwb.omega_spectra.omegaspectrum class method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.read"]], "real (pygwb.omega_spectra.omegaspectrum attribute)": [[25, "pygwb.omega_spectra.OmegaSpectrum.real"]], "repeat() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.repeat"]], "reset_h0() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.reset_h0"]], "reshape() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.reshape"]], "resize() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.resize"]], "reweight() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.reweight"]], "round() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.round"]], "save_to_pickle() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.save_to_pickle"]], "searchsorted() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.searchsorted"]], "setfield() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.setfield"]], "setflags() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.setflags"]], "shape (pygwb.omega_spectra.omegaspectrum attribute)": [[25, "pygwb.omega_spectra.OmegaSpectrum.shape"]], "shift() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.shift"]], "si (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.si"]], "size (pygwb.omega_spectra.omegaspectrum attribute)": [[25, "pygwb.omega_spectra.OmegaSpectrum.size"]], "sort() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.sort"]], "squeeze() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.squeeze"]], "std() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.std"]], "step() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.step"]], "strides (pygwb.omega_spectra.omegaspectrum attribute)": [[25, "pygwb.omega_spectra.OmegaSpectrum.strides"]], "sum() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.sum"]], "swapaxes() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.swapaxes"]], "take() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.take"]], "to() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.to"]], "to_lal() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.to_lal"]], "to_pycbc() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.to_pycbc"]], "to_string() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.to_string"]], "to_value() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.to_value"]], "tobytes() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.tobytes"]], "tofile() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.tofile"]], "tolist() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.tolist"]], "tostring() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.tostring"]], "trace() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.trace"]], "transpose() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.transpose"]], "unit (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.unit"]], "update() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.update"]], "value (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.value"]], "value_at() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.value_at"]], "var() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.var"]], "view() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.view"]], "write() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.write"]], "x0 (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.x0"]], "xindex (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.xindex"]], "xspan (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.xspan"]], "xunit (pygwb.omega_spectra.omegaspectrum property)": [[25, "pygwb.omega_spectra.OmegaSpectrum.xunit"]], "zip() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.zip"]], "zpk() (pygwb.omega_spectra.omegaspectrum method)": [[25, "pygwb.omega_spectra.OmegaSpectrum.zpk"]], "reweight_spectral_object() (in module pygwb.omega_spectra)": [[26, "pygwb.omega_spectra.reweight_spectral_object"]], "pygwb.orfs": [[27, "module-pygwb.orfs"]], "sminus() (in module pygwb.orfs)": [[28, "pygwb.orfs.Sminus"]], "splus() (in module pygwb.orfs)": [[29, "pygwb.orfs.Splus"]], "t_right_left() (in module pygwb.orfs)": [[30, "pygwb.orfs.T_right_left"]], "tminus() (in module pygwb.orfs)": [[31, "pygwb.orfs.Tminus"]], "tplus() (in module pygwb.orfs)": [[32, "pygwb.orfs.Tplus"]], "vminus() (in module pygwb.orfs)": [[33, "pygwb.orfs.Vminus"]], "vplus() (in module pygwb.orfs)": [[34, "pygwb.orfs.Vplus"]], "calc_orf() (in module pygwb.orfs)": [[35, "pygwb.orfs.calc_orf"]], "omega_tangent_bisector() (in module pygwb.orfs)": [[36, "pygwb.orfs.omega_tangent_bisector"]], "tangent_vector() (in module pygwb.orfs)": [[37, "pygwb.orfs.tangent_vector"]], "pygwb.parameters": [[38, "module-pygwb.parameters"]], "n_average_segments_psd (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.N_average_segments_psd"]], "parameters (class in pygwb.parameters)": [[39, "pygwb.parameters.Parameters"]], "__call__() (pygwb.parameters.parameters method)": [[39, "pygwb.parameters.Parameters.__call__"]], "__init__() (pygwb.parameters.parameters method)": [[39, "pygwb.parameters.Parameters.__init__"]], "alpha (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.alpha"]], "alphas_delta_sigma_cut (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.alphas_delta_sigma_cut"]], "calibration_epsilon (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.calibration_epsilon"]], "channel (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.channel"]], "cluster_window (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.cluster_window"]], "coarse_grain_csd (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.coarse_grain_csd"]], "coarse_grain_psd (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.coarse_grain_psd"]], "cutoff_frequency (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.cutoff_frequency"]], "data_type (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.data_type"]], "delta_sigma_cut (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.delta_sigma_cut"]], "fhigh (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.fhigh"]], "flow (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.flow"]], "frametype (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.frametype"]], "fref (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.fref"]], "frequency_resolution (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.frequency_resolution"]], "ftype (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.ftype"]], "gate_data (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.gate_data"]], "gate_threshold (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.gate_threshold"]], "gate_tpad (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.gate_tpad"]], "gate_tzero (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.gate_tzero"]], "gate_whiten (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.gate_whiten"]], "input_sample_rate (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.input_sample_rate"]], "interferometer_list (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.interferometer_list"]], "local_data_path (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.local_data_path"]], "new_sample_rate (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.new_sample_rate"]], "notch_list_path (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.notch_list_path"]], "number_cropped_seconds (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.number_cropped_seconds"]], "overlap_factor (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.overlap_factor"]], "overlap_factor_welch (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.overlap_factor_welch"]], "parse_ifo_parameters() (pygwb.parameters.parameters method)": [[39, "pygwb.parameters.Parameters.parse_ifo_parameters"]], "polarization (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.polarization"]], "return_naive_and_averaged_sigmas (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.return_naive_and_averaged_sigmas"]], "save_data_type (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.save_data_type"]], "save_paramfile() (pygwb.parameters.parameters method)": [[39, "pygwb.parameters.Parameters.save_paramfile"]], "segment_duration (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.segment_duration"]], "t0 (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.t0"]], "tag (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.tag"]], "tf (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.tf"]], "time_shift (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.time_shift"]], "update_from_arguments() (pygwb.parameters.parameters method)": [[39, "pygwb.parameters.Parameters.update_from_arguments"]], "update_from_dictionary() (pygwb.parameters.parameters method)": [[39, "pygwb.parameters.Parameters.update_from_dictionary"]], "update_from_file() (pygwb.parameters.parameters method)": [[39, "pygwb.parameters.Parameters.update_from_file"]], "window_downsampling (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.window_downsampling"]], "window_fft_dict (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.window_fft_dict"]], "window_fft_dict_welch (pygwb.parameters.parameters attribute)": [[39, "pygwb.parameters.Parameters.window_fft_dict_welch"]], "parametershelp (class in pygwb.parameters)": [[40, "pygwb.parameters.ParametersHelp"]], "__call__() (pygwb.parameters.parametershelp class method)": [[40, "pygwb.parameters.ParametersHelp.__call__"]], "__init__() (pygwb.parameters.parametershelp method)": [[40, "pygwb.parameters.ParametersHelp.__init__"]], "pygwb.pe": [[41, "module-pygwb.pe"]], "brokenpowerlawmodel (class in pygwb.pe)": [[42, "pygwb.pe.BrokenPowerLawModel"]], "__call__() (pygwb.pe.brokenpowerlawmodel method)": [[42, "pygwb.pe.BrokenPowerLawModel.__call__"]], "__init__() (pygwb.pe.brokenpowerlawmodel method)": [[42, "pygwb.pe.BrokenPowerLawModel.__init__"]], "log_likelihood() (pygwb.pe.brokenpowerlawmodel method)": [[42, "pygwb.pe.BrokenPowerLawModel.log_likelihood"]], "log_likelihood_ij() (pygwb.pe.brokenpowerlawmodel method)": [[42, "pygwb.pe.BrokenPowerLawModel.log_likelihood_IJ"]], "log_likelihood_ratio() (pygwb.pe.brokenpowerlawmodel method)": [[42, "pygwb.pe.BrokenPowerLawModel.log_likelihood_ratio"]], "model_function() (pygwb.pe.brokenpowerlawmodel method)": [[42, "pygwb.pe.BrokenPowerLawModel.model_function"]], "noise_log_likelihood() (pygwb.pe.brokenpowerlawmodel method)": [[42, "pygwb.pe.BrokenPowerLawModel.noise_log_likelihood"]], "parameters (pygwb.pe.brokenpowerlawmodel property)": [[42, "pygwb.pe.BrokenPowerLawModel.parameters"]], "gwbmodel (class in pygwb.pe)": [[43, "pygwb.pe.GWBModel"]], "__call__() (pygwb.pe.gwbmodel method)": [[43, "pygwb.pe.GWBModel.__call__"]], "__init__() (pygwb.pe.gwbmodel method)": [[43, "pygwb.pe.GWBModel.__init__"]], "log_likelihood() (pygwb.pe.gwbmodel method)": [[43, "pygwb.pe.GWBModel.log_likelihood"]], "log_likelihood_ij() (pygwb.pe.gwbmodel method)": [[43, "pygwb.pe.GWBModel.log_likelihood_IJ"]], "log_likelihood_ratio() (pygwb.pe.gwbmodel method)": [[43, "pygwb.pe.GWBModel.log_likelihood_ratio"]], "model_function() (pygwb.pe.gwbmodel method)": [[43, "pygwb.pe.GWBModel.model_function"]], "noise_log_likelihood() (pygwb.pe.gwbmodel method)": [[43, "pygwb.pe.GWBModel.noise_log_likelihood"]], "parameters() (pygwb.pe.gwbmodel method)": [[43, "pygwb.pe.GWBModel.parameters"]], "pvpowerlawmodel (class in pygwb.pe)": [[44, "pygwb.pe.PVPowerLawModel"]], "__call__() (pygwb.pe.pvpowerlawmodel method)": [[44, "pygwb.pe.PVPowerLawModel.__call__"]], "__init__() (pygwb.pe.pvpowerlawmodel method)": [[44, "pygwb.pe.PVPowerLawModel.__init__"]], "log_likelihood() (pygwb.pe.pvpowerlawmodel method)": [[44, "pygwb.pe.PVPowerLawModel.log_likelihood"]], "log_likelihood_ij() (pygwb.pe.pvpowerlawmodel method)": [[44, "pygwb.pe.PVPowerLawModel.log_likelihood_IJ"]], "log_likelihood_ratio() (pygwb.pe.pvpowerlawmodel method)": [[44, "pygwb.pe.PVPowerLawModel.log_likelihood_ratio"]], "model_function() (pygwb.pe.pvpowerlawmodel method)": [[44, "pygwb.pe.PVPowerLawModel.model_function"]], "noise_log_likelihood() (pygwb.pe.pvpowerlawmodel method)": [[44, "pygwb.pe.PVPowerLawModel.noise_log_likelihood"]], "parameters (pygwb.pe.pvpowerlawmodel property)": [[44, "pygwb.pe.PVPowerLawModel.parameters"]], "pvpowerlawmodel2 (class in pygwb.pe)": [[45, "pygwb.pe.PVPowerLawModel2"]], "__call__() (pygwb.pe.pvpowerlawmodel2 method)": [[45, "pygwb.pe.PVPowerLawModel2.__call__"]], "__init__() (pygwb.pe.pvpowerlawmodel2 method)": [[45, "pygwb.pe.PVPowerLawModel2.__init__"]], "log_likelihood() (pygwb.pe.pvpowerlawmodel2 method)": [[45, "pygwb.pe.PVPowerLawModel2.log_likelihood"]], "log_likelihood_ij() (pygwb.pe.pvpowerlawmodel2 method)": [[45, "pygwb.pe.PVPowerLawModel2.log_likelihood_IJ"]], "log_likelihood_ratio() (pygwb.pe.pvpowerlawmodel2 method)": [[45, "pygwb.pe.PVPowerLawModel2.log_likelihood_ratio"]], "model_function() (pygwb.pe.pvpowerlawmodel2 method)": [[45, "pygwb.pe.PVPowerLawModel2.model_function"]], "noise_log_likelihood() (pygwb.pe.pvpowerlawmodel2 method)": [[45, "pygwb.pe.PVPowerLawModel2.noise_log_likelihood"]], "parameters (pygwb.pe.pvpowerlawmodel2 property)": [[45, "pygwb.pe.PVPowerLawModel2.parameters"]], "powerlawmodel (class in pygwb.pe)": [[46, "pygwb.pe.PowerLawModel"]], "__call__() (pygwb.pe.powerlawmodel method)": [[46, "pygwb.pe.PowerLawModel.__call__"]], "__init__() (pygwb.pe.powerlawmodel method)": [[46, "pygwb.pe.PowerLawModel.__init__"]], "log_likelihood() (pygwb.pe.powerlawmodel method)": [[46, "pygwb.pe.PowerLawModel.log_likelihood"]], "log_likelihood_ij() (pygwb.pe.powerlawmodel method)": [[46, "pygwb.pe.PowerLawModel.log_likelihood_IJ"]], "log_likelihood_ratio() (pygwb.pe.powerlawmodel method)": [[46, "pygwb.pe.PowerLawModel.log_likelihood_ratio"]], "model_function() (pygwb.pe.powerlawmodel method)": [[46, "pygwb.pe.PowerLawModel.model_function"]], "noise_log_likelihood() (pygwb.pe.powerlawmodel method)": [[46, "pygwb.pe.PowerLawModel.noise_log_likelihood"]], "parameters (pygwb.pe.powerlawmodel property)": [[46, "pygwb.pe.PowerLawModel.parameters"]], "schumannmodel (class in pygwb.pe)": [[47, "pygwb.pe.SchumannModel"]], "__call__() (pygwb.pe.schumannmodel method)": [[47, "pygwb.pe.SchumannModel.__call__"]], "__init__() (pygwb.pe.schumannmodel method)": [[47, "pygwb.pe.SchumannModel.__init__"]], "log_likelihood() (pygwb.pe.schumannmodel method)": [[47, "pygwb.pe.SchumannModel.log_likelihood"]], "log_likelihood_ij() (pygwb.pe.schumannmodel method)": [[47, "pygwb.pe.SchumannModel.log_likelihood_IJ"]], "log_likelihood_ratio() (pygwb.pe.schumannmodel method)": [[47, "pygwb.pe.SchumannModel.log_likelihood_ratio"]], "model_function() (pygwb.pe.schumannmodel method)": [[47, "pygwb.pe.SchumannModel.model_function"]], "noise_log_likelihood() (pygwb.pe.schumannmodel method)": [[47, "pygwb.pe.SchumannModel.noise_log_likelihood"]], "parameters (pygwb.pe.schumannmodel property)": [[47, "pygwb.pe.SchumannModel.parameters"]], "smoothbrokenpowerlawmodel (class in pygwb.pe)": [[48, "pygwb.pe.SmoothBrokenPowerLawModel"]], "__call__() (pygwb.pe.smoothbrokenpowerlawmodel method)": [[48, "pygwb.pe.SmoothBrokenPowerLawModel.__call__"]], "__init__() (pygwb.pe.smoothbrokenpowerlawmodel method)": [[48, "pygwb.pe.SmoothBrokenPowerLawModel.__init__"]], "log_likelihood() (pygwb.pe.smoothbrokenpowerlawmodel method)": [[48, "pygwb.pe.SmoothBrokenPowerLawModel.log_likelihood"]], "log_likelihood_ij() (pygwb.pe.smoothbrokenpowerlawmodel method)": [[48, "pygwb.pe.SmoothBrokenPowerLawModel.log_likelihood_IJ"]], "log_likelihood_ratio() (pygwb.pe.smoothbrokenpowerlawmodel method)": [[48, "pygwb.pe.SmoothBrokenPowerLawModel.log_likelihood_ratio"]], "model_function() (pygwb.pe.smoothbrokenpowerlawmodel method)": [[48, "pygwb.pe.SmoothBrokenPowerLawModel.model_function"]], "noise_log_likelihood() (pygwb.pe.smoothbrokenpowerlawmodel method)": [[48, "pygwb.pe.SmoothBrokenPowerLawModel.noise_log_likelihood"]], "parameters (pygwb.pe.smoothbrokenpowerlawmodel property)": [[48, "pygwb.pe.SmoothBrokenPowerLawModel.parameters"]], "tvspowerlawmodel (class in pygwb.pe)": [[49, "pygwb.pe.TVSPowerLawModel"]], "__call__() (pygwb.pe.tvspowerlawmodel method)": [[49, "pygwb.pe.TVSPowerLawModel.__call__"]], "__init__() (pygwb.pe.tvspowerlawmodel method)": [[49, "pygwb.pe.TVSPowerLawModel.__init__"]], "log_likelihood() (pygwb.pe.tvspowerlawmodel method)": [[49, "pygwb.pe.TVSPowerLawModel.log_likelihood"]], "log_likelihood_ij() (pygwb.pe.tvspowerlawmodel method)": [[49, "pygwb.pe.TVSPowerLawModel.log_likelihood_IJ"]], "log_likelihood_ratio() (pygwb.pe.tvspowerlawmodel method)": [[49, "pygwb.pe.TVSPowerLawModel.log_likelihood_ratio"]], "model_function() (pygwb.pe.tvspowerlawmodel method)": [[49, "pygwb.pe.TVSPowerLawModel.model_function"]], "noise_log_likelihood() (pygwb.pe.tvspowerlawmodel method)": [[49, "pygwb.pe.TVSPowerLawModel.noise_log_likelihood"]], "parameters (pygwb.pe.tvspowerlawmodel property)": [[49, "pygwb.pe.TVSPowerLawModel.parameters"]], "triplebrokenpowerlawmodel (class in pygwb.pe)": [[50, "pygwb.pe.TripleBrokenPowerLawModel"]], "__call__() (pygwb.pe.triplebrokenpowerlawmodel method)": [[50, "pygwb.pe.TripleBrokenPowerLawModel.__call__"]], "__init__() (pygwb.pe.triplebrokenpowerlawmodel method)": [[50, "pygwb.pe.TripleBrokenPowerLawModel.__init__"]], "log_likelihood() (pygwb.pe.triplebrokenpowerlawmodel method)": [[50, "pygwb.pe.TripleBrokenPowerLawModel.log_likelihood"]], "log_likelihood_ij() (pygwb.pe.triplebrokenpowerlawmodel method)": [[50, "pygwb.pe.TripleBrokenPowerLawModel.log_likelihood_IJ"]], "log_likelihood_ratio() (pygwb.pe.triplebrokenpowerlawmodel method)": [[50, "pygwb.pe.TripleBrokenPowerLawModel.log_likelihood_ratio"]], "model_function() (pygwb.pe.triplebrokenpowerlawmodel method)": [[50, "pygwb.pe.TripleBrokenPowerLawModel.model_function"]], "noise_log_likelihood() (pygwb.pe.triplebrokenpowerlawmodel method)": [[50, "pygwb.pe.TripleBrokenPowerLawModel.noise_log_likelihood"]], "parameters (pygwb.pe.triplebrokenpowerlawmodel property)": [[50, "pygwb.pe.TripleBrokenPowerLawModel.parameters"]], "pygwb.postprocessing": [[51, "module-pygwb.postprocessing"]], "calc_y_sigma_from_yf_sigmaf() (in module pygwb.postprocessing)": [[52, "pygwb.postprocessing.calc_Y_sigma_from_Yf_sigmaf"]], "calculate_point_estimate_sigma_spectra() (in module pygwb.postprocessing)": [[53, "pygwb.postprocessing.calculate_point_estimate_sigma_spectra"]], "combine_spectra_with_sigma_weights() (in module pygwb.postprocessing)": [[54, "pygwb.postprocessing.combine_spectra_with_sigma_weights"]], "odd_even_segment_postprocessing() (in module pygwb.postprocessing)": [[55, "pygwb.postprocessing.odd_even_segment_postprocessing"]], "postprocess_y_sigma() (in module pygwb.postprocessing)": [[56, "pygwb.postprocessing.postprocess_Y_sigma"]], "pygwb.preprocessing": [[57, "module-pygwb.preprocessing"]], "apply_high_pass_filter() (in module pygwb.preprocessing)": [[58, "pygwb.preprocessing.apply_high_pass_filter"]], "preprocessing_data_channel_name() (in module pygwb.preprocessing)": [[59, "pygwb.preprocessing.preprocessing_data_channel_name"]], "preprocessing_data_gwpy_timeseries() (in module pygwb.preprocessing)": [[60, "pygwb.preprocessing.preprocessing_data_gwpy_timeseries"]], "preprocessing_data_timeseries_array() (in module pygwb.preprocessing)": [[61, "pygwb.preprocessing.preprocessing_data_timeseries_array"]], "read_data() (in module pygwb.preprocessing)": [[62, "pygwb.preprocessing.read_data"]], "resample_filter() (in module pygwb.preprocessing)": [[63, "pygwb.preprocessing.resample_filter"]], "self_gate_data() (in module pygwb.preprocessing)": [[64, "pygwb.preprocessing.self_gate_data"]], "set_start_time() (in module pygwb.preprocessing)": [[65, "pygwb.preprocessing.set_start_time"]], "shift_timeseries() (in module pygwb.preprocessing)": [[66, "pygwb.preprocessing.shift_timeseries"]], "pygwb.simulator": [[67, "module-pygwb.simulator"]], "simulator (class in pygwb.simulator)": [[68, "pygwb.simulator.Simulator"]], "__call__() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.__call__"]], "__init__() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.__init__"]], "compute_eigval_eigvec() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.compute_eigval_eigvec"]], "covariance_matrix() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.covariance_matrix"]], "generate_data() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.generate_data"]], "generate_freq_domain_data() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.generate_freq_domain_data"]], "get_data_for_interferometers() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.get_data_for_interferometers"]], "get_frequencies() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.get_frequencies"]], "get_noise_psd_array() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.get_noise_PSD_array"]], "get_orf() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.get_orf"]], "inject_cbc() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.inject_CBC"]], "orf_to_array() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.orf_to_array"]], "simulate() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.simulate"]], "splice_segments() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.splice_segments"]], "transform_to_correlated_data() (pygwb.simulator.simulator method)": [[68, "pygwb.simulator.Simulator.transform_to_correlated_data"]], "pygwb.spectral": [[69, "module-pygwb.spectral"]], "before_after_average() (in module pygwb.spectral)": [[70, "pygwb.spectral.before_after_average"]], "coarse_grain() (in module pygwb.spectral)": [[71, "pygwb.spectral.coarse_grain"]], "coarse_grain_exact() (in module pygwb.spectral)": [[72, "pygwb.spectral.coarse_grain_exact"]], "coarse_grain_naive() (in module pygwb.spectral)": [[73, "pygwb.spectral.coarse_grain_naive"]], "coarse_grain_spectrogram() (in module pygwb.spectral)": [[74, "pygwb.spectral.coarse_grain_spectrogram"]], "cross_spectral_density() (in module pygwb.spectral)": [[75, "pygwb.spectral.cross_spectral_density"]], "fftgram() (in module pygwb.spectral)": [[76, "pygwb.spectral.fftgram"]], "power_spectral_density() (in module pygwb.spectral)": [[77, "pygwb.spectral.power_spectral_density"]], "pwelch_psd() (in module pygwb.spectral)": [[78, "pygwb.spectral.pwelch_psd"]], "running_mean() (in module pygwb.spectral)": [[79, "pygwb.spectral.running_mean"]], "pygwb.statistical_checks": [[80, "module-pygwb.statistical_checks"]], "statisticalchecks (class in pygwb.statistical_checks)": [[81, "pygwb.statistical_checks.StatisticalChecks"]], "__call__() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.__call__"]], "__init__() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.__init__"]], "coherence_pdf() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.coherence_pdf"]], "coherence_pvalue() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.coherence_pvalue"]], "coherence_threshold() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.coherence_threshold"]], "compute_ifft_integrand() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.compute_ifft_integrand"]], "compute_running_quantities() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.compute_running_quantities"]], "generate_all_plots() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.generate_all_plots"]], "get_data_after_dsc() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.get_data_after_dsc"]], "plot_ifft_point_estimate_integrand() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_IFFT_point_estimate_integrand"]], "plot_ks_test() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_KS_test"]], "plot_snr_spectrum() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_SNR_spectrum"]], "plot_coherence_spectrum() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_coherence_spectrum"]], "plot_cumulative_snr_spectrum() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_cumulative_SNR_spectrum"]], "plot_cumulative_sensitivity() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_cumulative_sensitivity"]], "plot_hist_coherence() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_hist_coherence"]], "plot_hist_omega_pre_post_dsc() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_hist_omega_pre_post_dsc"]], "plot_hist_sigma_dsc() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_hist_sigma_dsc"]], "plot_hist_sigma_squared() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_hist_sigma_squared"]], "plot_imag_snr_spectrum() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_imag_SNR_spectrum"]], "plot_omega_sigma_in_time() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_omega_sigma_in_time"]], "plot_omega_time_fit() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_omega_time_fit"]], "plot_real_snr_spectrum() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_real_SNR_spectrum"]], "plot_running_point_estimate() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_running_point_estimate"]], "plot_running_sigma() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_running_sigma"]], "plot_scatter_omega_sigma_dsc() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_scatter_omega_sigma_dsc"]], "plot_scatter_sigma_dsc() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_scatter_sigma_dsc"]], "plot_sigma_spectrum() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_sigma_spectrum"]], "plot_sigma_time_fit() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.plot_sigma_time_fit"]], "save_all_statements() (pygwb.statistical_checks.statisticalchecks method)": [[81, "pygwb.statistical_checks.StatisticalChecks.save_all_statements"]], "run_statistical_checks_from_file() (in module pygwb.statistical_checks)": [[82, "pygwb.statistical_checks.run_statistical_checks_from_file"]], "sortingfunction() (in module pygwb.statistical_checks)": [[83, "pygwb.statistical_checks.sortingFunction"]], "pygwb.util": [[84, "module-pygwb.util"]], "statks() (in module pygwb.util)": [[85, "pygwb.util.StatKS"]], "calc_bias() (in module pygwb.util)": [[86, "pygwb.util.calc_bias"]], "calc_rho() (in module pygwb.util)": [[87, "pygwb.util.calc_rho"]], "calc_rho1() (in module pygwb.util)": [[88, "pygwb.util.calc_rho1"]], "effective_welch_averages() (in module pygwb.util)": [[89, "pygwb.util.effective_welch_averages"]], "get_window_tuple() (in module pygwb.util)": [[90, "pygwb.util.get_window_tuple"]], "interpolate_frequency_series() (in module pygwb.util)": [[91, "pygwb.util.interpolate_frequency_series"]], "omega_to_power() (in module pygwb.util)": [[92, "pygwb.util.omega_to_power"]], "parse_window_dict() (in module pygwb.util)": [[93, "pygwb.util.parse_window_dict"]], "window_factors() (in module pygwb.util)": [[94, "pygwb.util.window_factors"]]}})